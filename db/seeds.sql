--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: acls; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY acls (id, user_id, language, slug, created_at, updated_at) FROM stdin;
1	9	php	rna-transcription	2015-09-11 14:27:07	2015-09-11 14:27:07
2	9	ruby	hamming	2015-08-03 22:01:11	2015-08-03 22:01:11
8	9	javascript	hello-world	2015-08-28 08:14:05	2015-08-28 08:14:05
9	11	javascript	etl	2015-12-08 01:13:53	2015-12-08 01:13:53
10	11	ruby	difference-of-squares	2015-12-23 14:52:15	2015-12-23 14:52:15
12	11	csharp	hamming	2015-12-13 00:20:44	2015-12-13 00:20:44
13	11	python	etl	2015-12-10 07:48:40	2015-12-10 07:48:40
14	11	ruby	rna-transcription	2015-12-29 02:15:25	2015-12-29 02:15:25
15	11	python	word-count	2015-12-27 16:50:36	2015-12-27 16:50:36
17	11	ruby	phone-number	2015-12-08 14:34:31	2015-12-08 14:34:31
18	11	ruby	word-count	2015-11-29 16:12:11	2015-11-29 16:12:11
27	11	ruby	beer-song	2015-11-29 02:27:35	2015-11-29 02:27:35
28	11	python	leap	2015-12-11 17:30:46	2015-12-11 17:30:46
29	11	ruby	atbash-cipher	2015-12-13 09:02:55	2015-12-13 09:02:55
30	11	ruby	series	2015-12-02 05:14:30	2015-12-02 05:14:30
32	11	go	house	2016-01-11 00:56:13	2016-01-11 00:56:13
33	11	javascript	rna-transcription	2015-12-01 12:53:56	2015-12-01 12:53:56
37	15	ruby	series	2015-11-21 02:37:11	2015-11-21 02:37:11
39	28	ruby	hello-world	2015-08-27 05:56:34	2015-08-27 05:56:34
40	28	python	word-count	2015-09-18 08:24:04	2015-09-18 08:24:04
42	28	php	rna-transcription	2015-08-31 05:58:57	2015-08-31 05:58:57
43	31	python	meetup	2016-01-01 22:55:14	2016-01-01 22:55:14
44	31	scala	accumulate	2016-01-05 05:26:00	2016-01-05 05:26:00
46	31	csharp	sieve	2016-01-07 18:58:33	2016-01-07 18:58:33
47	31	coffeescript	bob	2016-01-07 17:00:15	2016-01-07 17:00:15
48	33	ruby	phone-number	2015-11-20 03:34:47	2015-11-20 03:34:47
49	33	python	difference-of-squares	2015-10-30 03:03:37	2015-10-30 03:03:37
50	33	javascript	hamming	2015-09-22 19:55:14	2015-09-22 19:55:14
51	33	go	house	2015-07-29 13:37:36	2015-07-29 13:37:36
52	38	ruby	grade-school	2015-08-18 15:43:22	2015-08-18 15:43:22
53	40	python	bob	2015-08-07 10:03:03	2015-08-07 10:03:03
55	44	ruby	phone-number	2015-09-09 23:12:33	2015-09-09 23:12:33
56	46	csharp	sieve	2015-08-21 02:33:09	2015-08-21 02:33:09
57	48	python	atbash-cipher	2015-09-30 17:12:06	2015-09-30 17:12:06
60	48	ruby	robot-name	2015-10-24 12:53:34	2015-10-24 12:53:34
61	48	javascript	word-count	2015-09-15 17:07:36	2015-09-15 17:07:36
62	48	haskell	space-age	2015-09-12 05:37:36	2015-09-12 05:37:36
63	26	javascript	space-age	2015-12-31 11:56:43	2015-12-31 11:56:43
64	26	csharp	difference-of-squares	2015-11-28 23:39:58	2015-11-28 23:39:58
68	7	go	house	2015-07-25 14:35:00	2015-07-25 14:35:00
69	7	ruby	anagram	2015-07-12 21:46:21	2015-07-12 21:46:21
73	7	csharp	bob	2015-11-05 13:07:47	2015-11-05 13:07:47
74	23	haskell	anagram	2015-11-12 03:27:50	2015-11-12 03:27:50
77	23	python	bob	2015-11-20 12:32:42	2015-11-20 12:32:42
78	17	python	allergies	2015-08-24 01:40:23	2015-08-24 01:40:23
79	17	javascript	leap	2015-09-11 13:10:57	2015-09-11 13:10:57
80	17	java	bob	2015-08-02 01:39:01	2015-08-02 01:39:01
83	17	python	robot-name	2015-09-11 21:50:32	2015-09-11 21:50:32
84	17	python	difference-of-squares	2015-08-10 07:03:33	2015-08-10 07:03:33
85	20	javascript	etl	2015-09-11 22:09:08	2015-09-11 22:09:08
86	20	python	rna-transcription	2015-07-11 09:22:47	2015-07-11 09:22:47
87	20	javascript	hello-world	2015-07-03 16:01:06	2015-07-03 16:01:06
88	20	php	gigasecond	2015-07-22 13:01:33	2015-07-22 13:01:33
89	20	python	word-count	2015-10-14 20:52:19	2015-10-14 20:52:19
91	21	javascript	etl	2015-10-07 07:21:49	2015-10-07 07:21:49
92	36	ruby	bob	2015-10-10 08:26:46	2015-10-10 08:26:46
93	36	cpp	hamming	2015-09-26 03:13:37	2015-09-26 03:13:37
95	36	python	leap	2015-09-06 23:59:02	2015-09-06 23:59:02
96	30	ruby	hello-world	2015-10-03 10:43:50	2015-10-03 10:43:50
97	30	javascript	hello-world	2015-10-05 00:26:32	2015-10-05 00:26:32
98	35	ruby	word-count	2015-10-23 00:22:25	2015-10-23 00:22:25
107	35	java	bob	2015-11-21 03:23:39	2015-11-21 03:23:39
110	35	ruby	rna-transcription	2015-11-08 10:22:12	2015-11-08 10:22:12
112	35	javascript	bob	2015-11-15 02:38:00	2015-11-15 02:38:00
119	14	ruby	hamming	2016-01-09 19:32:48	2016-01-09 19:32:48
120	14	python	word-count	2016-01-08 16:08:40	2016-01-08 16:08:40
122	41	ruby	atbash-cipher	2015-08-30 04:42:16	2015-08-30 04:42:16
123	41	python	gigasecond	2015-09-04 03:20:04	2015-09-04 03:20:04
125	41	haskell	robot-name	2015-08-05 05:04:56	2015-08-05 05:04:56
126	41	javascript	triangle	2015-08-22 21:41:21	2015-08-22 21:41:21
128	41	ruby	phone-number	2015-11-29 07:50:51	2015-11-29 07:50:51
129	41	scala	anagram	2015-10-14 23:07:42	2015-10-14 23:07:42
130	41	python	largest-series-product	2015-09-10 15:48:27	2015-09-10 15:48:27
131	41	php	gigasecond	2015-09-13 16:06:54	2015-09-13 16:06:54
132	41	python	word-count	2015-10-01 08:23:14	2015-10-01 08:23:14
134	34	ruby	phone-number	2015-11-16 06:03:33	2015-11-16 06:03:33
135	34	ruby	grade-school	2015-11-21 18:27:35	2015-11-21 18:27:35
136	34	ruby	word-count	2015-11-09 13:36:07	2015-11-09 13:36:07
145	34	cpp	anagram	2015-11-16 19:31:33	2015-11-16 19:31:33
146	34	ruby	nucleotide-count	2015-12-06 08:23:24	2015-12-06 08:23:24
148	34	clojure	point-mutations	2015-11-23 21:46:02	2015-11-23 21:46:02
150	34	java	bob	2015-11-21 12:54:35	2015-11-21 12:54:35
153	34	ruby	anagram	2015-12-05 05:35:09	2015-12-05 05:35:09
157	34	lua	hello-world	2015-11-20 17:58:27	2015-11-20 17:58:27
158	34	ruby	hamming	2015-11-11 05:54:17	2015-11-11 05:54:17
159	34	csharp	bob	2015-11-09 11:33:45	2015-11-09 11:33:45
160	16	php	gigasecond	2015-07-13 22:46:09	2015-07-13 22:46:09
161	16	python	grains	2015-10-24 01:12:15	2015-10-24 01:12:15
162	18	ruby	robot-name	2015-09-23 06:47:05	2015-09-23 06:47:05
163	18	ruby	difference-of-squares	2015-09-23 12:51:40	2015-09-23 12:51:40
165	18	python	secret-handshake	2015-10-06 02:52:33	2015-10-06 02:52:33
166	18	ruby	nucleotide-count	2015-10-24 20:46:48	2015-10-24 20:46:48
168	18	csharp	difference-of-squares	2015-10-01 04:31:02	2015-10-01 04:31:02
172	18	ruby	hamming	2015-11-04 14:32:00	2015-11-04 14:32:00
173	24	ruby	grains	2015-11-05 23:52:43	2015-11-05 23:52:43
174	24	ruby	phone-number	2015-10-22 21:09:22	2015-10-22 21:09:22
175	24	haskell	rna-transcription	2015-11-05 18:59:51	2015-11-05 18:59:51
176	42	clojure	rna-transcription	2015-08-26 08:13:02	2015-08-26 08:13:02
178	42	cpp	bob	2015-06-05 05:35:07	2015-06-05 05:35:07
181	42	haskell	allergies	2015-09-03 13:09:37	2015-09-03 13:09:37
182	27	ruby	word-count	2015-08-30 01:04:13	2015-08-30 01:04:13
191	27	scala	bob	2015-08-18 03:06:59	2015-08-18 03:06:59
192	27	javascript	word-count	2015-09-17 20:27:30	2015-09-17 20:27:30
193	27	ruby	grains	2015-11-19 06:06:25	2015-11-19 06:06:25
194	27	clojure	rna-transcription	2015-09-24 04:53:08	2015-09-24 04:53:08
196	27	ruby	rna-transcription	2015-11-26 10:58:57	2015-11-26 10:58:57
197	27	php	gigasecond	2015-09-20 07:03:49	2015-09-20 07:03:49
198	27	haskell	triangle	2015-08-14 10:37:58	2015-08-14 10:37:58
199	45	csharp	bob	2015-10-06 07:36:00	2015-10-06 07:36:00
200	45	python	bob	2015-10-06 03:05:33	2015-10-06 03:05:33
202	45	javascript	bob	2015-09-07 10:45:55	2015-09-07 10:45:55
204	45	erlang	accumulate	2015-09-26 15:53:17	2015-09-26 15:53:17
205	45	javascript	pythagorean-triplet	2015-09-07 22:01:34	2015-09-07 22:01:34
206	45	python	phone-number	2015-09-07 06:09:05	2015-09-07 06:09:05
207	45	ruby	word-count	2015-09-24 03:56:47	2015-09-24 03:56:47
208	45	python	meetup	2015-09-13 00:13:13	2015-09-13 00:13:13
209	45	ruby	anagram	2015-11-19 14:14:12	2015-11-19 14:14:12
213	45	ruby	difference-of-squares	2015-10-27 08:27:19	2015-10-27 08:27:19
215	45	clojure	anagram	2015-12-02 06:14:40	2015-12-02 06:14:40
\.


--
-- Name: acls_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('acls_id_seq', 215, true);


--
-- Data for Name: comment_threads; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comment_threads (id, user_id, comment_id, body, html_body, created_at, updated_at) FROM stdin;
\.


--
-- Name: comment_threads_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comment_threads_id_seq', 1, false);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY comments (id, user_id, submission_id, body, html_body, created_at, updated_at) FROM stdin;
1	9	1	A COMMENT	\N	2015-09-11 14:36:37	2015-09-11 14:36:37
2	29	1	A COMMENT	\N	2015-09-18 02:08:22	2015-09-18 02:08:22
3	12	1	A COMMENT	\N	2015-09-28 02:47:09	2015-09-28 02:47:09
4	48	1	A COMMENT	\N	2015-10-23 13:35:03	2015-10-23 13:35:03
5	22	1	A COMMENT	\N	2015-11-17 11:07:16	2015-11-17 11:07:16
6	28	1	A COMMENT	\N	2015-11-22 03:26:54	2015-11-22 03:26:54
7	33	1	A COMMENT	\N	2015-12-31 11:45:54	2015-12-31 11:45:54
8	15	1	A COMMENT	\N	2016-01-12 14:26:05	2016-01-12 14:26:05
9	2	2	A COMMENT	\N	2015-09-25 19:30:32	2015-09-25 19:30:32
10	46	2	A COMMENT	\N	2015-09-27 18:42:28	2015-09-27 18:42:28
11	15	2	A COMMENT	\N	2015-10-31 02:01:34	2015-10-31 02:01:34
12	15	2	A COMMENT	\N	2015-11-03 23:40:47	2015-11-03 23:40:47
13	9	2	A COMMENT	\N	2015-11-29 10:41:06	2015-11-29 10:41:06
14	4	2	A COMMENT	\N	2015-12-29 02:32:35	2015-12-29 02:32:35
15	11	2	A COMMENT	\N	2015-12-31 12:26:09	2015-12-31 12:26:09
16	9	3	A COMMENT	\N	2015-08-29 18:54:39	2015-08-29 18:54:39
17	15	5	A COMMENT	\N	2015-11-03 13:18:24	2015-11-03 13:18:24
18	33	5	A COMMENT	\N	2015-11-04 10:04:42	2015-11-04 10:04:42
19	9	6	A COMMENT	\N	2015-10-25 18:49:22	2015-10-25 18:49:22
20	46	6	A COMMENT	\N	2015-10-26 11:45:37	2015-10-26 11:45:37
21	46	6	A COMMENT	\N	2015-11-19 19:10:42	2015-11-19 19:10:42
22	28	6	A COMMENT	\N	2015-11-27 07:01:31	2015-11-27 07:01:31
23	48	6	A COMMENT	\N	2015-12-18 14:03:47	2015-12-18 14:03:47
24	31	6	A COMMENT	\N	2015-12-27 21:37:12	2015-12-27 21:37:12
25	11	7	A COMMENT	\N	2015-12-21 17:15:04	2015-12-21 17:15:04
26	40	7	A COMMENT	\N	2016-01-08 18:40:14	2016-01-08 18:40:14
27	9	8	A COMMENT	\N	2015-08-28 08:18:53	2015-08-28 08:18:53
28	11	8	A COMMENT	\N	2015-09-07 09:48:08	2015-09-07 09:48:08
29	4	8	A COMMENT	\N	2015-09-24 02:08:24	2015-09-24 02:08:24
30	40	8	A COMMENT	\N	2015-10-24 02:14:25	2015-10-24 02:14:25
31	38	8	A COMMENT	\N	2015-10-29 00:12:59	2015-10-29 00:12:59
32	2	8	A COMMENT	\N	2015-10-31 16:49:48	2015-10-31 16:49:48
33	11	9	A COMMENT	\N	2015-12-08 01:18:34	2015-12-08 01:18:34
34	29	9	A COMMENT	\N	2015-12-28 20:25:58	2015-12-28 20:25:58
35	33	9	A COMMENT	\N	2015-12-31 13:53:20	2015-12-31 13:53:20
36	4	9	A COMMENT	\N	2016-01-03 21:55:21	2016-01-03 21:55:21
37	46	9	A COMMENT	\N	2016-01-05 16:17:04	2016-01-05 16:17:04
38	11	10	A COMMENT	\N	2015-12-28 17:17:53	2015-12-28 17:17:53
39	12	10	A COMMENT	\N	2015-12-29 11:25:54	2015-12-29 11:25:54
40	4	10	A COMMENT	\N	2015-12-30 04:48:15	2015-12-30 04:48:15
41	40	10	A COMMENT	\N	2015-12-31 20:04:38	2015-12-31 20:04:38
42	33	11	A COMMENT	\N	2015-12-25 20:47:15	2015-12-25 20:47:15
43	44	11	A COMMENT	\N	2015-12-27 08:10:25	2015-12-27 08:10:25
44	22	11	A COMMENT	\N	2016-01-01 13:53:58	2016-01-01 13:53:58
45	15	11	A COMMENT	\N	2016-01-05 17:09:55	2016-01-05 17:09:55
46	31	11	A COMMENT	\N	2016-01-05 23:29:14	2016-01-05 23:29:14
47	22	11	A COMMENT	\N	2016-01-06 08:34:10	2016-01-06 08:34:10
48	46	11	A COMMENT	\N	2016-01-09 02:57:11	2016-01-09 02:57:11
49	2	11	A COMMENT	\N	2016-01-11 22:52:29	2016-01-11 22:52:29
50	29	11	A COMMENT	\N	2016-01-12 07:56:48	2016-01-12 07:56:48
51	40	11	A COMMENT	\N	2016-01-13 08:41:02	2016-01-13 08:41:02
52	11	12	A COMMENT	\N	2015-12-13 00:27:58	2015-12-13 00:27:58
53	40	12	A COMMENT	\N	2015-12-16 08:41:58	2015-12-16 08:41:58
54	31	12	A COMMENT	\N	2015-12-18 20:39:46	2015-12-18 20:39:46
55	40	12	A COMMENT	\N	2015-12-26 15:37:25	2015-12-26 15:37:25
56	33	12	A COMMENT	\N	2015-12-31 17:57:22	2015-12-31 17:57:22
57	3	12	A COMMENT	\N	2016-01-03 04:39:56	2016-01-03 04:39:56
58	15	12	A COMMENT	\N	2016-01-04 13:35:39	2016-01-04 13:35:39
59	3	12	A COMMENT	\N	2016-01-06 09:46:05	2016-01-06 09:46:05
60	11	13	A COMMENT	\N	2015-12-10 07:58:12	2015-12-10 07:58:12
61	33	13	A COMMENT	\N	2015-12-13 13:10:15	2015-12-13 13:10:15
62	38	13	A COMMENT	\N	2015-12-18 05:35:42	2015-12-18 05:35:42
63	44	13	A COMMENT	\N	2015-12-22 10:36:54	2015-12-22 10:36:54
64	4	13	A COMMENT	\N	2015-12-24 07:49:31	2015-12-24 07:49:31
65	48	13	A COMMENT	\N	2015-12-25 11:34:36	2015-12-25 11:34:36
66	12	13	A COMMENT	\N	2016-01-05 03:19:19	2016-01-05 03:19:19
67	29	13	A COMMENT	\N	2016-01-11 09:05:19	2016-01-11 09:05:19
68	11	14	A COMMENT	\N	2015-12-29 02:24:50	2015-12-29 02:24:50
69	12	14	A COMMENT	\N	2015-12-29 18:18:59	2015-12-29 18:18:59
70	44	14	A COMMENT	\N	2015-12-29 22:45:59	2015-12-29 22:45:59
71	46	14	A COMMENT	\N	2016-01-06 05:11:25	2016-01-06 05:11:25
72	31	14	A COMMENT	\N	2016-01-07 01:25:34	2016-01-07 01:25:34
73	40	14	A COMMENT	\N	2016-01-08 02:41:31	2016-01-08 02:41:31
74	11	14	A COMMENT	\N	2016-01-09 15:06:27	2016-01-09 15:06:27
75	3	14	A COMMENT	\N	2016-01-09 17:30:17	2016-01-09 17:30:17
76	33	14	A COMMENT	\N	2016-01-11 17:27:52	2016-01-11 17:27:52
77	3	14	A COMMENT	\N	2016-01-12 07:51:30	2016-01-12 07:51:30
78	4	15	A COMMENT	\N	2015-12-31 01:16:14	2015-12-31 01:16:14
79	2	15	A COMMENT	\N	2016-01-03 01:45:23	2016-01-03 01:45:23
80	15	15	A COMMENT	\N	2016-01-03 11:49:36	2016-01-03 11:49:36
81	28	15	A COMMENT	\N	2016-01-03 15:19:44	2016-01-03 15:19:44
82	11	16	A COMMENT	\N	2016-01-04 11:28:10	2016-01-04 11:28:10
83	11	18	A COMMENT	\N	2015-11-29 16:21:57	2015-11-29 16:21:57
84	29	18	A COMMENT	\N	2015-11-30 16:15:19	2015-11-30 16:15:19
85	46	18	A COMMENT	\N	2015-12-04 15:18:31	2015-12-04 15:18:31
86	15	18	A COMMENT	\N	2015-12-08 08:27:52	2015-12-08 08:27:52
87	46	18	A COMMENT	\N	2015-12-15 06:13:45	2015-12-15 06:13:45
88	11	18	A COMMENT	\N	2015-12-23 16:22:09	2015-12-23 16:22:09
89	11	19	A COMMENT	\N	2015-12-04 12:12:19	2015-12-04 12:12:19
90	9	21	A COMMENT	\N	2015-12-21 00:00:29	2015-12-21 00:00:29
91	3	21	A COMMENT	\N	2015-12-21 07:48:25	2015-12-21 07:48:25
92	33	21	A COMMENT	\N	2015-12-25 13:24:06	2015-12-25 13:24:06
93	33	21	A COMMENT	\N	2016-01-04 17:45:08	2016-01-04 17:45:08
94	4	21	A COMMENT	\N	2016-01-07 03:32:00	2016-01-07 03:32:00
95	33	22	A COMMENT	\N	2015-12-18 03:16:53	2015-12-18 03:16:53
96	28	22	A COMMENT	\N	2015-12-27 10:29:03	2015-12-27 10:29:03
97	31	22	A COMMENT	\N	2015-12-31 03:16:52	2015-12-31 03:16:52
98	3	22	A COMMENT	\N	2016-01-09 23:02:11	2016-01-09 23:02:11
99	11	23	A COMMENT	\N	2015-12-21 11:44:50	2015-12-21 11:44:50
100	3	24	A COMMENT	\N	2015-12-22 00:19:25	2015-12-22 00:19:25
101	48	24	A COMMENT	\N	2015-12-27 16:07:52	2015-12-27 16:07:52
102	3	24	A COMMENT	\N	2016-01-04 19:10:01	2016-01-04 19:10:01
103	33	24	A COMMENT	\N	2016-01-05 23:39:52	2016-01-05 23:39:52
104	29	24	A COMMENT	\N	2016-01-06 03:01:16	2016-01-06 03:01:16
105	31	25	A COMMENT	\N	2015-12-24 04:31:19	2015-12-24 04:31:19
106	15	25	A COMMENT	\N	2015-12-25 21:49:05	2015-12-25 21:49:05
107	3	25	A COMMENT	\N	2015-12-31 02:12:26	2015-12-31 02:12:26
108	29	25	A COMMENT	\N	2016-01-01 21:57:15	2016-01-01 21:57:15
109	12	25	A COMMENT	\N	2016-01-03 00:00:32	2016-01-03 00:00:32
110	9	25	A COMMENT	\N	2016-01-05 08:32:29	2016-01-05 08:32:29
111	9	25	A COMMENT	\N	2016-01-05 17:23:46	2016-01-05 17:23:46
112	2	25	A COMMENT	\N	2016-01-08 23:25:58	2016-01-08 23:25:58
113	28	29	A COMMENT	\N	2015-12-17 22:48:41	2015-12-17 22:48:41
114	38	29	A COMMENT	\N	2015-12-31 12:42:38	2015-12-31 12:42:38
115	9	31	A COMMENT	\N	2015-12-11 14:46:14	2015-12-11 14:46:14
116	4	31	A COMMENT	\N	2015-12-11 23:15:09	2015-12-11 23:15:09
117	2	31	A COMMENT	\N	2015-12-19 09:17:36	2015-12-19 09:17:36
118	44	31	A COMMENT	\N	2015-12-19 19:23:04	2015-12-19 19:23:04
119	22	31	A COMMENT	\N	2015-12-22 08:36:19	2015-12-22 08:36:19
120	38	31	A COMMENT	\N	2015-12-22 14:16:31	2015-12-22 14:16:31
121	12	31	A COMMENT	\N	2016-01-02 04:11:32	2016-01-02 04:11:32
122	3	31	A COMMENT	\N	2016-01-11 04:56:13	2016-01-11 04:56:13
123	15	31	A COMMENT	\N	2016-01-11 23:18:11	2016-01-11 23:18:11
124	22	32	A COMMENT	\N	2016-01-11 05:50:54	2016-01-11 05:50:54
125	44	33	A COMMENT	\N	2015-12-13 23:58:32	2015-12-13 23:58:32
126	38	33	A COMMENT	\N	2015-12-15 05:39:23	2015-12-15 05:39:23
127	38	33	A COMMENT	\N	2015-12-16 16:11:31	2015-12-16 16:11:31
128	11	33	A COMMENT	\N	2015-12-18 21:36:29	2015-12-18 21:36:29
129	15	33	A COMMENT	\N	2016-01-05 06:20:44	2016-01-05 06:20:44
130	40	34	A COMMENT	\N	2015-12-27 22:18:19	2015-12-27 22:18:19
131	31	34	A COMMENT	\N	2015-12-29 04:42:27	2015-12-29 04:42:27
132	29	34	A COMMENT	\N	2015-12-30 21:30:37	2015-12-30 21:30:37
133	11	34	A COMMENT	\N	2016-01-03 08:53:12	2016-01-03 08:53:12
134	29	35	A COMMENT	\N	2016-01-04 08:38:30	2016-01-04 08:38:30
135	11	36	A COMMENT	\N	2015-12-27 20:05:24	2015-12-27 20:05:24
136	33	36	A COMMENT	\N	2016-01-08 06:36:45	2016-01-08 06:36:45
137	46	38	A COMMENT	\N	2015-12-13 05:34:07	2015-12-13 05:34:07
138	2	38	A COMMENT	\N	2015-12-20 02:15:28	2015-12-20 02:15:28
139	40	38	A COMMENT	\N	2016-01-03 06:42:44	2016-01-03 06:42:44
140	5	38	A COMMENT	\N	2016-01-03 18:08:58	2016-01-03 18:08:58
141	31	38	A COMMENT	\N	2016-01-12 14:16:39	2016-01-12 14:16:39
142	12	38	A COMMENT	\N	2016-01-13 11:12:41	2016-01-13 11:12:41
143	28	39	A COMMENT	\N	2015-08-27 06:03:14	2015-08-27 06:03:14
144	48	39	A COMMENT	\N	2015-09-26 03:29:30	2015-09-26 03:29:30
145	28	39	A COMMENT	\N	2015-10-09 14:50:37	2015-10-09 14:50:37
146	44	39	A COMMENT	\N	2015-10-20 15:38:51	2015-10-20 15:38:51
147	15	39	A COMMENT	\N	2015-11-06 23:02:57	2015-11-06 23:02:57
148	40	39	A COMMENT	\N	2015-11-21 12:54:34	2015-11-21 12:54:34
149	28	39	A COMMENT	\N	2015-12-01 17:06:39	2015-12-01 17:06:39
150	4	39	A COMMENT	\N	2015-12-05 18:32:10	2015-12-05 18:32:10
151	46	39	A COMMENT	\N	2016-01-09 05:27:10	2016-01-09 05:27:10
152	28	41	A COMMENT	\N	2015-11-21 09:21:52	2015-11-21 09:21:52
153	3	41	A COMMENT	\N	2015-11-27 18:21:11	2015-11-27 18:21:11
154	22	41	A COMMENT	\N	2015-12-06 15:10:07	2015-12-06 15:10:07
155	38	41	A COMMENT	\N	2015-12-09 19:11:52	2015-12-09 19:11:52
156	12	41	A COMMENT	\N	2015-12-21 03:43:30	2015-12-21 03:43:30
157	40	41	A COMMENT	\N	2015-12-21 06:12:00	2015-12-21 06:12:00
158	48	41	A COMMENT	\N	2015-12-22 02:33:36	2015-12-22 02:33:36
159	4	41	A COMMENT	\N	2016-01-01 15:53:06	2016-01-01 15:53:06
160	40	41	A COMMENT	\N	2016-01-05 13:31:14	2016-01-05 13:31:14
161	46	41	A COMMENT	\N	2016-01-12 11:06:18	2016-01-12 11:06:18
162	46	41	A COMMENT	\N	2016-01-13 12:43:26	2016-01-13 12:43:26
163	12	43	A COMMENT	\N	2016-01-08 11:56:52	2016-01-08 11:56:52
164	48	43	A COMMENT	\N	2016-01-11 05:34:13	2016-01-11 05:34:13
165	28	44	A COMMENT	\N	2016-01-07 20:44:42	2016-01-07 20:44:42
166	38	44	A COMMENT	\N	2016-01-09 00:49:01	2016-01-09 00:49:01
167	29	44	A COMMENT	\N	2016-01-10 15:44:22	2016-01-10 15:44:22
168	15	44	A COMMENT	\N	2016-01-10 22:43:16	2016-01-10 22:43:16
169	31	45	A COMMENT	\N	2016-01-06 21:31:13	2016-01-06 21:31:13
170	4	45	A COMMENT	\N	2016-01-07 20:03:11	2016-01-07 20:03:11
171	9	45	A COMMENT	\N	2016-01-08 21:21:49	2016-01-08 21:21:49
172	29	45	A COMMENT	\N	2016-01-09 10:05:50	2016-01-09 10:05:50
173	15	45	A COMMENT	\N	2016-01-10 00:12:23	2016-01-10 00:12:23
174	2	45	A COMMENT	\N	2016-01-10 02:08:16	2016-01-10 02:08:16
175	44	45	A COMMENT	\N	2016-01-10 14:42:27	2016-01-10 14:42:27
176	2	45	A COMMENT	\N	2016-01-12 05:26:20	2016-01-12 05:26:20
177	31	46	A COMMENT	\N	2016-01-07 19:06:16	2016-01-07 19:06:16
178	38	46	A COMMENT	\N	2016-01-11 16:50:54	2016-01-11 16:50:54
179	31	47	A COMMENT	\N	2016-01-07 17:03:46	2016-01-07 17:03:46
180	48	47	A COMMENT	\N	2016-01-09 23:40:06	2016-01-09 23:40:06
181	2	47	A COMMENT	\N	2016-01-12 05:12:19	2016-01-12 05:12:19
182	31	48	A COMMENT	\N	2015-11-24 06:44:34	2015-11-24 06:44:34
183	22	49	A COMMENT	\N	2015-11-09 22:51:55	2015-11-09 22:51:55
184	4	49	A COMMENT	\N	2015-11-20 18:25:21	2015-11-20 18:25:21
185	28	49	A COMMENT	\N	2015-11-29 08:28:56	2015-11-29 08:28:56
186	44	49	A COMMENT	\N	2015-12-08 09:10:03	2015-12-08 09:10:03
187	33	49	A COMMENT	\N	2015-12-10 04:08:22	2015-12-10 04:08:22
188	12	49	A COMMENT	\N	2015-12-11 10:33:35	2015-12-11 10:33:35
189	5	49	A COMMENT	\N	2015-12-17 22:29:08	2015-12-17 22:29:08
190	46	49	A COMMENT	\N	2015-12-17 23:17:04	2015-12-17 23:17:04
191	12	49	A COMMENT	\N	2016-01-07 20:55:49	2016-01-07 20:55:49
192	44	49	A COMMENT	\N	2016-01-10 15:43:48	2016-01-10 15:43:48
193	33	50	A COMMENT	\N	2015-09-22 20:02:15	2015-09-22 20:02:15
194	22	50	A COMMENT	\N	2015-09-22 21:12:12	2015-09-22 21:12:12
195	5	50	A COMMENT	\N	2015-10-07 21:46:58	2015-10-07 21:46:58
196	15	50	A COMMENT	\N	2015-10-08 00:37:28	2015-10-08 00:37:28
197	40	50	A COMMENT	\N	2015-10-20 09:31:12	2015-10-20 09:31:12
198	4	50	A COMMENT	\N	2015-10-20 13:11:02	2015-10-20 13:11:02
199	5	50	A COMMENT	\N	2015-10-29 03:52:53	2015-10-29 03:52:53
200	48	50	A COMMENT	\N	2015-11-04 05:16:19	2015-11-04 05:16:19
201	44	50	A COMMENT	\N	2015-11-16 10:16:11	2015-11-16 10:16:11
202	38	50	A COMMENT	\N	2015-11-23 18:07:52	2015-11-23 18:07:52
203	12	50	A COMMENT	\N	2015-12-07 10:33:17	2015-12-07 10:33:17
204	11	50	A COMMENT	\N	2015-12-11 11:51:05	2015-12-11 11:51:05
205	2	50	A COMMENT	\N	2015-12-17 10:36:58	2015-12-17 10:36:58
206	31	50	A COMMENT	\N	2015-12-19 04:57:26	2015-12-19 04:57:26
207	33	50	A COMMENT	\N	2015-12-25 10:31:39	2015-12-25 10:31:39
208	12	50	A COMMENT	\N	2015-12-31 09:03:01	2015-12-31 09:03:01
209	4	50	A COMMENT	\N	2016-01-02 15:25:23	2016-01-02 15:25:23
210	3	50	A COMMENT	\N	2016-01-11 01:35:52	2016-01-11 01:35:52
211	11	51	A COMMENT	\N	2015-08-27 16:50:56	2015-08-27 16:50:56
212	44	51	A COMMENT	\N	2015-11-22 07:15:36	2015-11-22 07:15:36
213	15	51	A COMMENT	\N	2015-12-06 21:46:06	2015-12-06 21:46:06
214	38	52	A COMMENT	\N	2015-08-18 15:50:59	2015-08-18 15:50:59
215	44	52	A COMMENT	\N	2015-12-18 14:14:52	2015-12-18 14:14:52
216	40	53	A COMMENT	\N	2015-08-07 10:11:38	2015-08-07 10:11:38
217	3	53	A COMMENT	\N	2015-08-15 22:44:33	2015-08-15 22:44:33
218	46	53	A COMMENT	\N	2015-09-03 07:37:59	2015-09-03 07:37:59
219	38	53	A COMMENT	\N	2015-09-12 07:05:12	2015-09-12 07:05:12
220	40	53	A COMMENT	\N	2015-10-10 20:34:29	2015-10-10 20:34:29
221	46	53	A COMMENT	\N	2015-12-16 19:34:26	2015-12-16 19:34:26
222	40	54	A COMMENT	\N	2015-12-07 00:59:55	2015-12-07 00:59:55
223	2	55	A COMMENT	\N	2015-09-13 01:57:44	2015-09-13 01:57:44
224	28	55	A COMMENT	\N	2015-09-14 21:28:00	2015-09-14 21:28:00
225	11	55	A COMMENT	\N	2015-09-18 15:16:17	2015-09-18 15:16:17
226	31	55	A COMMENT	\N	2015-11-13 13:12:54	2015-11-13 13:12:54
227	5	55	A COMMENT	\N	2015-11-17 10:47:45	2015-11-17 10:47:45
228	4	55	A COMMENT	\N	2015-11-22 19:09:12	2015-11-22 19:09:12
229	44	55	A COMMENT	\N	2015-12-01 02:47:20	2015-12-01 02:47:20
230	12	55	A COMMENT	\N	2015-12-20 16:36:11	2015-12-20 16:36:11
231	33	55	A COMMENT	\N	2015-12-26 23:52:40	2015-12-26 23:52:40
232	4	55	A COMMENT	\N	2016-01-12 08:52:03	2016-01-12 08:52:03
233	44	56	A COMMENT	\N	2015-08-22 23:44:35	2015-08-22 23:44:35
234	38	56	A COMMENT	\N	2015-08-27 10:57:45	2015-08-27 10:57:45
235	3	56	A COMMENT	\N	2015-08-31 14:47:19	2015-08-31 14:47:19
236	9	56	A COMMENT	\N	2015-09-19 22:54:32	2015-09-19 22:54:32
237	4	56	A COMMENT	\N	2015-09-22 00:52:03	2015-09-22 00:52:03
238	44	56	A COMMENT	\N	2015-09-30 04:19:36	2015-09-30 04:19:36
239	33	56	A COMMENT	\N	2015-10-04 05:07:44	2015-10-04 05:07:44
240	48	56	A COMMENT	\N	2015-10-10 07:33:02	2015-10-10 07:33:02
241	29	56	A COMMENT	\N	2015-11-06 11:50:28	2015-11-06 11:50:28
242	2	56	A COMMENT	\N	2015-11-17 22:51:48	2015-11-17 22:51:48
243	5	56	A COMMENT	\N	2015-11-25 14:56:30	2015-11-25 14:56:30
244	11	56	A COMMENT	\N	2015-12-01 02:40:57	2015-12-01 02:40:57
245	46	56	A COMMENT	\N	2015-12-05 07:53:25	2015-12-05 07:53:25
246	31	56	A COMMENT	\N	2015-12-09 16:45:43	2015-12-09 16:45:43
247	15	56	A COMMENT	\N	2015-12-23 06:13:02	2015-12-23 06:13:02
248	48	56	A COMMENT	\N	2015-12-27 17:37:45	2015-12-27 17:37:45
249	31	56	A COMMENT	\N	2015-12-31 21:29:44	2015-12-31 21:29:44
250	48	57	A COMMENT	\N	2015-09-30 17:21:23	2015-09-30 17:21:23
251	15	57	A COMMENT	\N	2015-10-25 00:48:32	2015-10-25 00:48:32
252	44	57	A COMMENT	\N	2015-10-31 14:12:31	2015-10-31 14:12:31
253	46	57	A COMMENT	\N	2015-11-05 12:51:04	2015-11-05 12:51:04
254	40	57	A COMMENT	\N	2015-11-19 23:29:11	2015-11-19 23:29:11
255	9	58	A COMMENT	\N	2015-10-14 04:32:10	2015-10-14 04:32:10
256	38	58	A COMMENT	\N	2015-11-06 00:30:28	2015-11-06 00:30:28
257	44	58	A COMMENT	\N	2015-11-10 07:02:18	2015-11-10 07:02:18
258	12	58	A COMMENT	\N	2015-11-17 19:43:10	2015-11-17 19:43:10
259	33	58	A COMMENT	\N	2015-11-28 01:55:06	2015-11-28 01:55:06
260	15	58	A COMMENT	\N	2015-12-16 13:28:31	2015-12-16 13:28:31
261	46	58	A COMMENT	\N	2015-12-19 17:50:33	2015-12-19 17:50:33
262	22	58	A COMMENT	\N	2015-12-30 12:55:13	2015-12-30 12:55:13
263	28	58	A COMMENT	\N	2016-01-07 11:02:53	2016-01-07 11:02:53
264	48	59	A COMMENT	\N	2015-11-13 07:45:47	2015-11-13 07:45:47
265	12	59	A COMMENT	\N	2015-11-23 13:02:04	2015-11-23 13:02:04
266	31	59	A COMMENT	\N	2015-12-03 12:44:59	2015-12-03 12:44:59
267	2	59	A COMMENT	\N	2015-12-04 12:04:06	2015-12-04 12:04:06
268	33	59	A COMMENT	\N	2015-12-25 01:10:24	2015-12-25 01:10:24
269	48	60	A COMMENT	\N	2015-10-24 13:01:23	2015-10-24 13:01:23
270	4	62	A COMMENT	\N	2015-11-25 09:33:28	2015-11-25 09:33:28
271	11	62	A COMMENT	\N	2015-12-03 22:39:18	2015-12-03 22:39:18
272	44	63	A COMMENT	\N	2016-01-01 20:37:39	2016-01-01 20:37:39
273	40	63	A COMMENT	\N	2016-01-01 23:19:46	2016-01-01 23:19:46
274	22	63	A COMMENT	\N	2016-01-02 11:51:26	2016-01-02 11:51:26
275	2	63	A COMMENT	\N	2016-01-02 23:59:17	2016-01-02 23:59:17
276	15	63	A COMMENT	\N	2016-01-03 11:27:54	2016-01-03 11:27:54
277	2	63	A COMMENT	\N	2016-01-04 08:35:16	2016-01-04 08:35:16
278	28	63	A COMMENT	\N	2016-01-04 09:32:57	2016-01-04 09:32:57
279	12	63	A COMMENT	\N	2016-01-05 07:38:58	2016-01-05 07:38:58
280	31	63	A COMMENT	\N	2016-01-06 13:58:10	2016-01-06 13:58:10
281	46	63	A COMMENT	\N	2016-01-09 08:40:04	2016-01-09 08:40:04
282	5	63	A COMMENT	\N	2016-01-09 09:35:11	2016-01-09 09:35:11
283	33	63	A COMMENT	\N	2016-01-11 17:51:13	2016-01-11 17:51:13
284	22	63	A COMMENT	\N	2016-01-11 18:49:54	2016-01-11 18:49:54
285	26	64	A COMMENT	\N	2015-11-28 23:49:45	2015-11-28 23:49:45
286	3	64	A COMMENT	\N	2015-11-30 08:47:34	2015-11-30 08:47:34
287	15	64	A COMMENT	\N	2015-11-30 20:42:11	2015-11-30 20:42:11
288	38	64	A COMMENT	\N	2015-12-05 11:33:12	2015-12-05 11:33:12
289	44	64	A COMMENT	\N	2015-12-11 15:50:19	2015-12-11 15:50:19
290	48	64	A COMMENT	\N	2015-12-12 08:02:55	2015-12-12 08:02:55
291	28	64	A COMMENT	\N	2015-12-12 21:31:23	2015-12-12 21:31:23
292	48	64	A COMMENT	\N	2015-12-15 04:04:01	2015-12-15 04:04:01
293	31	64	A COMMENT	\N	2015-12-15 06:22:15	2015-12-15 06:22:15
294	9	64	A COMMENT	\N	2015-12-17 06:04:12	2015-12-17 06:04:12
295	22	64	A COMMENT	\N	2015-12-19 21:44:49	2015-12-19 21:44:49
296	28	64	A COMMENT	\N	2015-12-19 23:45:11	2015-12-19 23:45:11
297	29	64	A COMMENT	\N	2015-12-31 01:42:53	2015-12-31 01:42:53
298	12	64	A COMMENT	\N	2015-12-31 14:01:39	2015-12-31 14:01:39
299	38	64	A COMMENT	\N	2016-01-09 22:01:47	2016-01-09 22:01:47
300	9	64	A COMMENT	\N	2016-01-12 01:54:56	2016-01-12 01:54:56
301	22	64	A COMMENT	\N	2016-01-12 04:20:50	2016-01-12 04:20:50
302	22	64	A COMMENT	\N	2016-01-13 19:51:03	2016-01-13 19:51:03
303	22	67	A COMMENT	\N	2016-01-03 16:25:52	2016-01-03 16:25:52
304	15	67	A COMMENT	\N	2016-01-03 18:26:23	2016-01-03 18:26:23
305	31	67	A COMMENT	\N	2016-01-03 21:14:58	2016-01-03 21:14:58
306	15	67	A COMMENT	\N	2016-01-04 01:15:22	2016-01-04 01:15:22
307	12	67	A COMMENT	\N	2016-01-04 15:11:01	2016-01-04 15:11:01
308	15	67	A COMMENT	\N	2016-01-05 07:04:21	2016-01-05 07:04:21
309	5	67	A COMMENT	\N	2016-01-05 08:09:23	2016-01-05 08:09:23
310	3	67	A COMMENT	\N	2016-01-05 22:53:14	2016-01-05 22:53:14
311	4	67	A COMMENT	\N	2016-01-07 00:12:04	2016-01-07 00:12:04
312	38	67	A COMMENT	\N	2016-01-07 12:04:04	2016-01-07 12:04:04
313	2	67	A COMMENT	\N	2016-01-07 16:41:27	2016-01-07 16:41:27
314	3	67	A COMMENT	\N	2016-01-08 06:04:59	2016-01-08 06:04:59
315	38	67	A COMMENT	\N	2016-01-08 08:38:53	2016-01-08 08:38:53
316	44	67	A COMMENT	\N	2016-01-08 10:26:47	2016-01-08 10:26:47
317	28	67	A COMMENT	\N	2016-01-09 18:57:51	2016-01-09 18:57:51
318	9	67	A COMMENT	\N	2016-01-10 00:17:14	2016-01-10 00:17:14
319	28	67	A COMMENT	\N	2016-01-10 16:58:25	2016-01-10 16:58:25
320	46	67	A COMMENT	\N	2016-01-10 21:48:07	2016-01-10 21:48:07
321	31	67	A COMMENT	\N	2016-01-11 21:48:42	2016-01-11 21:48:42
322	31	67	A COMMENT	\N	2016-01-12 05:05:39	2016-01-12 05:05:39
323	28	68	A COMMENT	\N	2015-08-18 04:36:42	2015-08-18 04:36:42
324	40	68	A COMMENT	\N	2015-09-12 21:01:30	2015-09-12 21:01:30
325	40	68	A COMMENT	\N	2015-10-19 21:54:06	2015-10-19 21:54:06
326	46	68	A COMMENT	\N	2015-11-11 17:26:40	2015-11-11 17:26:40
327	46	69	A COMMENT	\N	2015-07-22 18:40:51	2015-07-22 18:40:51
328	9	69	A COMMENT	\N	2015-08-20 04:07:44	2015-08-20 04:07:44
329	9	69	A COMMENT	\N	2015-08-24 12:52:26	2015-08-24 12:52:26
330	2	69	A COMMENT	\N	2015-09-07 19:48:05	2015-09-07 19:48:05
331	44	69	A COMMENT	\N	2015-11-16 04:33:29	2015-11-16 04:33:29
332	22	70	A COMMENT	\N	2015-08-24 22:27:08	2015-08-24 22:27:08
333	3	70	A COMMENT	\N	2015-08-27 04:42:35	2015-08-27 04:42:35
334	46	70	A COMMENT	\N	2015-12-27 11:20:19	2015-12-27 11:20:19
335	31	70	A COMMENT	\N	2016-01-01 10:42:30	2016-01-01 10:42:30
336	7	71	A COMMENT	\N	2015-09-10 20:50:24	2015-09-10 20:50:24
337	15	71	A COMMENT	\N	2015-09-22 15:03:44	2015-09-22 15:03:44
338	12	71	A COMMENT	\N	2015-10-15 01:21:05	2015-10-15 01:21:05
339	38	71	A COMMENT	\N	2015-11-06 15:20:43	2015-11-06 15:20:43
340	5	71	A COMMENT	\N	2015-11-21 21:30:07	2015-11-21 21:30:07
341	2	71	A COMMENT	\N	2015-12-16 16:15:21	2015-12-16 16:15:21
342	40	72	A COMMENT	\N	2015-09-22 15:53:39	2015-09-22 15:53:39
343	2	72	A COMMENT	\N	2015-10-11 22:44:50	2015-10-11 22:44:50
344	46	72	A COMMENT	\N	2015-11-05 09:26:08	2015-11-05 09:26:08
345	38	72	A COMMENT	\N	2015-11-06 00:46:07	2015-11-06 00:46:07
346	28	72	A COMMENT	\N	2015-12-31 18:10:06	2015-12-31 18:10:06
347	4	72	A COMMENT	\N	2016-01-11 12:40:03	2016-01-11 12:40:03
348	28	73	A COMMENT	\N	2015-11-05 13:49:17	2015-11-05 13:49:17
349	12	73	A COMMENT	\N	2015-11-16 05:45:07	2015-11-16 05:45:07
350	29	73	A COMMENT	\N	2015-11-24 12:46:56	2015-11-24 12:46:56
351	38	73	A COMMENT	\N	2015-11-28 06:36:00	2015-11-28 06:36:00
352	22	73	A COMMENT	\N	2015-12-14 20:32:30	2015-12-14 20:32:30
353	23	74	A COMMENT	\N	2015-11-12 03:37:36	2015-11-12 03:37:36
354	12	74	A COMMENT	\N	2015-11-19 00:15:35	2015-11-19 00:15:35
355	28	74	A COMMENT	\N	2015-11-23 16:00:00	2015-11-23 16:00:00
356	5	74	A COMMENT	\N	2015-11-25 08:57:45	2015-11-25 08:57:45
357	48	74	A COMMENT	\N	2015-12-13 06:11:03	2015-12-13 06:11:03
358	3	74	A COMMENT	\N	2015-12-15 12:03:38	2015-12-15 12:03:38
359	44	74	A COMMENT	\N	2015-12-22 08:29:02	2015-12-22 08:29:02
360	9	74	A COMMENT	\N	2015-12-28 02:32:15	2015-12-28 02:32:15
361	4	74	A COMMENT	\N	2016-01-02 08:27:44	2016-01-02 08:27:44
362	5	74	A COMMENT	\N	2016-01-13 01:03:44	2016-01-13 01:03:44
363	23	75	A COMMENT	\N	2015-12-20 04:08:49	2015-12-20 04:08:49
364	15	75	A COMMENT	\N	2015-12-20 20:29:55	2015-12-20 20:29:55
365	46	75	A COMMENT	\N	2015-12-28 20:41:47	2015-12-28 20:41:47
366	29	75	A COMMENT	\N	2016-01-07 03:19:53	2016-01-07 03:19:53
367	12	75	A COMMENT	\N	2016-01-08 19:40:15	2016-01-08 19:40:15
368	46	75	A COMMENT	\N	2016-01-12 10:01:11	2016-01-12 10:01:11
369	40	77	A COMMENT	\N	2015-12-03 20:15:27	2015-12-03 20:15:27
370	3	77	A COMMENT	\N	2016-01-03 18:10:35	2016-01-03 18:10:35
371	11	78	A COMMENT	\N	2015-08-31 02:08:40	2015-08-31 02:08:40
372	28	78	A COMMENT	\N	2015-12-03 12:39:01	2015-12-03 12:39:01
373	17	80	A COMMENT	\N	2015-08-02 01:43:42	2015-08-02 01:43:42
374	5	81	A COMMENT	\N	2015-09-05 04:05:13	2015-09-05 04:05:13
375	40	81	A COMMENT	\N	2015-09-06 06:02:21	2015-09-06 06:02:21
376	48	81	A COMMENT	\N	2015-09-19 17:01:21	2015-09-19 17:01:21
377	38	81	A COMMENT	\N	2015-10-07 10:21:42	2015-10-07 10:21:42
378	12	81	A COMMENT	\N	2015-10-16 05:06:42	2015-10-16 05:06:42
379	46	81	A COMMENT	\N	2015-10-19 20:09:34	2015-10-19 20:09:34
380	5	81	A COMMENT	\N	2015-10-27 11:04:42	2015-10-27 11:04:42
381	29	81	A COMMENT	\N	2015-10-28 18:44:35	2015-10-28 18:44:35
382	5	81	A COMMENT	\N	2015-11-22 12:55:11	2015-11-22 12:55:11
383	9	81	A COMMENT	\N	2015-12-01 16:06:14	2015-12-01 16:06:14
384	3	81	A COMMENT	\N	2015-12-13 04:50:13	2015-12-13 04:50:13
385	46	81	A COMMENT	\N	2016-01-01 19:13:50	2016-01-01 19:13:50
386	31	81	A COMMENT	\N	2016-01-08 09:07:55	2016-01-08 09:07:55
387	44	81	A COMMENT	\N	2016-01-08 18:32:40	2016-01-08 18:32:40
388	22	81	A COMMENT	\N	2016-01-12 07:11:04	2016-01-12 07:11:04
389	17	82	A COMMENT	\N	2015-11-17 05:04:27	2015-11-17 05:04:27
390	48	82	A COMMENT	\N	2015-12-17 07:30:06	2015-12-17 07:30:06
391	12	83	A COMMENT	\N	2015-09-27 04:47:54	2015-09-27 04:47:54
392	4	83	A COMMENT	\N	2015-10-20 14:43:30	2015-10-20 14:43:30
393	29	83	A COMMENT	\N	2015-10-21 05:14:40	2015-10-21 05:14:40
394	9	83	A COMMENT	\N	2015-10-31 03:53:32	2015-10-31 03:53:32
395	46	83	A COMMENT	\N	2015-11-21 05:32:04	2015-11-21 05:32:04
396	12	85	A COMMENT	\N	2015-09-24 02:37:10	2015-09-24 02:37:10
397	4	85	A COMMENT	\N	2015-10-30 08:45:56	2015-10-30 08:45:56
398	22	85	A COMMENT	\N	2015-11-18 05:01:34	2015-11-18 05:01:34
399	4	85	A COMMENT	\N	2015-11-24 11:47:05	2015-11-24 11:47:05
400	15	85	A COMMENT	\N	2015-12-03 16:11:44	2015-12-03 16:11:44
401	22	85	A COMMENT	\N	2015-12-14 01:17:20	2015-12-14 01:17:20
402	9	85	A COMMENT	\N	2016-01-06 05:24:39	2016-01-06 05:24:39
403	20	86	A COMMENT	\N	2015-07-11 09:31:05	2015-07-11 09:31:05
404	12	86	A COMMENT	\N	2015-07-18 07:14:05	2015-07-18 07:14:05
405	33	86	A COMMENT	\N	2015-10-09 01:00:00	2015-10-09 01:00:00
406	5	86	A COMMENT	\N	2015-11-27 11:33:54	2015-11-27 11:33:54
407	38	86	A COMMENT	\N	2015-12-09 01:24:29	2015-12-09 01:24:29
408	40	86	A COMMENT	\N	2015-12-15 10:14:01	2015-12-15 10:14:01
409	46	87	A COMMENT	\N	2015-08-02 14:25:15	2015-08-02 14:25:15
410	15	87	A COMMENT	\N	2015-09-06 00:07:21	2015-09-06 00:07:21
411	11	87	A COMMENT	\N	2015-09-09 05:40:54	2015-09-09 05:40:54
412	38	87	A COMMENT	\N	2015-09-24 12:59:58	2015-09-24 12:59:58
413	3	87	A COMMENT	\N	2015-10-18 22:23:51	2015-10-18 22:23:51
414	38	87	A COMMENT	\N	2015-11-06 19:06:05	2015-11-06 19:06:05
415	28	87	A COMMENT	\N	2015-12-01 19:06:29	2015-12-01 19:06:29
416	33	87	A COMMENT	\N	2016-01-06 17:07:57	2016-01-06 17:07:57
417	11	90	A COMMENT	\N	2015-12-30 22:59:31	2015-12-30 22:59:31
418	38	90	A COMMENT	\N	2015-12-31 04:24:16	2015-12-31 04:24:16
419	3	90	A COMMENT	\N	2016-01-05 21:17:35	2016-01-05 21:17:35
420	44	91	A COMMENT	\N	2015-10-27 15:08:27	2015-10-27 15:08:27
421	5	91	A COMMENT	\N	2015-11-13 04:15:45	2015-11-13 04:15:45
422	48	91	A COMMENT	\N	2015-11-16 04:55:24	2015-11-16 04:55:24
423	3	91	A COMMENT	\N	2015-11-21 09:37:37	2015-11-21 09:37:37
424	48	91	A COMMENT	\N	2015-12-03 17:54:52	2015-12-03 17:54:52
425	29	91	A COMMENT	\N	2015-12-08 22:57:17	2015-12-08 22:57:17
426	9	91	A COMMENT	\N	2015-12-17 20:55:04	2015-12-17 20:55:04
427	28	91	A COMMENT	\N	2015-12-29 01:03:21	2015-12-29 01:03:21
428	33	91	A COMMENT	\N	2015-12-29 22:02:25	2015-12-29 22:02:25
429	3	91	A COMMENT	\N	2016-01-03 16:37:04	2016-01-03 16:37:04
430	48	92	A COMMENT	\N	2015-11-24 16:24:14	2015-11-24 16:24:14
431	44	92	A COMMENT	\N	2015-12-20 12:29:21	2015-12-20 12:29:21
432	46	92	A COMMENT	\N	2015-12-31 13:02:50	2015-12-31 13:02:50
433	36	93	A COMMENT	\N	2015-09-26 03:22:00	2015-09-26 03:22:00
434	15	94	A COMMENT	\N	2015-10-05 21:29:43	2015-10-05 21:29:43
435	33	94	A COMMENT	\N	2015-10-23 01:12:39	2015-10-23 01:12:39
436	12	94	A COMMENT	\N	2015-10-24 13:27:08	2015-10-24 13:27:08
437	44	94	A COMMENT	\N	2015-11-01 23:12:51	2015-11-01 23:12:51
438	29	94	A COMMENT	\N	2015-11-02 12:38:32	2015-11-02 12:38:32
439	28	94	A COMMENT	\N	2015-11-05 16:38:07	2015-11-05 16:38:07
440	48	94	A COMMENT	\N	2015-11-24 22:13:34	2015-11-24 22:13:34
441	12	94	A COMMENT	\N	2015-12-21 22:36:37	2015-12-21 22:36:37
442	2	94	A COMMENT	\N	2015-12-23 22:32:56	2015-12-23 22:32:56
443	31	95	A COMMENT	\N	2015-09-12 06:15:42	2015-09-12 06:15:42
444	2	95	A COMMENT	\N	2015-09-13 11:29:16	2015-09-13 11:29:16
445	29	95	A COMMENT	\N	2015-09-18 21:13:46	2015-09-18 21:13:46
446	9	95	A COMMENT	\N	2015-09-20 08:41:52	2015-09-20 08:41:52
447	3	95	A COMMENT	\N	2015-09-26 10:49:51	2015-09-26 10:49:51
448	31	95	A COMMENT	\N	2015-10-08 15:15:18	2015-10-08 15:15:18
449	22	95	A COMMENT	\N	2015-10-31 04:57:57	2015-10-31 04:57:57
450	46	95	A COMMENT	\N	2015-11-23 04:52:48	2015-11-23 04:52:48
451	4	95	A COMMENT	\N	2015-12-26 23:01:58	2015-12-26 23:01:58
452	4	95	A COMMENT	\N	2016-01-09 07:58:10	2016-01-09 07:58:10
453	30	96	A COMMENT	\N	2015-10-03 10:52:46	2015-10-03 10:52:46
454	2	96	A COMMENT	\N	2015-10-09 06:45:48	2015-10-09 06:45:48
455	28	96	A COMMENT	\N	2015-12-12 06:29:11	2015-12-12 06:29:11
456	15	96	A COMMENT	\N	2015-12-13 03:15:04	2015-12-13 03:15:04
457	46	97	A COMMENT	\N	2015-10-05 15:57:12	2015-10-05 15:57:12
458	40	97	A COMMENT	\N	2015-10-05 19:32:53	2015-10-05 19:32:53
459	12	97	A COMMENT	\N	2015-10-16 22:20:21	2015-10-16 22:20:21
460	33	97	A COMMENT	\N	2015-10-17 21:46:44	2015-10-17 21:46:44
461	29	97	A COMMENT	\N	2015-10-22 02:35:37	2015-10-22 02:35:37
462	29	97	A COMMENT	\N	2015-10-22 15:57:01	2015-10-22 15:57:01
463	12	97	A COMMENT	\N	2015-10-22 21:02:55	2015-10-22 21:02:55
464	40	97	A COMMENT	\N	2015-10-29 19:43:49	2015-10-29 19:43:49
465	46	97	A COMMENT	\N	2015-10-31 12:02:32	2015-10-31 12:02:32
466	22	97	A COMMENT	\N	2015-11-07 12:05:47	2015-11-07 12:05:47
467	31	97	A COMMENT	\N	2015-11-08 08:43:16	2015-11-08 08:43:16
468	4	97	A COMMENT	\N	2015-12-03 22:36:34	2015-12-03 22:36:34
469	9	97	A COMMENT	\N	2015-12-05 07:13:52	2015-12-05 07:13:52
470	22	97	A COMMENT	\N	2015-12-13 16:24:58	2015-12-13 16:24:58
471	29	97	A COMMENT	\N	2015-12-21 05:46:01	2015-12-21 05:46:01
472	46	97	A COMMENT	\N	2015-12-23 22:26:19	2015-12-23 22:26:19
473	4	97	A COMMENT	\N	2016-01-10 05:43:57	2016-01-10 05:43:57
474	31	98	A COMMENT	\N	2015-10-28 01:18:03	2015-10-28 01:18:03
475	35	99	A COMMENT	\N	2015-11-04 18:26:08	2015-11-04 18:26:08
476	35	100	A COMMENT	\N	2015-11-18 07:11:05	2015-11-18 07:11:05
477	11	100	A COMMENT	\N	2015-12-16 05:44:28	2015-12-16 05:44:28
478	29	100	A COMMENT	\N	2015-12-28 22:10:26	2015-12-28 22:10:26
479	31	101	A COMMENT	\N	2015-11-21 03:59:12	2015-11-21 03:59:12
480	33	101	A COMMENT	\N	2015-11-23 02:14:51	2015-11-23 02:14:51
481	48	101	A COMMENT	\N	2015-11-27 03:53:05	2015-11-27 03:53:05
482	5	101	A COMMENT	\N	2015-12-11 09:46:50	2015-12-11 09:46:50
483	4	101	A COMMENT	\N	2015-12-21 09:09:41	2015-12-21 09:09:41
484	11	101	A COMMENT	\N	2016-01-06 08:46:02	2016-01-06 08:46:02
485	15	101	A COMMENT	\N	2016-01-10 21:31:10	2016-01-10 21:31:10
486	38	101	A COMMENT	\N	2016-01-13 12:34:33	2016-01-13 12:34:33
487	35	102	A COMMENT	\N	2015-12-04 17:15:56	2015-12-04 17:15:56
488	29	102	A COMMENT	\N	2015-12-08 16:04:06	2015-12-08 16:04:06
489	46	102	A COMMENT	\N	2015-12-09 18:47:10	2015-12-09 18:47:10
490	15	102	A COMMENT	\N	2015-12-10 20:34:12	2015-12-10 20:34:12
491	29	102	A COMMENT	\N	2015-12-17 07:25:18	2015-12-17 07:25:18
492	9	102	A COMMENT	\N	2015-12-17 11:32:34	2015-12-17 11:32:34
493	28	102	A COMMENT	\N	2015-12-23 05:23:54	2015-12-23 05:23:54
494	31	102	A COMMENT	\N	2015-12-23 07:07:18	2015-12-23 07:07:18
495	4	102	A COMMENT	\N	2015-12-30 01:22:00	2015-12-30 01:22:00
496	48	102	A COMMENT	\N	2016-01-01 16:51:12	2016-01-01 16:51:12
497	48	102	A COMMENT	\N	2016-01-05 11:05:18	2016-01-05 11:05:18
498	12	102	A COMMENT	\N	2016-01-07 07:22:34	2016-01-07 07:22:34
499	11	102	A COMMENT	\N	2016-01-12 01:02:00	2016-01-12 01:02:00
500	11	103	A COMMENT	\N	2015-12-20 15:54:54	2015-12-20 15:54:54
501	3	103	A COMMENT	\N	2015-12-24 14:02:05	2015-12-24 14:02:05
502	35	104	A COMMENT	\N	2015-12-31 13:09:53	2015-12-31 13:09:53
503	12	104	A COMMENT	\N	2016-01-04 00:09:37	2016-01-04 00:09:37
504	28	104	A COMMENT	\N	2016-01-07 07:29:19	2016-01-07 07:29:19
505	22	104	A COMMENT	\N	2016-01-13 13:13:41	2016-01-13 13:13:41
506	11	105	A COMMENT	\N	2016-01-02 15:28:33	2016-01-02 15:28:33
507	12	105	A COMMENT	\N	2016-01-02 22:12:02	2016-01-02 22:12:02
508	11	105	A COMMENT	\N	2016-01-12 20:32:35	2016-01-12 20:32:35
509	35	106	A COMMENT	\N	2016-01-05 10:24:36	2016-01-05 10:24:36
510	35	107	A COMMENT	\N	2015-11-21 03:25:50	2015-11-21 03:25:50
511	11	108	A COMMENT	\N	2015-12-09 19:06:02	2015-12-09 19:06:02
512	12	108	A COMMENT	\N	2015-12-14 04:45:11	2015-12-14 04:45:11
513	40	108	A COMMENT	\N	2015-12-17 19:23:33	2015-12-17 19:23:33
514	2	108	A COMMENT	\N	2015-12-22 17:13:04	2015-12-22 17:13:04
515	33	108	A COMMENT	\N	2016-01-10 16:27:42	2016-01-10 16:27:42
516	40	110	A COMMENT	\N	2015-11-13 15:47:08	2015-11-13 15:47:08
517	29	110	A COMMENT	\N	2015-12-04 02:11:25	2015-12-04 02:11:25
518	28	110	A COMMENT	\N	2015-12-16 04:42:36	2015-12-16 04:42:36
519	12	110	A COMMENT	\N	2015-12-30 03:39:47	2015-12-30 03:39:47
520	9	111	A COMMENT	\N	2016-01-03 14:16:08	2016-01-03 14:16:08
521	35	112	A COMMENT	\N	2015-11-15 02:45:27	2015-11-15 02:45:27
522	46	112	A COMMENT	\N	2015-11-19 15:04:37	2015-11-19 15:04:37
523	22	112	A COMMENT	\N	2015-12-29 02:27:59	2015-12-29 02:27:59
524	5	112	A COMMENT	\N	2016-01-10 22:12:10	2016-01-10 22:12:10
525	35	114	A COMMENT	\N	2015-11-24 07:56:13	2015-11-24 07:56:13
526	11	115	A COMMENT	\N	2015-12-14 05:20:15	2015-12-14 05:20:15
527	31	116	A COMMENT	\N	2015-12-11 22:38:13	2015-12-11 22:38:13
528	5	116	A COMMENT	\N	2015-12-12 07:57:25	2015-12-12 07:57:25
529	2	116	A COMMENT	\N	2015-12-15 12:13:51	2015-12-15 12:13:51
530	44	116	A COMMENT	\N	2015-12-16 06:00:18	2015-12-16 06:00:18
531	11	116	A COMMENT	\N	2015-12-16 15:29:26	2015-12-16 15:29:26
532	28	116	A COMMENT	\N	2015-12-16 22:16:38	2015-12-16 22:16:38
533	48	116	A COMMENT	\N	2015-12-23 10:35:18	2015-12-23 10:35:18
534	3	116	A COMMENT	\N	2015-12-23 11:17:56	2015-12-23 11:17:56
535	11	116	A COMMENT	\N	2015-12-24 13:02:18	2015-12-24 13:02:18
536	11	116	A COMMENT	\N	2015-12-27 15:04:56	2015-12-27 15:04:56
537	48	116	A COMMENT	\N	2015-12-29 23:48:13	2015-12-29 23:48:13
538	9	116	A COMMENT	\N	2016-01-01 13:30:35	2016-01-01 13:30:35
539	44	116	A COMMENT	\N	2016-01-01 22:49:27	2016-01-01 22:49:27
540	40	116	A COMMENT	\N	2016-01-04 03:59:24	2016-01-04 03:59:24
541	4	116	A COMMENT	\N	2016-01-06 07:17:45	2016-01-06 07:17:45
542	12	116	A COMMENT	\N	2016-01-06 17:09:01	2016-01-06 17:09:01
543	12	116	A COMMENT	\N	2016-01-08 16:01:02	2016-01-08 16:01:02
544	4	116	A COMMENT	\N	2016-01-11 19:33:06	2016-01-11 19:33:06
545	28	117	A COMMENT	\N	2015-12-22 22:22:59	2015-12-22 22:22:59
546	12	117	A COMMENT	\N	2015-12-29 00:49:43	2015-12-29 00:49:43
547	29	118	A COMMENT	\N	2015-12-24 09:41:17	2015-12-24 09:41:17
548	28	118	A COMMENT	\N	2016-01-02 08:25:42	2016-01-02 08:25:42
549	29	118	A COMMENT	\N	2016-01-05 21:35:00	2016-01-05 21:35:00
550	14	119	A COMMENT	\N	2016-01-09 19:38:17	2016-01-09 19:38:17
551	12	119	A COMMENT	\N	2016-01-10 19:45:10	2016-01-10 19:45:10
552	22	119	A COMMENT	\N	2016-01-10 22:31:11	2016-01-10 22:31:11
553	48	119	A COMMENT	\N	2016-01-11 07:55:19	2016-01-11 07:55:19
554	44	119	A COMMENT	\N	2016-01-12 18:34:54	2016-01-12 18:34:54
555	9	119	A COMMENT	\N	2016-01-13 06:39:42	2016-01-13 06:39:42
556	14	120	A COMMENT	\N	2016-01-08 16:13:25	2016-01-08 16:13:25
557	9	121	A COMMENT	\N	2016-01-10 20:45:15	2016-01-10 20:45:15
558	22	121	A COMMENT	\N	2016-01-11 03:56:12	2016-01-11 03:56:12
559	48	121	A COMMENT	\N	2016-01-11 11:12:43	2016-01-11 11:12:43
560	15	121	A COMMENT	\N	2016-01-11 15:53:08	2016-01-11 15:53:08
561	40	121	A COMMENT	\N	2016-01-11 21:06:23	2016-01-11 21:06:23
562	38	121	A COMMENT	\N	2016-01-12 02:58:31	2016-01-12 02:58:31
563	3	121	A COMMENT	\N	2016-01-12 04:48:47	2016-01-12 04:48:47
564	5	121	A COMMENT	\N	2016-01-12 09:11:14	2016-01-12 09:11:14
565	2	121	A COMMENT	\N	2016-01-12 16:53:05	2016-01-12 16:53:05
566	48	121	A COMMENT	\N	2016-01-12 21:31:53	2016-01-12 21:31:53
567	2	121	A COMMENT	\N	2016-01-12 23:39:47	2016-01-12 23:39:47
568	29	121	A COMMENT	\N	2016-01-13 00:37:40	2016-01-13 00:37:40
569	12	121	A COMMENT	\N	2016-01-13 03:45:39	2016-01-13 03:45:39
570	29	121	A COMMENT	\N	2016-01-13 03:58:52	2016-01-13 03:58:52
571	38	121	A COMMENT	\N	2016-01-13 07:46:49	2016-01-13 07:46:49
572	31	121	A COMMENT	\N	2016-01-13 20:34:19	2016-01-13 20:34:19
573	31	121	A COMMENT	\N	2016-01-13 20:47:40	2016-01-13 20:47:40
574	44	122	A COMMENT	\N	2015-09-30 06:23:50	2015-09-30 06:23:50
575	22	122	A COMMENT	\N	2015-12-10 04:11:56	2015-12-10 04:11:56
576	5	122	A COMMENT	\N	2016-01-09 12:22:46	2016-01-09 12:22:46
577	2	123	A COMMENT	\N	2015-09-22 01:46:04	2015-09-22 01:46:04
578	44	123	A COMMENT	\N	2015-09-23 00:58:06	2015-09-23 00:58:06
579	5	123	A COMMENT	\N	2015-10-17 17:04:43	2015-10-17 17:04:43
580	41	124	A COMMENT	\N	2015-10-03 18:51:26	2015-10-03 18:51:26
581	9	124	A COMMENT	\N	2015-10-25 06:25:59	2015-10-25 06:25:59
582	4	124	A COMMENT	\N	2015-10-26 08:51:33	2015-10-26 08:51:33
583	22	124	A COMMENT	\N	2015-11-25 02:11:56	2015-11-25 02:11:56
584	5	125	A COMMENT	\N	2015-08-14 06:50:56	2015-08-14 06:50:56
585	40	125	A COMMENT	\N	2015-11-07 06:16:48	2015-11-07 06:16:48
586	44	125	A COMMENT	\N	2015-11-14 09:18:07	2015-11-14 09:18:07
587	28	126	A COMMENT	\N	2015-08-23 23:23:18	2015-08-23 23:23:18
588	22	126	A COMMENT	\N	2015-09-09 02:57:45	2015-09-09 02:57:45
589	9	126	A COMMENT	\N	2015-10-05 06:24:23	2015-10-05 06:24:23
590	40	126	A COMMENT	\N	2015-10-11 09:06:16	2015-10-11 09:06:16
591	2	126	A COMMENT	\N	2015-10-16 19:07:17	2015-10-16 19:07:17
592	3	126	A COMMENT	\N	2015-10-19 14:27:34	2015-10-19 14:27:34
593	4	126	A COMMENT	\N	2015-11-17 16:13:48	2015-11-17 16:13:48
594	46	126	A COMMENT	\N	2015-11-28 16:59:21	2015-11-28 16:59:21
595	11	126	A COMMENT	\N	2015-12-12 04:33:05	2015-12-12 04:33:05
596	38	126	A COMMENT	\N	2016-01-02 17:54:13	2016-01-02 17:54:13
597	44	127	A COMMENT	\N	2015-11-13 07:24:16	2015-11-13 07:24:16
598	15	127	A COMMENT	\N	2015-11-13 11:05:28	2015-11-13 11:05:28
599	4	127	A COMMENT	\N	2015-11-14 04:57:29	2015-11-14 04:57:29
600	38	127	A COMMENT	\N	2015-11-23 19:21:39	2015-11-23 19:21:39
601	12	127	A COMMENT	\N	2015-11-28 08:05:16	2015-11-28 08:05:16
602	48	127	A COMMENT	\N	2015-12-04 00:16:56	2015-12-04 00:16:56
603	38	127	A COMMENT	\N	2015-12-25 00:26:26	2015-12-25 00:26:26
604	38	127	A COMMENT	\N	2015-12-28 11:18:33	2015-12-28 11:18:33
605	33	128	A COMMENT	\N	2015-12-09 05:25:14	2015-12-09 05:25:14
606	11	128	A COMMENT	\N	2015-12-09 11:27:27	2015-12-09 11:27:27
607	44	128	A COMMENT	\N	2015-12-20 22:30:39	2015-12-20 22:30:39
608	28	128	A COMMENT	\N	2015-12-23 14:32:15	2015-12-23 14:32:15
609	15	128	A COMMENT	\N	2015-12-27 21:52:17	2015-12-27 21:52:17
610	41	129	A COMMENT	\N	2015-10-14 23:17:09	2015-10-14 23:17:09
611	31	131	A COMMENT	\N	2015-10-16 17:52:29	2015-10-16 17:52:29
612	12	131	A COMMENT	\N	2015-10-17 04:59:32	2015-10-17 04:59:32
613	41	132	A COMMENT	\N	2015-10-01 08:31:08	2015-10-01 08:31:08
614	15	134	A COMMENT	\N	2015-11-25 14:21:21	2015-11-25 14:21:21
615	34	136	A COMMENT	\N	2015-11-09 13:43:45	2015-11-09 13:43:45
616	31	136	A COMMENT	\N	2015-12-09 19:12:13	2015-12-09 19:12:13
617	31	136	A COMMENT	\N	2015-12-16 05:40:29	2015-12-16 05:40:29
618	22	136	A COMMENT	\N	2015-12-17 06:59:17	2015-12-17 06:59:17
619	46	136	A COMMENT	\N	2015-12-27 16:28:19	2015-12-27 16:28:19
620	34	137	A COMMENT	\N	2015-11-13 00:53:38	2015-11-13 00:53:38
621	12	138	A COMMENT	\N	2015-12-22 22:34:19	2015-12-22 22:34:19
622	4	138	A COMMENT	\N	2016-01-02 14:07:00	2016-01-02 14:07:00
623	9	138	A COMMENT	\N	2016-01-03 03:47:30	2016-01-03 03:47:30
624	28	138	A COMMENT	\N	2016-01-10 05:16:57	2016-01-10 05:16:57
625	3	138	A COMMENT	\N	2016-01-13 17:54:58	2016-01-13 17:54:58
626	34	139	A COMMENT	\N	2015-11-23 08:33:55	2015-11-23 08:33:55
627	34	140	A COMMENT	\N	2015-12-03 04:04:59	2015-12-03 04:04:59
628	29	140	A COMMENT	\N	2015-12-15 07:46:16	2015-12-15 07:46:16
629	12	140	A COMMENT	\N	2015-12-25 15:22:28	2015-12-25 15:22:28
630	2	140	A COMMENT	\N	2016-01-11 17:03:34	2016-01-11 17:03:34
631	11	141	A COMMENT	\N	2015-12-07 19:19:02	2015-12-07 19:19:02
632	4	141	A COMMENT	\N	2015-12-17 16:45:37	2015-12-17 16:45:37
633	11	141	A COMMENT	\N	2015-12-18 22:09:52	2015-12-18 22:09:52
634	48	141	A COMMENT	\N	2015-12-20 21:00:23	2015-12-20 21:00:23
635	2	141	A COMMENT	\N	2015-12-24 02:24:27	2015-12-24 02:24:27
636	38	141	A COMMENT	\N	2016-01-02 05:00:03	2016-01-02 05:00:03
637	33	141	A COMMENT	\N	2016-01-02 07:07:55	2016-01-02 07:07:55
638	34	142	A COMMENT	\N	2015-12-20 01:30:35	2015-12-20 01:30:35
639	34	143	A COMMENT	\N	2015-12-27 09:50:13	2015-12-27 09:50:13
640	46	143	A COMMENT	\N	2016-01-04 11:35:37	2016-01-04 11:35:37
641	38	143	A COMMENT	\N	2016-01-10 12:27:53	2016-01-10 12:27:53
642	31	143	A COMMENT	\N	2016-01-12 07:16:29	2016-01-12 07:16:29
643	28	144	A COMMENT	\N	2015-12-30 14:32:15	2015-12-30 14:32:15
644	34	145	A COMMENT	\N	2015-11-16 19:38:07	2015-11-16 19:38:07
645	15	145	A COMMENT	\N	2015-11-22 19:17:25	2015-11-22 19:17:25
646	11	145	A COMMENT	\N	2015-11-27 21:30:03	2015-11-27 21:30:03
647	3	145	A COMMENT	\N	2015-12-05 20:37:20	2015-12-05 20:37:20
648	12	145	A COMMENT	\N	2015-12-08 07:23:36	2015-12-08 07:23:36
649	40	145	A COMMENT	\N	2015-12-17 05:34:12	2015-12-17 05:34:12
650	33	146	A COMMENT	\N	2015-12-07 01:51:54	2015-12-07 01:51:54
651	33	146	A COMMENT	\N	2015-12-16 09:22:11	2015-12-16 09:22:11
652	28	146	A COMMENT	\N	2015-12-25 19:31:34	2015-12-25 19:31:34
653	15	146	A COMMENT	\N	2015-12-27 22:02:05	2015-12-27 22:02:05
654	12	146	A COMMENT	\N	2016-01-02 13:20:40	2016-01-02 13:20:40
655	29	146	A COMMENT	\N	2016-01-03 19:39:33	2016-01-03 19:39:33
656	31	146	A COMMENT	\N	2016-01-13 06:31:30	2016-01-13 06:31:30
657	34	147	A COMMENT	\N	2015-12-11 01:17:44	2015-12-11 01:17:44
658	31	148	A COMMENT	\N	2015-11-26 00:15:12	2015-11-26 00:15:12
659	29	148	A COMMENT	\N	2015-12-04 13:37:51	2015-12-04 13:37:51
660	28	148	A COMMENT	\N	2015-12-09 08:28:08	2015-12-09 08:28:08
661	48	148	A COMMENT	\N	2015-12-19 15:00:00	2015-12-19 15:00:00
662	40	148	A COMMENT	\N	2015-12-19 22:23:26	2015-12-19 22:23:26
663	5	148	A COMMENT	\N	2015-12-23 13:04:29	2015-12-23 13:04:29
664	29	148	A COMMENT	\N	2015-12-24 19:13:25	2015-12-24 19:13:25
665	4	150	A COMMENT	\N	2015-12-14 21:46:38	2015-12-14 21:46:38
666	12	150	A COMMENT	\N	2015-12-22 20:19:00	2015-12-22 20:19:00
667	34	151	A COMMENT	\N	2015-12-02 21:05:59	2015-12-02 21:05:59
668	34	152	A COMMENT	\N	2015-12-23 05:48:44	2015-12-23 05:48:44
669	34	153	A COMMENT	\N	2015-12-05 05:41:31	2015-12-05 05:41:31
670	38	153	A COMMENT	\N	2015-12-22 22:19:24	2015-12-22 22:19:24
671	48	155	A COMMENT	\N	2015-12-23 07:29:41	2015-12-23 07:29:41
672	34	156	A COMMENT	\N	2015-12-31 06:31:51	2015-12-31 06:31:51
673	11	156	A COMMENT	\N	2016-01-01 07:41:09	2016-01-01 07:41:09
674	44	156	A COMMENT	\N	2016-01-03 18:29:42	2016-01-03 18:29:42
675	40	156	A COMMENT	\N	2016-01-13 15:06:31	2016-01-13 15:06:31
676	15	159	A COMMENT	\N	2015-12-02 20:01:55	2015-12-02 20:01:55
677	33	159	A COMMENT	\N	2015-12-13 21:16:42	2015-12-13 21:16:42
678	44	159	A COMMENT	\N	2015-12-15 09:43:16	2015-12-15 09:43:16
679	33	159	A COMMENT	\N	2015-12-15 19:59:55	2015-12-15 19:59:55
680	31	159	A COMMENT	\N	2016-01-02 04:24:05	2016-01-02 04:24:05
681	12	160	A COMMENT	\N	2015-08-11 05:38:06	2015-08-11 05:38:06
682	28	160	A COMMENT	\N	2015-09-02 05:34:55	2015-09-02 05:34:55
683	33	160	A COMMENT	\N	2015-09-29 03:39:23	2015-09-29 03:39:23
684	22	160	A COMMENT	\N	2015-11-04 01:10:55	2015-11-04 01:10:55
685	2	160	A COMMENT	\N	2015-11-11 14:58:04	2015-11-11 14:58:04
686	29	160	A COMMENT	\N	2015-12-23 06:39:03	2015-12-23 06:39:03
687	40	160	A COMMENT	\N	2015-12-24 00:37:34	2015-12-24 00:37:34
688	33	160	A COMMENT	\N	2016-01-05 01:57:19	2016-01-05 01:57:19
689	2	160	A COMMENT	\N	2016-01-09 04:54:42	2016-01-09 04:54:42
690	11	161	A COMMENT	\N	2015-10-27 04:33:11	2015-10-27 04:33:11
691	31	161	A COMMENT	\N	2015-11-02 07:54:41	2015-11-02 07:54:41
692	40	161	A COMMENT	\N	2015-11-04 16:03:49	2015-11-04 16:03:49
693	3	161	A COMMENT	\N	2015-11-14 06:16:40	2015-11-14 06:16:40
694	44	161	A COMMENT	\N	2016-01-07 21:43:39	2016-01-07 21:43:39
695	18	168	A COMMENT	\N	2015-10-01 04:37:52	2015-10-01 04:37:52
696	18	169	A COMMENT	\N	2015-10-21 03:52:42	2015-10-21 03:52:42
697	18	171	A COMMENT	\N	2015-11-22 13:16:00	2015-11-22 13:16:00
698	42	176	A COMMENT	\N	2015-08-26 08:16:00	2015-08-26 08:16:00
699	42	177	A COMMENT	\N	2015-10-03 07:03:52	2015-10-03 07:03:52
700	42	180	A COMMENT	\N	2015-06-15 04:18:00	2015-06-15 04:18:00
701	27	182	A COMMENT	\N	2015-08-30 01:11:05	2015-08-30 01:11:05
702	27	185	A COMMENT	\N	2015-10-02 09:02:31	2015-10-02 09:02:31
703	27	188	A COMMENT	\N	2015-10-28 13:50:29	2015-10-28 13:50:29
704	27	189	A COMMENT	\N	2015-11-16 16:02:05	2015-11-16 16:02:05
705	27	190	A COMMENT	\N	2015-11-28 03:56:20	2015-11-28 03:56:20
706	27	197	A COMMENT	\N	2015-09-20 07:10:50	2015-09-20 07:10:50
707	27	198	A COMMENT	\N	2015-08-14 10:42:41	2015-08-14 10:42:41
708	45	200	A COMMENT	\N	2015-10-06 03:10:12	2015-10-06 03:10:12
709	45	201	A COMMENT	\N	2015-11-22 00:48:19	2015-11-22 00:48:19
710	45	202	A COMMENT	\N	2015-09-07 10:53:37	2015-09-07 10:53:37
711	45	203	A COMMENT	\N	2015-12-17 09:11:16	2015-12-17 09:11:16
712	45	206	A COMMENT	\N	2015-09-07 06:14:01	2015-09-07 06:14:01
713	45	207	A COMMENT	\N	2015-09-24 04:01:37	2015-09-24 04:01:37
714	45	209	A COMMENT	\N	2015-11-19 14:20:25	2015-11-19 14:20:25
715	45	210	A COMMENT	\N	2015-12-05 08:33:49	2015-12-05 08:33:49
716	45	215	A COMMENT	\N	2015-12-02 06:19:43	2015-12-02 06:19:43
717	49	12	A COMMENT	\N	2015-12-17 15:02:22	2015-12-17 15:02:22
718	26	121	A COMMENT	\N	2016-01-13 21:30:15.188714	2016-01-13 21:30:15.188714
719	7	133	A COMMENT	\N	2015-11-05 17:10:30	2015-11-05 17:10:30
720	23	106	A COMMENT	\N	2016-01-05 14:15:59	2016-01-05 14:15:59
721	17	207	A COMMENT	\N	2015-09-29 01:22:53	2015-09-29 01:22:53
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('comments_id_seq', 721, true);


--
-- Data for Name: daily_counts; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY daily_counts (id, user_id, total, day) FROM stdin;
\.


--
-- Name: daily_counts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('daily_counts_id_seq', 1, false);


--
-- Data for Name: lifecycle_events; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY lifecycle_events (id, user_id, key, happened_at, created_at, updated_at) FROM stdin;
1	1	joined	2015-11-11 03:57:41.948196	2015-11-11 03:57:41.948196	2015-11-11 03:57:41.948196
2	2	joined	2015-06-30 10:32:45.975137	2015-06-30 10:32:45.975137	2015-06-30 10:32:45.975137
3	3	joined	2015-08-27 10:25:37.980808	2015-08-27 10:25:37.980808	2015-08-27 10:25:37.980808
4	4	joined	2015-05-13 04:14:28.984524	2015-05-13 04:14:28.984524	2015-05-13 04:14:28.984524
5	5	joined	2015-07-27 01:11:33.990861	2015-07-27 01:11:33.990861	2015-07-27 01:11:33.990861
6	6	joined	2015-04-29 16:16:17.998057	2015-04-29 16:16:17.998057	2015-04-29 16:16:17.998057
7	6	fetched	2015-04-29 16:21:01.998057	2015-04-29 16:21:01.998057	2015-04-29 16:21:01.998057
8	7	joined	2015-06-24 19:36:35.011465	2015-06-24 19:36:35.011465	2015-06-24 19:36:35.011465
9	7	fetched	2015-06-24 19:41:34.011465	2015-06-24 19:41:34.011465	2015-06-24 19:41:34.011465
10	8	joined	2015-07-06 08:24:45.019675	2015-07-06 08:24:45.019675	2015-07-06 08:24:45.019675
11	9	joined	2015-08-01 09:37:58.022777	2015-08-01 09:37:58.022777	2015-08-01 09:37:58.022777
12	9	fetched	2015-08-01 09:40:54.022777	2015-08-01 09:40:54.022777	2015-08-01 09:40:54.022777
13	10	joined	2015-07-27 08:43:48.027733	2015-07-27 08:43:48.027733	2015-07-27 08:43:48.027733
14	11	joined	2015-11-27 22:45:58.033654	2015-11-27 22:45:58.033654	2015-11-27 22:45:58.033654
15	11	fetched	2015-11-27 22:48:21.033654	2015-11-27 22:48:21.033654	2015-11-27 22:48:21.033654
16	12	joined	2015-12-20 10:41:19.038786	2015-12-20 10:41:19.038786	2015-12-20 10:41:19.038786
17	12	fetched	2015-12-20 10:43:20.038786	2015-12-20 10:43:20.038786	2015-12-20 10:43:20.038786
18	13	joined	2015-05-23 22:48:22.042241	2015-05-23 22:48:22.042241	2015-05-23 22:48:22.042241
19	14	joined	2016-01-07 15:18:30.044211	2016-01-07 15:18:30.044211	2016-01-07 15:18:30.044211
20	14	fetched	2016-01-07 15:25:23.044211	2016-01-07 15:25:23.044211	2016-01-07 15:25:23.044211
21	15	joined	2015-09-27 03:16:50.047416	2015-09-27 03:16:50.047416	2015-09-27 03:16:50.047416
22	15	fetched	2015-09-27 03:25:02.047416	2015-09-27 03:25:02.047416	2015-09-27 03:25:02.047416
23	16	joined	2015-06-15 06:21:36.05859	2015-06-15 06:21:36.05859	2015-06-15 06:21:36.05859
24	16	fetched	2015-06-15 06:26:45.05859	2015-06-15 06:26:45.05859	2015-06-15 06:26:45.05859
25	17	joined	2015-07-31 12:04:28.063678	2015-07-31 12:04:28.063678	2015-07-31 12:04:28.063678
26	17	fetched	2015-07-31 12:08:22.063678	2015-07-31 12:08:22.063678	2015-07-31 12:08:22.063678
27	18	joined	2015-09-19 18:52:46.067766	2015-09-19 18:52:46.067766	2015-09-19 18:52:46.067766
28	18	fetched	2015-09-19 18:57:34.067766	2015-09-19 18:57:34.067766	2015-09-19 18:57:34.067766
29	19	joined	2015-07-10 02:47:04.071352	2015-07-10 02:47:04.071352	2015-07-10 02:47:04.071352
30	19	fetched	2015-07-10 02:54:17.071352	2015-07-10 02:54:17.071352	2015-07-10 02:54:17.071352
31	20	joined	2015-07-01 16:51:24.075257	2015-07-01 16:51:24.075257	2015-07-01 16:51:24.075257
32	20	fetched	2015-07-01 17:00:15.075257	2015-07-01 17:00:15.075257	2015-07-01 17:00:15.075257
33	21	joined	2015-09-29 06:35:04.078059	2015-09-29 06:35:04.078059	2015-09-29 06:35:04.078059
34	21	fetched	2015-09-29 06:44:37.078059	2015-09-29 06:44:37.078059	2015-09-29 06:44:37.078059
35	22	joined	2016-01-03 01:48:00.0812	2016-01-03 01:48:00.0812	2016-01-03 01:48:00.0812
36	22	fetched	2016-01-03 01:55:05.0812	2016-01-03 01:55:05.0812	2016-01-03 01:55:05.0812
37	23	joined	2015-11-08 12:58:01.084283	2015-11-08 12:58:01.084283	2015-11-08 12:58:01.084283
38	23	fetched	2015-11-08 13:07:55.084283	2015-11-08 13:07:55.084283	2015-11-08 13:07:55.084283
39	24	joined	2015-08-24 12:42:00.087428	2015-08-24 12:42:00.087428	2015-08-24 12:42:00.087428
40	24	fetched	2015-08-24 12:51:46.087428	2015-08-24 12:51:46.087428	2015-08-24 12:51:46.087428
41	25	joined	2015-07-31 13:52:35.090507	2015-07-31 13:52:35.090507	2015-07-31 13:52:35.090507
42	25	fetched	2015-07-31 13:59:11.090507	2015-07-31 13:59:11.090507	2015-07-31 13:59:11.090507
43	26	joined	2015-11-18 22:58:37.093753	2015-11-18 22:58:37.093753	2015-11-18 22:58:37.093753
44	26	fetched	2015-11-18 23:01:03.093753	2015-11-18 23:01:03.093753	2015-11-18 23:01:03.093753
45	27	joined	2015-08-12 01:48:10.096846	2015-08-12 01:48:10.096846	2015-08-12 01:48:10.096846
46	27	fetched	2015-08-12 01:53:55.096846	2015-08-12 01:53:55.096846	2015-08-12 01:53:55.096846
47	28	joined	2015-08-17 19:30:13.100703	2015-08-17 19:30:13.100703	2015-08-17 19:30:13.100703
48	28	fetched	2015-08-17 19:34:36.100703	2015-08-17 19:34:36.100703	2015-08-17 19:34:36.100703
49	29	joined	2015-08-15 14:05:48.103897	2015-08-15 14:05:48.103897	2015-08-15 14:05:48.103897
50	29	fetched	2015-08-15 14:10:13.103897	2015-08-15 14:10:13.103897	2015-08-15 14:10:13.103897
51	30	joined	2015-09-26 21:51:37.106896	2015-09-26 21:51:37.106896	2015-09-26 21:51:37.106896
52	30	fetched	2015-09-26 21:55:01.106896	2015-09-26 21:55:01.106896	2015-09-26 21:55:01.106896
53	31	joined	2016-01-01 18:28:56.110211	2016-01-01 18:28:56.110211	2016-01-01 18:28:56.110211
54	31	fetched	2016-01-01 18:36:17.110211	2016-01-01 18:36:17.110211	2016-01-01 18:36:17.110211
55	32	joined	2015-10-13 01:42:28.11313	2015-10-13 01:42:28.11313	2015-10-13 01:42:28.11313
56	32	fetched	2015-10-13 01:50:48.11313	2015-10-13 01:50:48.11313	2015-10-13 01:50:48.11313
57	33	joined	2015-05-07 01:28:57.116167	2015-05-07 01:28:57.116167	2015-05-07 01:28:57.116167
58	33	fetched	2015-05-07 01:35:45.116167	2015-05-07 01:35:45.116167	2015-05-07 01:35:45.116167
59	34	joined	2015-11-08 08:03:19.11921	2015-11-08 08:03:19.11921	2015-11-08 08:03:19.11921
60	34	fetched	2015-11-08 08:08:31.11921	2015-11-08 08:08:31.11921	2015-11-08 08:08:31.11921
61	35	joined	2015-10-19 19:53:04.122154	2015-10-19 19:53:04.122154	2015-10-19 19:53:04.122154
62	35	fetched	2015-10-19 20:00:18.122154	2015-10-19 20:00:18.122154	2015-10-19 20:00:18.122154
63	36	joined	2015-08-23 08:18:12.125241	2015-08-23 08:18:12.125241	2015-08-23 08:18:12.125241
64	36	fetched	2015-08-23 08:24:36.125241	2015-08-23 08:24:36.125241	2015-08-23 08:24:36.125241
65	37	joined	2015-06-22 19:00:13.128142	2015-06-22 19:00:13.128142	2015-06-22 19:00:13.128142
66	37	fetched	2015-06-22 19:09:08.128142	2015-06-22 19:09:08.128142	2015-06-22 19:09:08.128142
67	38	joined	2015-04-23 16:23:53.131261	2015-04-23 16:23:53.131261	2015-04-23 16:23:53.131261
68	38	fetched	2015-04-23 16:26:46.131261	2015-04-23 16:26:46.131261	2015-04-23 16:26:46.131261
69	39	joined	2015-09-07 12:42:18.134603	2015-09-07 12:42:18.134603	2015-09-07 12:42:18.134603
70	40	joined	2015-05-28 21:53:06.137288	2015-05-28 21:53:06.137288	2015-05-28 21:53:06.137288
71	40	fetched	2015-05-28 21:58:51.137288	2015-05-28 21:58:51.137288	2015-05-28 21:58:51.137288
72	41	joined	2015-08-04 05:28:22.14096	2015-08-04 05:28:22.14096	2015-08-04 05:28:22.14096
73	41	fetched	2015-08-04 05:35:00.14096	2015-08-04 05:35:00.14096	2015-08-04 05:35:00.14096
74	42	joined	2015-05-21 02:35:23.143848	2015-05-21 02:35:23.143848	2015-05-21 02:35:23.143848
75	42	fetched	2015-05-21 02:44:51.143848	2015-05-21 02:44:51.143848	2015-05-21 02:44:51.143848
76	43	joined	2015-06-03 15:33:49.146931	2015-06-03 15:33:49.146931	2015-06-03 15:33:49.146931
77	43	fetched	2015-06-03 15:43:16.146931	2015-06-03 15:43:16.146931	2015-06-03 15:43:16.146931
78	44	joined	2015-09-08 17:51:13.149848	2015-09-08 17:51:13.149848	2015-09-08 17:51:13.149848
79	44	fetched	2015-09-08 17:58:25.149848	2015-09-08 17:58:25.149848	2015-09-08 17:58:25.149848
80	45	joined	2015-09-04 23:42:37.153073	2015-09-04 23:42:37.153073	2015-09-04 23:42:37.153073
81	45	fetched	2015-09-04 23:50:28.153073	2015-09-04 23:50:28.153073	2015-09-04 23:50:28.153073
82	46	joined	2015-08-05 01:13:36.156047	2015-08-05 01:13:36.156047	2015-08-05 01:13:36.156047
83	46	fetched	2015-08-05 01:16:59.156047	2015-08-05 01:16:59.156047	2015-08-05 01:16:59.156047
84	47	joined	2015-05-26 03:50:55.159019	2015-05-26 03:50:55.159019	2015-05-26 03:50:55.159019
85	48	joined	2015-09-11 14:06:39.160892	2015-09-11 14:06:39.160892	2015-09-11 14:06:39.160892
86	48	fetched	2015-09-11 14:09:09.160892	2015-09-11 14:09:09.160892	2015-09-11 14:09:09.160892
87	49	joined	2015-09-29 04:47:13.164631	2015-09-29 04:47:13.164631	2015-09-29 04:47:13.164631
88	49	fetched	2015-09-29 04:55:18.164631	2015-09-29 04:55:18.164631	2015-09-29 04:55:18.164631
89	9	submitted	2015-09-11 14:27:07	2015-09-11 14:27:07	2015-09-11 14:27:07
90	9	received_feedback	2015-09-18 02:08:22	2015-09-18 02:08:22	2015-09-18 02:08:22
91	29	commented	2015-09-18 02:08:22	2015-09-18 02:08:22	2015-09-18 02:08:22
92	12	commented	2015-09-28 02:47:09	2015-09-28 02:47:09	2015-09-28 02:47:09
93	48	commented	2015-10-23 13:35:03	2015-10-23 13:35:03	2015-10-23 13:35:03
94	22	commented	2015-11-17 11:07:16	2015-11-17 11:07:16	2015-11-17 11:07:16
95	28	commented	2015-11-22 03:26:54	2015-11-22 03:26:54	2015-11-22 03:26:54
96	33	commented	2015-12-31 11:45:54	2015-12-31 11:45:54	2015-12-31 11:45:54
97	15	commented	2016-01-12 14:26:05	2016-01-12 14:26:05	2016-01-12 14:26:05
98	2	commented	2015-09-25 19:30:32	2015-09-25 19:30:32	2015-09-25 19:30:32
99	46	commented	2015-09-27 18:42:28	2015-09-27 18:42:28	2015-09-27 18:42:28
100	4	commented	2015-12-29 02:32:35	2015-12-29 02:32:35	2015-12-29 02:32:35
101	11	commented	2015-12-31 12:26:09	2015-12-31 12:26:09	2015-12-31 12:26:09
102	31	commented	2015-12-27 21:37:12	2015-12-27 21:37:12	2015-12-27 21:37:12
103	40	commented	2016-01-08 18:40:14	2016-01-08 18:40:14	2016-01-08 18:40:14
104	38	commented	2015-10-29 00:12:59	2015-10-29 00:12:59	2015-10-29 00:12:59
105	11	submitted	2015-12-08 01:13:53	2015-12-08 01:13:53	2015-12-08 01:13:53
106	11	received_feedback	2015-12-28 20:25:58	2015-12-28 20:25:58	2015-12-28 20:25:58
107	44	commented	2015-12-27 08:10:25	2015-12-27 08:10:25	2015-12-27 08:10:25
108	3	commented	2016-01-03 04:39:56	2016-01-03 04:39:56	2016-01-03 04:39:56
109	9	commented	2015-12-21 00:00:29	2015-12-21 00:00:29	2015-12-21 00:00:29
110	11	completed	2015-12-22 04:22:39	2015-12-22 04:22:39	2015-12-22 04:22:39
111	15	submitted	2015-11-21 02:37:11	2015-11-21 02:37:11	2015-11-21 02:37:11
112	15	received_feedback	2015-12-13 05:34:07	2015-12-13 05:34:07	2015-12-13 05:34:07
113	46	onboarded	2015-12-13 05:34:07	2015-12-13 05:34:07	2015-12-13 05:34:07
114	2	onboarded	2015-12-20 02:15:28	2015-12-20 02:15:28	2015-12-20 02:15:28
115	40	onboarded	2016-01-03 06:42:44	2016-01-03 06:42:44	2016-01-03 06:42:44
116	5	commented	2016-01-03 18:08:58	2016-01-03 18:08:58	2016-01-03 18:08:58
117	31	onboarded	2016-01-12 14:16:39	2016-01-12 14:16:39	2016-01-12 14:16:39
118	12	onboarded	2016-01-13 11:12:41	2016-01-13 11:12:41	2016-01-13 11:12:41
119	28	submitted	2015-08-27 05:56:34	2015-08-27 05:56:34	2015-08-27 05:56:34
120	28	received_feedback	2015-09-26 03:29:30	2015-09-26 03:29:30	2015-09-26 03:29:30
121	48	onboarded	2015-12-25 11:34:36	2015-12-25 11:34:36	2015-12-25 11:34:36
122	15	onboarded	2015-12-08 08:27:52	2015-12-08 08:27:52	2015-12-08 08:27:52
123	4	onboarded	2015-12-11 23:15:09	2015-12-11 23:15:09	2015-12-11 23:15:09
124	22	onboarded	2015-12-22 08:36:19	2015-12-22 08:36:19	2015-12-22 08:36:19
125	38	onboarded	2015-12-15 05:39:23	2015-12-15 05:39:23	2015-12-15 05:39:23
126	31	submitted	2016-01-01 22:55:14	2016-01-01 22:55:14	2016-01-01 22:55:14
127	31	received_feedback	2016-01-08 11:56:52	2016-01-08 11:56:52	2016-01-08 11:56:52
128	28	onboarded	2016-01-07 20:44:42	2016-01-07 20:44:42	2016-01-07 20:44:42
129	29	onboarded	2016-01-10 15:44:22	2016-01-10 15:44:22	2016-01-10 15:44:22
130	44	onboarded	2016-01-10 14:42:27	2016-01-10 14:42:27	2016-01-10 14:42:27
131	31	completed	2016-01-13 21:30:12.200388	2016-01-13 21:30:12.200388	2016-01-13 21:30:12.200388
132	33	submitted	2015-11-20 03:34:47	2015-11-20 03:34:47	2015-11-20 03:34:47
133	33	received_feedback	2015-11-24 06:44:34	2015-11-24 06:44:34	2015-11-24 06:44:34
134	33	completed	2015-11-26 18:38:10	2015-11-26 18:38:10	2015-11-26 18:38:10
135	3	onboarded	2016-01-11 01:35:52	2016-01-11 01:35:52	2016-01-11 01:35:52
136	38	submitted	2015-08-18 15:43:22	2015-08-18 15:43:22	2015-08-18 15:43:22
137	38	received_feedback	2015-12-18 14:14:52	2015-12-18 14:14:52	2015-12-18 14:14:52
138	40	submitted	2015-08-07 10:03:03	2015-08-07 10:03:03	2015-08-07 10:03:03
139	40	received_feedback	2015-08-15 22:44:33	2015-08-15 22:44:33	2015-08-15 22:44:33
140	44	submitted	2015-09-09 23:12:33	2015-09-09 23:12:33	2015-09-09 23:12:33
141	44	received_feedback	2015-09-13 01:57:44	2015-09-13 01:57:44	2015-09-13 01:57:44
142	11	onboarded	2015-09-18 15:16:17	2015-09-18 15:16:17	2015-09-18 15:16:17
143	5	onboarded	2016-01-03 18:08:58	2016-01-03 18:08:58	2016-01-03 18:08:58
144	33	onboarded	2015-12-26 23:52:40	2015-12-26 23:52:40	2015-12-26 23:52:40
145	46	submitted	2015-08-21 02:33:09	2015-08-21 02:33:09	2015-08-21 02:33:09
146	46	received_feedback	2015-08-22 23:44:35	2015-08-22 23:44:35	2015-08-22 23:44:35
147	9	onboarded	2016-01-08 21:21:49	2016-01-08 21:21:49	2016-01-08 21:21:49
148	48	submitted	2015-09-30 17:12:06	2015-09-30 17:12:06	2015-09-30 17:12:06
149	48	received_feedback	2015-10-25 00:48:32	2015-10-25 00:48:32	2015-10-25 00:48:32
150	26	submitted	2015-12-31 11:56:43	2015-12-31 11:56:43	2015-12-31 11:56:43
151	26	received_feedback	2016-01-01 20:37:39	2016-01-01 20:37:39	2016-01-01 20:37:39
152	7	submitted	2015-07-25 14:35:00	2015-07-25 14:35:00	2015-07-25 14:35:00
153	7	received_feedback	2015-08-18 04:36:42	2015-08-18 04:36:42	2015-08-18 04:36:42
154	23	submitted	2015-11-12 03:27:50	2015-11-12 03:27:50	2015-11-12 03:27:50
155	23	received_feedback	2015-11-19 00:15:35	2015-11-19 00:15:35	2015-11-19 00:15:35
156	17	submitted	2015-08-24 01:40:23	2015-08-24 01:40:23	2015-08-24 01:40:23
157	17	received_feedback	2015-08-31 02:08:40	2015-08-31 02:08:40	2015-08-31 02:08:40
158	20	submitted	2015-09-11 22:09:08	2015-09-11 22:09:08	2015-09-11 22:09:08
159	20	received_feedback	2015-09-24 02:37:10	2015-09-24 02:37:10	2015-09-24 02:37:10
160	20	completed	2015-07-13 09:10:27	2015-07-13 09:10:27	2015-07-13 09:10:27
161	21	submitted	2015-10-07 07:21:49	2015-10-07 07:21:49	2015-10-07 07:21:49
162	21	received_feedback	2015-10-27 15:08:27	2015-10-27 15:08:27	2015-10-27 15:08:27
163	36	submitted	2015-10-10 08:26:46	2015-10-10 08:26:46	2015-10-10 08:26:46
164	36	received_feedback	2015-11-24 16:24:14	2015-11-24 16:24:14	2015-11-24 16:24:14
165	30	submitted	2015-10-03 10:43:50	2015-10-03 10:43:50	2015-10-03 10:43:50
166	30	received_feedback	2015-10-09 06:45:48	2015-10-09 06:45:48	2015-10-09 06:45:48
167	35	submitted	2015-10-23 00:22:25	2015-10-23 00:22:25	2015-10-23 00:22:25
168	35	received_feedback	2015-10-28 01:18:03	2015-10-28 01:18:03	2015-10-28 01:18:03
169	35	completed	2015-12-09 21:49:37	2015-12-09 21:49:37	2015-12-09 21:49:37
170	14	submitted	2016-01-09 19:32:48	2016-01-09 19:32:48	2016-01-09 19:32:48
171	14	received_feedback	2016-01-10 19:45:10	2016-01-10 19:45:10	2016-01-10 19:45:10
172	41	submitted	2015-08-30 04:42:16	2015-08-30 04:42:16	2015-08-30 04:42:16
173	41	received_feedback	2015-09-30 06:23:50	2015-09-30 06:23:50	2015-09-30 06:23:50
174	34	submitted	2015-11-16 06:03:33	2015-11-16 06:03:33	2015-11-16 06:03:33
175	34	received_feedback	2015-11-25 14:21:21	2015-11-25 14:21:21	2015-11-25 14:21:21
176	16	submitted	2015-07-13 22:46:09	2015-07-13 22:46:09	2015-07-13 22:46:09
177	16	received_feedback	2015-08-11 05:38:06	2015-08-11 05:38:06	2015-08-11 05:38:06
178	18	submitted	2015-09-23 06:47:05	2015-09-23 06:47:05	2015-09-23 06:47:05
179	24	submitted	2015-11-05 23:52:43	2015-11-05 23:52:43	2015-11-05 23:52:43
180	42	submitted	2015-08-26 08:13:02	2015-08-26 08:13:02	2015-08-26 08:13:02
181	27	submitted	2015-08-30 01:04:13	2015-08-30 01:04:13	2015-08-30 01:04:13
182	45	submitted	2015-10-06 07:36:00	2015-10-06 07:36:00	2015-10-06 07:36:00
183	49	commented	2015-12-17 15:02:22	2015-12-17 15:02:22	2015-12-17 15:02:22
184	26	commented	2016-01-13 21:30:15.188714	2016-01-13 21:30:15.188714	2016-01-13 21:30:15.188714
185	7	commented	2015-11-05 17:10:30	2015-11-05 17:10:30	2015-11-05 17:10:30
186	23	commented	2016-01-05 14:15:59	2016-01-05 14:15:59	2016-01-05 14:15:59
187	45	received_feedback	2015-09-29 01:22:53	2015-09-29 01:22:53	2015-09-29 01:22:53
188	17	commented	2015-09-29 01:22:53	2015-09-29 01:22:53	2015-09-29 01:22:53
\.


--
-- Name: lifecycle_events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('lifecycle_events_id_seq', 188, true);


--
-- Data for Name: likes; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY likes (id, submission_id, user_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: likes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('likes_id_seq', 1, false);


--
-- Data for Name: log_entries; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY log_entries (id, user_id, body, created_at, updated_at, key) FROM stdin;
\.


--
-- Name: log_entries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('log_entries_id_seq', 1, false);


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY notifications (id, user_id, item_id, item_type, regarding, read, count, created_at, updated_at, creator_id) FROM stdin;
1	3	1	Submission	code	f	1	2015-09-11 14:27:07	2015-09-11 14:27:07	9
2	3	5	Submission	code	f	1	2015-10-10 19:34:44	2015-10-10 19:34:44	9
3	3	7	Submission	code	f	1	2015-12-17 18:56:41	2015-12-17 18:56:41	9
4	42	10	Submission	code	f	1	2015-12-23 14:52:15	2015-12-23 14:52:15	11
5	4	10	Submission	code	f	1	2015-12-23 14:52:15	2015-12-23 14:52:15	11
6	18	11	Submission	code	f	1	2015-12-25 08:14:40	2015-12-25 08:14:40	11
7	2	12	Submission	code	f	1	2015-12-13 00:20:44	2015-12-13 00:20:44	11
8	3	14	Submission	code	f	1	2015-12-29 02:15:25	2015-12-29 02:15:25	11
9	2	15	Submission	code	f	1	2015-12-27 16:50:36	2015-12-27 16:50:36	11
10	28	16	Submission	code	f	1	2016-01-04 11:22:35	2016-01-04 11:22:35	11
11	20	16	Submission	code	f	1	2016-01-04 11:22:35	2016-01-04 11:22:35	11
12	34	17	Submission	code	f	1	2015-12-08 14:34:31	2015-12-08 14:34:31	11
13	41	17	Submission	code	f	1	2015-12-08 14:34:31	2015-12-08 14:34:31	11
14	2	17	Submission	code	f	1	2015-12-08 14:34:31	2015-12-08 14:34:31	11
15	34	21	Submission	code	f	1	2015-12-14 00:41:23	2015-12-14 00:41:23	11
16	35	21	Submission	code	f	1	2015-12-14 00:41:23	2015-12-14 00:41:23	11
17	45	21	Submission	code	f	1	2015-12-14 00:41:23	2015-12-14 00:41:23	11
18	2	21	Submission	code	f	1	2015-12-14 00:41:23	2015-12-14 00:41:23	11
19	4	21	Submission	code	f	1	2015-12-14 00:41:23	2015-12-14 00:41:23	11
20	27	22	Submission	code	f	1	2015-12-14 14:11:55	2015-12-14 14:11:55	11
21	45	23	Submission	code	f	1	2015-12-21 11:36:27	2015-12-21 11:36:27	11
22	2	23	Submission	code	f	1	2015-12-21 11:36:27	2015-12-21 11:36:27	11
23	34	24	Submission	code	f	1	2015-12-21 18:59:33	2015-12-21 18:59:33	11
24	2	25	Submission	code	f	1	2015-12-22 14:58:03	2015-12-22 14:58:03	11
25	4	25	Submission	code	f	1	2015-12-22 14:58:03	2015-12-22 14:58:03	11
26	3	26	Submission	code	f	1	2015-12-26 00:23:51	2015-12-26 00:23:51	11
27	4	26	Submission	code	f	1	2015-12-26 00:23:51	2015-12-26 00:23:51	11
28	2	28	Submission	code	f	1	2015-12-11 17:30:46	2015-12-11 17:30:46	11
29	3	28	Submission	code	f	1	2015-12-11 17:30:46	2015-12-11 17:30:46	11
30	3	29	Submission	code	f	1	2015-12-13 09:02:55	2015-12-13 09:02:55	11
31	3	30	Submission	code	f	1	2015-12-02 05:14:30	2015-12-02 05:14:30	11
32	4	31	Submission	code	f	1	2015-12-09 05:24:41	2015-12-09 05:24:41	11
33	7	32	Submission	code	f	1	2016-01-11 00:56:13	2016-01-11 00:56:13	11
34	33	32	Submission	code	f	1	2016-01-11 00:56:13	2016-01-11 00:56:13	11
35	20	32	Submission	code	f	1	2016-01-11 00:56:13	2016-01-11 00:56:13	11
36	2	32	Submission	code	f	1	2016-01-11 00:56:13	2016-01-11 00:56:13	11
37	3	32	Submission	code	f	1	2016-01-11 00:56:13	2016-01-11 00:56:13	11
38	4	32	Submission	code	f	1	2016-01-11 00:56:13	2016-01-11 00:56:13	11
39	2	33	Submission	code	f	1	2015-12-01 12:53:56	2015-12-01 12:53:56	11
40	4	33	Submission	code	f	1	2015-12-01 12:53:56	2015-12-01 12:53:56	11
41	3	35	Submission	code	f	1	2015-12-26 18:42:37	2015-12-26 18:42:37	11
42	2	36	Submission	code	f	1	2015-12-27 19:56:53	2015-12-27 19:56:53	11
43	2	95	Submission	code	f	1	2015-09-06 23:59:02	2015-09-06 23:59:02	36
44	2	43	Submission	code	f	1	2016-01-01 22:55:14	2016-01-01 22:55:14	31
45	3	43	Submission	code	f	1	2016-01-01 22:55:14	2016-01-01 22:55:14	31
46	4	44	Submission	code	f	1	2016-01-05 05:26:00	2016-01-05 05:26:00	31
47	2	46	Submission	code	f	1	2016-01-07 18:58:33	2016-01-07 18:58:33	31
48	4	46	Submission	code	f	1	2016-01-07 18:58:33	2016-01-07 18:58:33	31
49	2	47	Submission	code	f	1	2016-01-07 17:00:15	2016-01-07 17:00:15	31
50	4	47	Submission	code	f	1	2016-01-07 17:00:15	2016-01-07 17:00:15	31
51	44	48	Submission	code	f	1	2015-11-20 03:34:47	2015-11-20 03:34:47	33
52	4	50	Submission	code	f	1	2015-09-22 19:55:14	2015-09-22 19:55:14	33
53	3	52	Submission	code	f	1	2015-08-18 15:43:22	2015-08-18 15:43:22	38
54	23	54	Submission	code	f	1	2015-12-07 00:56:58	2015-12-07 00:56:58	40
55	3	58	Submission	code	f	1	2015-10-10 04:44:52	2015-10-10 04:44:52	48
56	3	71	Submission	code	f	1	2015-09-10 20:42:37	2015-09-10 20:42:37	7
57	3	63	Submission	code	f	1	2015-12-31 11:56:43	2015-12-31 11:56:43	26
58	3	65	Submission	code	f	1	2015-12-04 16:22:12	2015-12-04 16:22:12	26
59	2	67	Submission	code	f	1	2016-01-03 10:53:23	2016-01-03 10:53:23	26
60	3	67	Submission	code	f	1	2016-01-03 10:53:23	2016-01-03 10:53:23	26
61	2	68	Submission	code	f	1	2015-07-25 14:35:00	2015-07-25 14:35:00	7
62	4	69	Submission	code	f	1	2015-07-12 21:46:21	2015-07-12 21:46:21	7
63	2	72	Submission	code	f	1	2015-09-19 16:38:09	2015-09-19 16:38:09	7
64	4	72	Submission	code	f	1	2015-09-19 16:38:09	2015-09-19 16:38:09	7
65	45	73	Submission	code	f	1	2015-11-05 13:07:47	2015-11-05 13:07:47	7
66	3	73	Submission	code	f	1	2015-11-05 13:07:47	2015-11-05 13:07:47	7
67	3	76	Submission	code	f	1	2015-12-21 14:53:28	2015-12-21 14:53:28	23
68	3	82	Submission	code	f	1	2015-11-17 04:55:09	2015-11-17 04:55:09	17
69	2	83	Submission	code	f	1	2015-09-11 21:50:32	2015-09-11 21:50:32	17
70	2	86	Submission	code	f	1	2015-07-11 09:22:47	2015-07-11 09:22:47	20
71	3	92	Submission	code	f	1	2015-10-10 08:26:46	2015-10-10 08:26:46	36
72	27	99	Submission	code	f	1	2015-11-04 18:21:14	2015-11-04 18:21:14	35
73	34	101	Submission	code	f	1	2015-11-19 04:59:42	2015-11-19 04:59:42	35
74	11	102	Submission	code	f	1	2015-12-04 17:09:13	2015-12-04 17:09:13	35
75	45	102	Submission	code	f	1	2015-12-04 17:09:13	2015-12-04 17:09:13	35
76	4	103	Submission	code	f	1	2015-12-06 21:27:20	2015-12-06 21:27:20	35
77	11	104	Submission	code	f	1	2015-12-31 13:05:37	2015-12-31 13:05:37	35
78	34	106	Submission	code	f	1	2016-01-05 10:15:38	2016-01-05 10:15:38	35
79	17	108	Submission	code	f	1	2015-11-30 12:18:02	2015-11-30 12:18:02	35
80	4	108	Submission	code	f	1	2015-11-30 12:18:02	2015-11-30 12:18:02	35
81	17	109	Submission	code	f	1	2015-12-06 22:23:43	2015-12-06 22:23:43	35
82	45	112	Submission	code	f	1	2015-11-15 02:38:00	2015-11-15 02:38:00	35
83	45	114	Submission	code	f	1	2015-11-24 07:50:45	2015-11-24 07:50:45	35
84	4	114	Submission	code	f	1	2015-11-24 07:50:45	2015-11-24 07:50:45	35
85	4	115	Submission	code	f	1	2015-12-02 20:12:40	2015-12-02 20:12:40	35
86	45	116	Submission	code	f	1	2015-12-04 18:07:15	2015-12-04 18:07:15	35
87	24	193	Submission	code	f	1	2015-11-19 06:06:25	2015-11-19 06:06:25	27
88	45	117	Submission	code	f	1	2015-12-07 17:59:43	2015-12-07 17:59:43	35
89	9	119	Submission	code	f	1	2016-01-09 19:32:48	2016-01-09 19:32:48	14
90	2	119	Submission	code	f	1	2016-01-09 19:32:48	2016-01-09 19:32:48	14
91	3	119	Submission	code	f	1	2016-01-09 19:32:48	2016-01-09 19:32:48	14
92	41	120	Submission	code	f	1	2016-01-08 16:08:40	2016-01-08 16:08:40	14
93	28	120	Submission	code	f	1	2016-01-08 16:08:40	2016-01-08 16:08:40	14
94	20	120	Submission	code	f	1	2016-01-08 16:08:40	2016-01-08 16:08:40	14
95	2	120	Submission	code	f	1	2016-01-08 16:08:40	2016-01-08 16:08:40	14
96	3	120	Submission	code	f	1	2016-01-08 16:08:40	2016-01-08 16:08:40	14
97	41	121	Submission	code	f	1	2016-01-10 19:09:08	2016-01-10 19:09:08	14
98	3	121	Submission	code	f	1	2016-01-10 19:09:08	2016-01-10 19:09:08	14
99	4	122	Submission	code	f	1	2015-08-30 04:42:16	2015-08-30 04:42:16	41
100	4	138	Submission	code	f	1	2015-11-20 02:39:44	2015-11-20 02:39:44	34
101	44	128	Submission	code	f	1	2015-11-29 07:50:51	2015-11-29 07:50:51	41
102	4	128	Submission	code	f	1	2015-11-29 07:50:51	2015-11-29 07:50:51	41
103	4	130	Submission	code	f	1	2015-09-10 15:48:27	2015-09-10 15:48:27	41
104	16	131	Submission	code	f	1	2015-09-13 16:06:54	2015-09-13 16:06:54	41
105	4	133	Submission	code	f	1	2015-11-02 11:42:56	2015-11-02 11:42:56	41
106	24	134	Submission	code	f	1	2015-11-16 06:03:33	2015-11-16 06:03:33	34
107	38	135	Submission	code	f	1	2015-11-21 18:27:35	2015-11-21 18:27:35	34
108	35	136	Submission	code	f	1	2015-11-09 13:36:07	2015-11-09 13:36:07	34
109	45	136	Submission	code	f	1	2015-11-09 13:36:07	2015-11-09 13:36:07	34
110	27	137	Submission	code	f	1	2015-11-13 00:43:54	2015-11-13 00:43:54	34
111	45	137	Submission	code	f	1	2015-11-13 00:43:54	2015-11-13 00:43:54	34
112	27	141	Submission	code	f	1	2015-12-04 22:23:34	2015-12-04 22:23:34	34
113	45	141	Submission	code	f	1	2015-12-04 22:23:34	2015-12-04 22:23:34	34
114	4	141	Submission	code	f	1	2015-12-04 22:23:34	2015-12-04 22:23:34	34
115	27	142	Submission	code	f	1	2015-12-20 01:23:17	2015-12-20 01:23:17	34
116	27	144	Submission	code	f	1	2015-12-29 18:29:00	2015-12-29 18:29:00	34
117	11	144	Submission	code	f	1	2015-12-29 18:29:00	2015-12-29 18:29:00	34
118	4	148	Submission	code	f	1	2015-11-23 21:46:02	2015-11-23 21:46:02	34
119	35	151	Submission	code	f	1	2015-12-02 20:58:42	2015-12-02 20:58:42	34
120	17	151	Submission	code	f	1	2015-12-02 20:58:42	2015-12-02 20:58:42	34
121	4	151	Submission	code	f	1	2015-12-02 20:58:42	2015-12-02 20:58:42	34
122	4	152	Submission	code	f	1	2015-12-23 05:44:23	2015-12-23 05:44:23	34
123	4	153	Submission	code	f	1	2015-12-05 05:35:09	2015-12-05 05:35:09	34
124	45	155	Submission	code	f	1	2015-12-22 10:12:20	2015-12-22 10:12:20	34
125	4	156	Submission	code	f	1	2015-12-31 06:22:11	2015-12-31 06:22:11	34
126	3	191	Submission	code	f	1	2015-08-18 03:06:59	2015-08-18 03:06:59	27
127	45	159	Submission	code	f	1	2015-11-09 11:33:45	2015-11-09 11:33:45	34
128	42	164	Submission	code	f	1	2015-12-04 09:25:59	2015-12-04 09:25:59	18
129	2	165	Submission	code	f	1	2015-10-06 02:52:33	2015-10-06 02:52:33	18
130	2	166	Submission	code	f	1	2015-10-24 20:46:48	2015-10-24 20:46:48	18
131	4	166	Submission	code	f	1	2015-10-24 20:46:48	2015-10-24 20:46:48	18
132	4	169	Submission	code	f	1	2015-10-21 03:48:56	2015-10-21 03:48:56	18
133	3	170	Submission	code	f	1	2015-11-21 00:58:12	2015-11-21 00:58:12	18
134	4	170	Submission	code	f	1	2015-11-21 00:58:12	2015-11-21 00:58:12	18
135	9	172	Submission	code	f	1	2015-11-04 14:32:00	2015-11-04 14:32:00	18
136	4	176	Submission	code	f	1	2015-08-26 08:13:02	2015-08-26 08:13:02	42
137	4	177	Submission	code	f	1	2015-10-03 07:01:44	2015-10-03 07:01:44	42
138	2	178	Submission	code	f	1	2015-06-05 05:35:07	2015-06-05 05:35:07	42
139	4	178	Submission	code	f	1	2015-06-05 05:35:07	2015-06-05 05:35:07	42
140	2	179	Submission	code	f	1	2015-06-12 20:21:19	2015-06-12 20:21:19	42
141	4	179	Submission	code	f	1	2015-06-12 20:21:19	2015-06-12 20:21:19	42
142	45	185	Submission	code	f	1	2015-10-02 08:52:42	2015-10-02 08:52:42	27
143	3	185	Submission	code	f	1	2015-10-02 08:52:42	2015-10-02 08:52:42	27
144	45	187	Submission	code	f	1	2015-10-24 16:46:18	2015-10-24 16:46:18	27
145	2	189	Submission	code	f	1	2015-11-16 15:58:52	2015-11-16 15:58:52	27
146	3	198	Submission	code	f	1	2015-08-14 10:37:58	2015-08-14 10:37:58	27
147	40	200	Submission	code	f	1	2015-10-06 03:05:33	2015-10-06 03:05:33	45
148	23	201	Submission	code	f	1	2015-11-22 00:39:57	2015-11-22 00:39:57	45
149	3	203	Submission	code	f	1	2015-12-17 09:03:24	2015-12-17 09:03:24	45
150	3	212	Submission	code	f	1	2015-12-25 00:41:57	2015-12-25 00:41:57	45
151	3	215	Submission	code	f	1	2015-12-02 06:14:40	2015-12-02 06:14:40	45
\.


--
-- Name: notifications_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('notifications_id_seq', 151, true);


--
-- Data for Name: submissions; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY submissions (id, user_id, key, state, language, slug, done_at, is_liked, nit_count, version, user_exercise_id, created_at, updated_at, solution) FROM stdin;
1	9	6adf97fae2579d6622990bac	hibernating	php	rna-transcription	\N	\N	0	1	1	2015-09-11 14:27:07	2015-09-11 14:27:07	{"/php/rna-transcription/rna-transcription.php":"\\u003c?php \\n    function toRna($dna)\\n    {\\n        $translate = array(\\"G\\" =\\u003e \\"C\\", \\"C\\" =\\u003e \\"G\\", \\"T\\" =\\u003e \\"A\\", \\"A\\" =\\u003e \\"U\\");\\n        $rna = \\"\\";\\n        $chars = str_split($dna);\\n        foreach($chars as $char){\\n            $rna = $rna.$translate[$char];\\n        }\\n        return $rna;\\n    }\\n\\n?\\u003e"}
2	9	97c1979170e25b3d89966c95	hibernating	ruby	hamming	\N	\N	0	6	2	2015-08-03 22:01:11	2015-08-03 22:01:11	{"point-mutations.rb":"class DNA\\n\\n  def initialize(dna1)\\n   @dna1 = dna1\\n   @calc = HammingDistanceCalculator.new\\n  end\\n\\n  def hamming_distance(dna2)\\n   calc.distance(dna1, dna2)\\n  end\\n\\n private\\n\\n  attr_reader :dna1, :calc\\n\\nend\\n\\nclass HammingDistanceCalculator\\n\\n  def distance(strand1, strand2)\\n    short, long = sort_by_length(strand1, strand2)\\n    short.chars.zip(long.chars).count{ |a,b| a != b }\\n  end\\n\\n  private\\n\\n  def sort_by_length(strand1, strand2)\\n    [strand1, strand2].sort_by(\\u0026:length)\\n  end\\n\\nend"}
3	9	3ea4a60b8d35959840fb3f96	superseded	ruby	hamming	\N	\N	0	5	2	2015-08-29 18:46:45	2015-08-29 18:46:45	{"point-mutations.rb":"class DNA\\n\\n  def initialize(dna1)\\n   @dna1 = dna1\\n   @calc = HammingDistanceCalculator.new\\n  end\\n\\n  def hamming_distance(dna2)\\n    calc.distance(dna1, dna2)\\n  end\\n\\n private\\n\\n  attr_reader :dna1, :calc\\n\\nend\\n\\nclass HammingDistanceCalculator\\n\\n  def distance(strand1, strand2)\\n    short, long = sort_by_length(strand1, strand2)\\n    short.chars.select.each_with_index{|char, index| long[index] != char }.length\\n  end\\n\\n  private\\n\\n  def sort_by_length(strand1, strand2)\\n    [strand1, strand2].sort_by(\\u0026:length)\\n  end\\n\\nend"}
4	9	45a63e8ccf156ebb95b43dfd	superseded	ruby	hamming	\N	\N	0	3	2	2015-09-13 01:02:38	2015-09-13 01:02:38	{"point-mutations.rb":"class DNA\\n\\n  def initialize(dna1)\\n   @dna1 = dna1\\n   @calc = HammingDistanceCalculator.new\\n  end\\n\\n  def hamming_distance(dna2)\\n    calc.distance(dna1, dna2)\\n  end\\n\\n private\\n\\n  attr_reader :dna1, :calc\\n\\nend\\n\\nclass HammingDistanceCalculator\\n\\n  def distance(strand1, strand2)\\n    shorter, longer = sort_by_length(strand1, strand2)\\n    distance = 0\\n    shorter.chars.each_with_index do |nucleobase, index|\\n      distance += 1 unless longer[index] == nucleobase\\n    end  \\n    distance\\n  end\\n\\n  private\\n\\n  def sort_by_length(strand1, strand2)\\n    [strand1, strand2].sort_by(\\u0026:length)\\n  end\\n\\nend"}
5	9	78fa0c01321e6fa59c4b8178	superseded	ruby	hamming	\N	\N	0	2	2	2015-10-10 19:34:44	2015-10-10 19:34:44	{"point-mutations.rb":"class DNA\\n\\n  def initialize(dna1)\\n   @dna1 = dna1\\n   @calc = HammingDistanceCalculator.new\\n  end\\n\\n  def hamming_distance(dna2)\\n    calc.distance(dna1, dna2)\\n  end\\n\\n private\\n\\n  attr_reader :dna1, :calc\\n\\nend\\n\\nclass HammingDistanceCalculator\\n\\n  def distance(strand1, strand2)\\n    shorter, longer = sort_by_length(strand1, strand2)\\n    distance = 0\\n    shorter.chars.each_with_index do |nucleobase, index|\\n      distance += 1 if longer[index] != nucleobase\\n    end  \\n    distance\\n  end\\n\\n  private\\n\\n  def sort_by_length(strand1, strand2)\\n    [strand1, strand2].sort_by(\\u0026:length)\\n  end\\n\\nend"}
6	9	186cb7cae6a7493aed2c15f5	superseded	ruby	hamming	\N	\N	0	4	2	2015-10-25 18:43:37	2015-10-25 18:43:37	{"point-mutations.rb":"class DNA\\n\\n  def initialize(dna1)\\n   @dna1 = dna1\\n   @calc = HammingDistanceCalculator.new\\n  end\\n\\n  def hamming_distance(dna2)\\n    calc.distance(dna1, dna2)\\n  end\\n\\n private\\n\\n  attr_reader :dna1, :calc\\n\\nend\\n\\nclass HammingDistanceCalculator\\n\\n  def distance(strand1, strand2)\\n    short, long = sort_by_length(strand1, strand2)\\n    short.chars.keep_if.each_with_index{|char, index| long[index] != char }.length\\n  end\\n\\n  private\\n\\n  def sort_by_length(strand1, strand2)\\n    [strand1, strand2].sort_by(\\u0026:length)\\n  end\\n\\nend"}
7	9	7cc7a8b75485f9510b4ada9a	superseded	ruby	hamming	\N	\N	0	1	2	2015-12-17 18:56:41	2015-12-17 18:56:41	{"point-mutations.rb":"class DNA\\n\\n  def initialize(dna1)\\n   @dna1 = dna1\\n  end\\n\\n  def hamming_distance(dna2)\\n    @dna2 = dna2\\n    distance = 0\\n    shorter_strand.chars.each_with_index do |nucleobase, index|\\n      distance += 1 if longer_strand[index] != nucleobase\\n    end\\n    distance\\n  end\\n\\n private\\n\\n  attr_reader :dna1, :dna2\\n\\n  def shorter_strand\\n    dna1.length \\u003e dna2.length ? dna2 : dna1\\n  end\\n\\n  def longer_strand\\n    dna1.length \\u003e dna2.length ? dna1 : dna2\\n  end\\n\\nend"}
8	9	c32be9b18ddda3c521ac731c	pending	javascript	hello-world	\N	\N	0	1	6	2015-08-28 08:14:05	2015-08-28 08:14:05	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function () {};\\n\\nHelloWorld.prototype.hello = function (input) {\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n    if (input) {\\n        return 'Hello, ' + input + '!';\\n    } else {\\n        return 'Hello, world!';\\n    }\\n};\\n\\nmodule.exports = HelloWorld;"}
9	11	d79e0770bf002418990d3995	\N	javascript	etl	\N	\N	0	1	8	2015-12-08 01:13:53	2015-12-08 01:13:53	{"etl.js":"module.exports = function(old){\\n  var shiny = {};\\n  for (var key in old){\\n    old[key].forEach(function(letter){\\n      shiny[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n  return shiny;\\n}"}
10	11	c3ce1adff797f278992a66c7	superseded	ruby	difference-of-squares	\N	\N	0	1	11	2015-12-23 14:52:15	2015-12-23 14:52:15	{"squares.rb":"class Squares\\n  attr_reader :range\\n\\n  def initialize(maximum_number)\\n    @range = (1..maximum_number.to_i)\\n  end\\n\\n  def sum_of_squares\\n    range.inject(0) {|accumulator, number| accumulator + number ** 2 }\\n  end\\n\\n  def square_of_sums\\n    range.inject(\\u0026:+) ** 2\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
11	11	a20b50ae725d08e83802e595	done	ruby	difference-of-squares	\N	\N	0	2	11	2015-12-25 08:14:40	2015-12-25 08:14:40	{"squares.rb":"class Squares\\n  attr_reader :range\\n\\n  def initialize(maximum_number)\\n    @range = (1..maximum_number.to_i)\\n  end\\n\\n  def sum_of_squares\\n    range.inject {|accumulator, number| accumulator + number ** 2 }\\n  end\\n\\n  def square_of_sums\\n    range.inject(\\u0026:+) ** 2\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
12	11	ec07e23d69522cbf134bc73a	pending	csharp	hamming	\N	\N	0	1	13	2015-12-13 00:20:44	2015-12-13 00:20:44	{"Hamming.cs":"using System;\\r\\nusing System.Collections.Generic;\\r\\n\\r\\nclass Hamming\\r\\n{\\r\\n    public static int Compute(string strandA, string strandB)\\r\\n    {\\r\\n        strandA = strandA.Trim();\\r\\n        strandB = strandB.Trim();\\r\\n        if (strandA.Length == 0 || strandB.Length == 0)\\r\\n        {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        int distance = 0;\\r\\n        for (int i = 0; i \\u003c strandA.Length \\u0026\\u0026 i \\u003c strandB.Length; i++)\\r\\n        {\\r\\n            if (strandA[i] != strandB[i])\\r\\n            {\\r\\n                distance++;\\r\\n            }\\r\\n        }\\r\\n        return distance;\\r\\n    }\\r\\n}"}
13	11	f0fd7008032b130af2635370	\N	python	etl	\N	\N	0	1	18	2015-12-10 07:48:40	2015-12-10 07:48:40	{"etl.py":"def transform(d):\\n    return {value.lower(): key\\n            for key, group in d.items() for value in group}"}
14	11	5233df6499cd1318009ccb15	pending	ruby	rna-transcription	\N	\N	0	1	19	2015-12-29 02:15:25	2015-12-29 02:15:25	{"/ruby/rna-transcription/complement.rb":"class Complement\\n\\n\\tdef self.of_dna(strand)\\n\\t\\tstrand.tr('GCTA','CGAU')\\n\\tend\\n\\t\\n\\tdef self.of_rna(strand)\\n\\t\\tstrand.tr('CGAU','GCTA')\\n\\tend\\nend"}
15	11	a1b94f55f408156695154983	pending	python	word-count	\N	\N	0	2	20	2015-12-27 16:50:36	2015-12-27 16:50:36	{"wordcount.py":"from collections import Counter\\ndef word_count(text):\\n    return Counter(text.split())"}
16	11	cb5e04fbf63ca0d28ba76ee5	superseded	python	word-count	\N	\N	0	1	20	2016-01-04 11:22:35	2016-01-04 11:22:35	{"wordcount.py":"def word_count(text):\\n    counts = {}\\n    for word in text.split():\\n        counts[word] = counts.get(word, 0) + 1\\n    return counts"}
17	11	1075b2b84ceb5f45558f43b5	done	ruby	phone-number	\N	\N	0	1	22	2015-12-08 14:34:31	2015-12-08 14:34:31	{"phone-number.rb":"class PhoneNumber\\n  attr_reader :phone_number\\n  alias_method :number, :phone_number\\n\\n  def initialize( raw_phone_number )\\n    cleaned_number = clean_phone_number( raw_phone_number ) \\n    if valid_phone_number?( cleaned_number ) \\n      @phone_number = cleaned_number \\n      make_phone_number_10_digits_long\\n    else\\n      @phone_number = \\"0\\" * 10\\n    end\\n  end\\n\\n  def area_code\\n    @phone_number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(\\" + @phone_number[0..2] + \\") \\" + @phone_number[3..5] + \\"-\\" + @phone_number[6..9] \\n  end\\n\\n  def make_phone_number_10_digits_long\\n    if @phone_number.length == 11\\n      @phone_number = @phone_number[1..10]\\n    end\\n  end\\n\\n  def valid_phone_number?( number=\\"\\" )\\n    case number.length\\n    when 10 \\n      true\\n    when 11 then \\n      number[0] == \\"1\\" ? true : false\\n    else\\n      false\\n    end\\n  end\\n\\n  def clean_phone_number( raw_phone_number )\\n    cleaned_number = \\"\\"\\n    raw_phone_number.chars.each { |d| cleaned_number \\u003c\\u003c d  unless d.match(/[0-9]/).nil? }\\n    cleaned_number    \\n  end\\nend"}
18	11	7b8f532ee0930488a1b2ff45	superseded	ruby	word-count	\N	\N	0	5	23	2015-11-29 16:12:11	2015-11-29 16:12:11	{"word-count.rb":"class Counter \\u003c Hash\\n  def add(item)\\n    k = key_for(item)\\n    self[k] = count_for(k) + 1\\n  end\\n  \\n  private\\n  \\n  def count_for(k)\\n    (has_key? k) ? self[k] : 0\\n  end\\n  \\n  def key_for(item)\\n  \\titem.to_s.strip.downcase\\n  end\\nend\\n\\nclass Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    split(@input).each_with_object(Counter.new) { |w, counter| counter.add w }\\n  end\\n\\t\\n  private\\n\\t\\n  def split(input)\\n    input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
19	11	04e7f15c6ba7d79968f4f420	superseded	ruby	word-count	\N	\N	0	1	23	2015-12-04 12:10:07	2015-12-04 12:10:07	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
20	11	ab28497bca98373d1cfaa07e	superseded	ruby	word-count	\N	\N	0	3	23	2015-12-06 18:48:29	2015-12-06 18:48:29	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase.to_sym\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
21	11	713f51d771529926285e46f6	superseded	ruby	word-count	\N	\N	0	4	23	2015-12-14 00:41:23	2015-12-14 00:41:23	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
22	11	1daa9751391548551f71e35f	superseded	ruby	word-count	\N	\N	0	6	23	2015-12-14 14:11:55	2015-12-14 14:11:55	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(counter) { |w, c| c[key_for(w)] += 1 }\\n  end\\n  \\n  private\\n  \\n  def counter\\n    Hash.new {|h,k| h.default = 0}\\n  end\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
23	11	fb5a8a7cec907ae33173aee1	superseded	ruby	word-count	\N	\N	0	2	23	2015-12-21 11:36:27	2015-12-21 11:36:27	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
24	11	b9de7b16e8d6963870c57d83	superseded	ruby	word-count	\N	\N	0	7	23	2015-12-21 18:59:33	2015-12-21 18:59:33	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) do |w, c| \\n      c[key_for(w)] += 1 \\n    end\\n  end\\n  \\n  private\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
25	11	6b9361f02d169d044e4e72a1	superseded	ruby	word-count	\N	\N	0	8	23	2015-12-22 14:58:03	2015-12-22 14:58:03	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
26	11	5dea86ec5968245aa293c72b	done	ruby	word-count	\N	\N	0	9	23	2015-12-26 00:23:51	2015-12-26 00:23:51	{"phrase.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/[\\\\w']+/)\\n  end\\nend"}
27	11	7f331f2c7c05762585682f55	done	ruby	beer-song	\N	\N	0	1	25	2015-11-29 02:27:35	2015-11-29 02:27:35	{"beer-song.rb":"class BeerSong\\n  def verse(num_on_wall, remaining = num_on_wall)\\n    phrase1 = \\"#{bottle_number(num_on_wall).capitalize} #{bottles_plural?(num_on_wall)} of beer on the wall, #{bottle_number(num_on_wall)} #{bottles_plural?(num_on_wall)} of beer.\\\\n\\"\\n\\n    num_on_wall -= 1\\n    if num_on_wall == -1\\n      phrase2 = \\"Go to the store and buy some more, 99 bottles of beer on the wall.\\\\n\\"\\n    else\\n      phrase2 = \\"Take #{pronoun(num_on_wall)} down and pass it around, #{bottle_number(num_on_wall)} #{bottles_plural?(num_on_wall)} of beer on the wall.\\\\n\\"\\n    end\\n\\n    return phrase1 + phrase2\\n  end\\n\\n  def verses(num_on_wall, remaining)\\n    return \\"\\" if remaining \\u003e num_on_wall\\n\\n    song = verse(num_on_wall) + \\"\\\\n\\"\\n    song += verses(num_on_wall - 1, remaining)\\n    return song\\n  end\\n\\n  def sing\\n    verses(99, 0)\\n  end\\n\\n  private\\n\\n  def bottles_plural?(num)\\n    num == 1 ? correctly_pluralized_bottle = \\"bottle\\" : correctly_pluralized_bottle = \\"bottles\\"\\n    return correctly_pluralized_bottle\\n  end\\n\\n  def bottle_number(num)\\n    num == 0 ? how_many_bottles = \\"no more\\" : how_many_bottles = num.to_s\\n    return how_many_bottles\\n  end\\n\\n  def pronoun(num)\\n    num == 0 ? correct_pronoun = \\"it\\" : correct_pronoun = \\"one\\"\\n    return correct_pronoun\\n  end\\n\\nend"}
28	11	8d7945e515bc57e3aac856b2	done	python	leap	\N	\N	0	1	27	2015-12-11 17:30:46	2015-12-11 17:30:46	{"year.py":"def is_leap_year(year):\\n    if (year % 400 == 0):\\n        return True;\\n    elif (year % 100 == 0):\\n        return False;\\n    elif (year % 4 == 0):\\n        return True;\\n    else\\n        return False;"}
29	11	597caff6ac98ead3f502c853	done	ruby	atbash-cipher	\N	\N	0	1	28	2015-12-13 09:02:55	2015-12-13 09:02:55	{"/ruby/atbash-cipher/atbash.rb":"class Atbash\\n  def self.encode(plaintext)\\n    a_to_z = (\\"a\\"..\\"z\\").to_a.join\\n    normalized_text = plaintext.downcase.gsub(/[^a-z0-9]/i,\\"\\")\\n    normalized_text.tr(a_to_z, a_to_z.reverse).scan(/.{,5}/).join(\\" \\").strip\\n  end\\nend"}
30	11	e95d0428219a2b442a43e462	done	ruby	series	\N	\N	0	2	29	2015-12-02 05:14:30	2015-12-02 05:14:30	{"series.rb":"class Series\\n  attr_reader :digits\\n\\n  def initialize(string)\\n    @digits = string.chars.map(\\u0026:to_i)\\n  end\\n\\n  def slices(slice_length)\\n    if slice_length \\u003e @digits.length\\n      raise ArgumentError, \\"Slice length (#{slice_length}) can't exceed number of digits (#{@digits.length}).\\"\\n    end\\n\\n    digits.each_cons(slice_length).to_a\\n  end\\nend"}
31	11	0288c211d8d2701513d44bf6	superseded	ruby	series	\N	\N	0	1	29	2015-12-09 05:24:41	2015-12-09 05:24:41	{"series.rb":"class Series\\n  def initialize(string)\\n    @string = string\\n  end\\n\\n  def digits\\n    string.chars.map(\\u0026:to_i)\\n  end\\n\\n  def slices(slice_length)\\n    if slice_length \\u003e string.length\\n      raise ArgumentError, \\"Slice length (#{slice_length}) can't exceed string length (#{string.length}).\\"\\n    end\\n\\n    digits.each_cons(slice_length).to_a\\n  end\\n\\n  private\\n\\n  attr_reader :string\\nend"}
32	11	fa93d2b01ad911ecd44d11a5	done	go	house	\N	\N	0	1	30	2016-01-11 00:56:13	2016-01-11 00:56:13	{"house.go":"package house\\n\\nfunc Embed(phrase, endPhrase string) string{\\n\\treturn phrase + \\" \\" + endPhrase\\n}\\n\\nfunc Verse(startPhrase string, phrases []string, endPhrase string) string {\\n\\treturn startPhrase + \\" \\" + recurse(phrases, endPhrase)\\n}\\n\\nfunc recurse(phrases []string, endPhrase string) string {\\n\\tif len(phrases) == 0 {\\n\\t\\treturn endPhrase\\n\\t}\\n\\treturn Embed(phrases[0], recurse(phrases[1:], endPhrase))\\n}\\n\\nfunc Song() string {\\n\\tphrases := []string{\\n\\t\\t\\t\\"the horse and the hound and the horn\\\\nthat belonged to\\",\\n\\t\\t\\t\\"the farmer sowing his corn\\\\nthat kept\\",\\n\\t\\t\\t\\"the rooster that crowed in the morn\\\\nthat woke\\",\\n\\t\\t\\t\\"the priest all shaven and shorn\\\\nthat married\\",\\n\\t\\t\\t\\"the man all tattered and torn\\\\nthat kissed\\",\\n\\t\\t\\t\\"the maiden all forlorn\\\\nthat milked\\",\\n\\t\\t\\t\\"the cow with the crumpled horn\\\\nthat tossed\\",\\n\\t\\t\\t\\"the dog\\\\nthat worried\\",\\n\\t\\t\\t\\"the cat\\\\nthat killed\\",\\n\\t\\t\\t\\"the rat\\\\nthat ate\\",\\n\\t\\t\\t\\"the malt\\\\nthat lay in\\",\\n\\t\\t}\\n\\tstartPhrase := \\"This is\\"\\n\\tendPhrase := \\"the house that Jack built.\\"\\n\\n\\ts := startPhrase + \\" \\" + endPhrase\\n\\tfor i := len(phrases) -1 ; i \\u003e= 0; i-- {\\n\\t\\ts += \\"\\\\n\\\\n\\" + Verse(startPhrase, phrases[i:], endPhrase)\\n\\t}\\n\\treturn s\\n}"}
33	11	8ed117b21c64285c00486510	\N	javascript	rna-transcription	\N	\N	0	1	31	2015-12-01 12:53:56	2015-12-01 12:53:56	{"rna_transcription.js":"var rnaTranslationMap = {\\n  'C': 'G',\\n  'G': 'C',\\n  'A': 'U',\\n  'T': 'A'\\n}\\nvar toRna = function(dna){\\n  var transcribedRna = [];\\n  for(var i = 0; i\\u003cdna.length; i++){\\n    var translatedNucleotide = rnaTranslationMap[dna[i]];\\n    transcribedRna.push(translatedNucleotide);\\n  }\\n  return transcribedRna.join('');\\n}\\n\\nmodule.exports = toRna;"}
34	11	398faeb25a2ece53b142c13a	\N	javascript	rna-transcription	\N	\N	0	2	31	2015-12-18 19:04:54	2015-12-18 19:04:54	{"rna_transcription.js":"var rnaTranslationMap = {\\n  'C': 'G',\\n  'G': 'C',\\n  'A': 'U',\\n  'T': 'A'\\n}\\nvar toRna = function(dna){\\n  var transcribedRna = [];\\n  for(var i = 0; i\\u003cdna.length; i++){\\n    transcribedRna.push(rnaTranslationMap[dna[i]]);\\n  }\\n  return transcribedRna.join('');\\n}\\n\\nmodule.exports = toRna;"}
35	11	29f2dcf198f4fe89d20d9970	\N	javascript	rna-transcription	\N	\N	0	3	31	2015-12-26 18:42:37	2015-12-26 18:42:37	{"rna_transcription.js":"var rnaTranscriptionTable = {\\n  C: 'G',\\n  G: 'C',\\n  A: 'U',\\n  T: 'A'\\n}\\nvar toRna = function(dna){\\n  var transcribedRna = [];\\n  for(var i = 0; i\\u003cdna.length; i++){\\n    transcribedRna.push(rnaTranscriptionTable[dna[i]]);\\n  }\\n  return transcribedRna.join('');\\n}\\n\\nmodule.exports = toRna;"}
36	11	3e879e6ed538fb6d7b7bb5b1	\N	javascript	rna-transcription	\N	\N	0	4	31	2015-12-27 19:56:53	2015-12-27 19:56:53	{"rna_transcription.js":"var rnaTranscriptionTable = {\\n  C: 'G',\\n  G: 'C',\\n  A: 'U',\\n  T: 'A'\\n}\\nvar toRna = function(dna){\\n  return dna.split('').map(function(e){\\n    return rnaTranscriptionTable[e];\\n  }).join('');\\n}\\n\\nmodule.exports = toRna;"}
37	15	357ac695c0650f5e440cd252	done	ruby	series	\N	\N	0	2	34	2015-11-21 02:37:11	2015-11-21 02:37:11	{"series.rb":"class Series\\n  attr_reader :digits\\n\\n  def initialize(string)\\n    @digits = string.chars.map(\\u0026:to_i)\\n  end\\n\\n  def slices(slice_length)\\n    if slice_length \\u003e @digits.length\\n      raise ArgumentError, \\"Slice length (#{slice_length}) can't exceed number of digits (#{@digits.length}).\\"\\n    end\\n\\n    digits.each_cons(slice_length).to_a\\n  end\\nend"}
38	15	3fc5aa14cbc418b4d5fe7050	superseded	ruby	series	\N	\N	0	1	34	2015-12-06 12:50:14	2015-12-06 12:50:14	{"series.rb":"class Series\\n  def initialize(string)\\n    @string = string\\n  end\\n\\n  def digits\\n    string.chars.map(\\u0026:to_i)\\n  end\\n\\n  def slices(slice_length)\\n    if slice_length \\u003e string.length\\n      raise ArgumentError, \\"Slice length (#{slice_length}) can't exceed string length (#{string.length}).\\"\\n    end\\n\\n    digits.each_cons(slice_length).to_a\\n  end\\n\\n  private\\n\\n  attr_reader :string\\nend"}
39	28	c77cbe3f5b7b4488c49d7166	pending	ruby	hello-world	\N	\N	0	1	39	2015-08-27 05:56:34	2015-08-27 05:56:34	{"hello_world.rb":"class HelloWorld\\n  class \\u003c\\u003c self\\n    def hello(name='World')\\n      \\"Hello, #{name}!\\"\\n    end\\n  end\\nend"}
40	28	7a9147eef0b46864163e5420	done	python	word-count	\N	\N	0	2	41	2015-09-18 08:24:04	2015-09-18 08:24:04	{"/python/word-count/wordcount.py":"from collections import defaultdict\\n\\ndef word_count(phrase):\\n\\tcount = defaultdict(int)\\n\\tfor word in phrase.split():\\n\\t\\tcount[word] += 1\\n\\treturn count"}
41	28	9616c12b71204b88855cfce1	superseded	python	word-count	\N	\N	0	1	41	2015-11-21 09:18:32	2015-11-21 09:18:32	{"/python/word-count/wordcount.py":"def word_count(phrase):\\n\\tcount = {}\\n\\tfor word in phrase.split():\\n\\t\\tif word in count:\\n\\t\\t\\tcount[word] += 1\\n\\t\\telse:\\n\\t\\t\\tcount[word] = 1\\n\\treturn count"}
42	28	2aa54956b68bc0d4a5f694ee	hibernating	php	rna-transcription	\N	\N	0	1	42	2015-08-31 05:58:57	2015-08-31 05:58:57	{"/php/rna-transcription/rna-transcription.php":"\\u003c?php \\n    function toRna($dna)\\n    {\\n        $translate = array(\\"G\\" =\\u003e \\"C\\", \\"C\\" =\\u003e \\"G\\", \\"T\\" =\\u003e \\"A\\", \\"A\\" =\\u003e \\"U\\");\\n        $rna = \\"\\";\\n        $chars = str_split($dna);\\n        foreach($chars as $char){\\n            $rna = $rna.$translate[$char];\\n        }\\n        return $rna;\\n    }\\n\\n?\\u003e"}
95	36	dd12a2b330598822b4b7df30	pending	python	leap	\N	\N	0	1	97	2015-09-06 23:59:02	2015-09-06 23:59:02	{"year.py":"#!/usr/bin/python\\n\\nimport sys\\n\\ndef is_leap_year(yr):\\n    if yr % 4 == 0:\\n        if yr % 100 == 0:\\n            if yr % 400 == 0:\\n                return True\\n            else:\\n                return False\\n        else:\\n            return True\\n    else:\\n        return False\\n\\n#print is_leap_year(1996)\\n#print is_leap_year(1900)\\n#print is_leap_year(1997)"}
43	31	3ce5dd40a1927818fe8642ed	done	python	meetup	\N	\N	0	1	44	2016-01-01 22:55:14	2016-01-01 22:55:14	{"/python/meetup/meetup.py":"import datetime as dt\\n\\n\\nclass MeetupDayException(Exception):\\n\\n    def __init__(self, value):\\n        self.value = value\\n\\n    def __str__(self):\\n        return repr(self.value)\\n\\n\\ndef meetup_day(year, month, day, week):\\n    days = {'Monday': 0, 'Tuesday': 1, 'Wednesday': 2, 'Thursday': 3,\\n            'Friday': 4, 'Saturday': 5, 'Sunday': 6}\\n\\n#   adjust weekday\\n    meeting = dt.date(year, month, 1)\\n    if meeting.weekday() != days[day]:\\n        meeting = meeting + dt.timedelta((days[day] - meeting.weekday()) % 7)\\n\\n#  adjust week\\n    if week == \\"last\\":\\n        meeting += dt.timedelta(weeks=4)\\n        if meeting.month != month:\\n            meeting -= dt.timedelta(weeks=1)\\n    elif week == \\"teenth\\":\\n        if meeting.day \\u003c 6:\\n            meeting += dt.timedelta(weeks=2)\\n        else:\\n            meeting += dt.timedelta(weeks=1)\\n    elif week == \\"1st\\":\\n        #  do nothing\\n        pass\\n    elif week == \\"2nd\\":\\n        meeting += dt.timedelta(weeks=1)\\n    elif week == \\"3rd\\":\\n        meeting += dt.timedelta(weeks=2)\\n    elif week == \\"4th\\":\\n        meeting += dt.timedelta(weeks=3)\\n    elif week == \\"5th\\":\\n        meeting += dt.timedelta(weeks=4)\\n    else:\\n        raise ValueError(\\"Illegal argument for week\\")\\n\\n    if meeting.month != month:\\n        raise MeetupDayException(\\"Invalid week\\")\\n\\n    return meeting"}
44	31	3798db4c65b54ff0d5bd1fd7	superseded	scala	accumulate	\N	\N	0	1	46	2016-01-05 05:26:00	2016-01-05 05:26:00	{"Accumulate.scala":"import scala.collection.mutable.ListBuffer\\n\\nclass Accumulate {\\n\\n\\tdef accumulate[FROM, TO](function: (FROM) =\\u003e TO, list: List[FROM]): List[TO] = {\\n\\t\\tval buffer = ListBuffer.empty[TO]\\n\\t\\tlist.foreach { from =\\u003e\\n\\t\\t\\tval to = function(from)\\n\\t\\t\\tbuffer += to\\n\\t\\t}\\n\\t\\tbuffer.toList\\n\\t}\\n\\n}"}
45	31	0f42994254ee60d78fcff143	done	scala	accumulate	\N	\N	0	2	46	2016-01-06 21:28:22	2016-01-06 21:28:22	{"Accumulate.scala":"class Accumulate {\\n\\n\\tdef accumulate[FROM, TO](function: FROM =\\u003e TO, list: List[FROM]): List[TO] =\\n\\t\\tlist.foldLeft(List.empty[TO]) { case (acc, from) =\\u003e acc :+ function(from)}\\n\\n}"}
46	31	03f91b941b0ca03b6fa13575	hibernating	csharp	sieve	\N	\N	0	1	47	2016-01-07 18:58:33	2016-01-07 18:58:33	{"Sieve.cs":"﻿using System.Collections.Generic;\\r\\nusing System.Collections;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class Sieve\\r\\n{\\r\\n    public readonly List\\u003cint\\u003e Primes;\\r\\n\\r\\n    public Sieve(int limit)\\r\\n    {\\r\\n        Primes = new List\\u003cint\\u003e();\\r\\n        if (limit \\u003e 1)\\r\\n        {\\r\\n            var isPrime = Enumerable.Repeat(true, limit - 1).ToList\\u003cbool\\u003e();\\r\\n            for (int i = 0; i \\u003c limit - 1; i++)\\r\\n            {\\r\\n                if (isPrime[i])\\r\\n                {\\r\\n                    for (int j = 2 * (i + 1); j \\u003c limit - 1; j += (i + 2))\\r\\n                        isPrime[j] = false;\\r\\n                }\\r\\n            }\\r\\n            Primes = isPrime\\r\\n                .Select((b, i) =\\u003e new { Val = i + 2, IsPrime = b })\\r\\n                .Where(elt =\\u003e elt.IsPrime)\\r\\n                .Select(elt =\\u003e elt.Val)\\r\\n                .ToList();\\r\\n        }\\r\\n    }\\r\\n}\\r"}
47	31	f4d3dcc4e1a29a834f3dc6de	hibernating	coffeescript	bob	\N	\N	0	1	49	2016-01-07 17:00:15	2016-01-07 17:00:15	{"bob.coffee":"class Bob\\n  hey: (words) -\\u003e\\n    if /^\\\\s*$/.test words\\n      'Fine. Be that way!'\\n    else if /^[A-Z 0-9,%@#$!(*^]+[!?]?$/.test words\\n      'Woah, chill out!'\\n    else if /\\\\?$/.test words\\n      'Sure.'\\n    else\\n      'Whatever.'\\n\\nmodule.exports = Bob"}
48	33	70b33fda617d21e9d1d71ca9	pending	ruby	phone-number	\N	\N	0	1	50	2015-11-20 03:34:47	2015-11-20 03:34:47	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n  def initialize(num_string)\\n    @num_string = num_string\\n  end\\n\\n  def number\\n    return '0000000000' if invalid?\\n    return digits_string[1..-1] if valid_11_digit?\\n    digits_string\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  def area_code\\n    number[0..2]\\n  end\\n\\n  def prefix\\n    number[3..5]\\n  end\\n\\n  def line_number\\n    number[6..9]\\n  end\\n\\n  private\\n\\n    def digits_string\\n      @num_string.gsub(/\\\\D/, '')\\n    end\\n\\n    def invalid?\\n      contains_letters? || too_short? || too_long?\\n    end\\n\\n    def contains_letters?\\n      @num_string =~ /[a-zA-Z]/\\n    end\\n\\n    def too_short?\\n      digits_string.length \\u003c 10\\n    end\\n\\n    def too_long?\\n      digits_string.length \\u003e 10 unless valid_11_digit?\\n    end\\n\\n    def valid_11_digit?\\n      digits_string.length == 11 \\u0026\\u0026 digits_string.start_with?('1')\\n    end\\nend"}
49	33	6beef9854be98897bbf0b2c0	done	python	difference-of-squares	\N	\N	0	1	51	2015-10-30 03:03:37	2015-10-30 03:03:37	{"difference_of_squares.py":"# Difference of Squares\\n\\n# this sums all of the squares between 0 - n\\ndef sum_of_squares(n):\\n\\tsum_of_squares = 0\\n\\n\\tfor num in range(0, n+1):\\n\\t\\tsum_of_squares += (num ** 2)\\n\\n\\treturn sum_of_squares\\n\\n# this squares the sum of 0 - n\\ndef square_of_sum(n):\\n\\tsquare_of_sum = 0\\n\\n\\tfor num in range(0, n+1):\\n\\t\\tsquare_of_sum += num\\n\\n\\tsquare_of_sum **= 2\\n\\n\\treturn square_of_sum\\n\\n# calculates the difference between the\\n# square of the sum and the sum of the \\n# squares\\ndef difference(n):\\n\\tdifference = square_of_sum(n) - sum_of_squares(n)\\n\\t\\n\\treturn difference"}
50	33	323fc6d48b1d99117be7013f	\N	javascript	hamming	\N	\N	0	1	52	2015-09-22 19:55:14	2015-09-22 19:55:14	{"hamming.js":"var Hamming = function() {};\\n\\nHamming.prototype.compute = function(a, b) {\\n    if (a.length != b.length) {\\n        throw(new Error('DNA strands must be of equal length.')); \\n    }\\n    var answer = 0;\\n    \\n    for(var i = 0; i \\u003c a.length; i++) {\\n        if (a[i] !== b[i]) { answer += 1; }\\n    }\\n    \\n    return answer;\\n};\\n\\nmodule.exports = Hamming;"}
51	33	ed5de45d958692d5c052e01e	done	go	house	\N	\N	0	1	53	2015-07-29 13:37:36	2015-07-29 13:37:36	{"house.go":"package house\\n\\nfunc Embed(phrase, endPhrase string) string{\\n\\treturn phrase + \\" \\" + endPhrase\\n}\\n\\nfunc Verse(startPhrase string, phrases []string, endPhrase string) string {\\n\\treturn startPhrase + \\" \\" + recurse(phrases, endPhrase)\\n}\\n\\nfunc recurse(phrases []string, endPhrase string) string {\\n\\tif len(phrases) == 0 {\\n\\t\\treturn endPhrase\\n\\t}\\n\\treturn Embed(phrases[0], recurse(phrases[1:], endPhrase))\\n}\\n\\nfunc Song() string {\\n\\tphrases := []string{\\n\\t\\t\\t\\"the horse and the hound and the horn\\\\nthat belonged to\\",\\n\\t\\t\\t\\"the farmer sowing his corn\\\\nthat kept\\",\\n\\t\\t\\t\\"the rooster that crowed in the morn\\\\nthat woke\\",\\n\\t\\t\\t\\"the priest all shaven and shorn\\\\nthat married\\",\\n\\t\\t\\t\\"the man all tattered and torn\\\\nthat kissed\\",\\n\\t\\t\\t\\"the maiden all forlorn\\\\nthat milked\\",\\n\\t\\t\\t\\"the cow with the crumpled horn\\\\nthat tossed\\",\\n\\t\\t\\t\\"the dog\\\\nthat worried\\",\\n\\t\\t\\t\\"the cat\\\\nthat killed\\",\\n\\t\\t\\t\\"the rat\\\\nthat ate\\",\\n\\t\\t\\t\\"the malt\\\\nthat lay in\\",\\n\\t\\t}\\n\\tstartPhrase := \\"This is\\"\\n\\tendPhrase := \\"the house that Jack built.\\"\\n\\n\\ts := startPhrase + \\" \\" + endPhrase\\n\\tfor i := len(phrases) -1 ; i \\u003e= 0; i-- {\\n\\t\\ts += \\"\\\\n\\\\n\\" + Verse(startPhrase, phrases[i:], endPhrase)\\n\\t}\\n\\treturn s\\n}"}
96	30	1a52e91ec99f344c904dbc36	pending	ruby	hello-world	\N	\N	0	1	100	2015-10-03 10:43:50	2015-10-03 10:43:50	{"hello_world.rb":"class HelloWorld\\n  class \\u003c\\u003c self\\n    def hello(name='World')\\n      \\"Hello, #{name}!\\"\\n    end\\n  end\\nend"}
52	38	76490126a20374132069519e	pending	ruby	grade-school	\N	\N	0	1	55	2015-08-18 15:43:22	2015-08-18 15:43:22	{"/ruby/grade-school/grade_school.rb":"class School\\n  class Pupil\\n    def initialize(name, grade)\\n      @name = name.to_s\\n      @grade = grade.to_i\\n      @name.freeze\\n      @grade.freeze\\n    end\\n\\n    def \\u003c=\\u003e(other_pupil)\\n      grade == other_pupil.grade ? name \\u003c=\\u003e other_pupil.name : grade \\u003c=\\u003e other_pupil.grade\\n    end\\n\\n    def to_hash\\n      {@grade =\\u003e [@name]}\\n    end\\n\\n    protected\\n    attr_reader :name, :grade\\n  end\\n\\n  require 'set'\\n\\n  def initialize\\n    @pupils = SortedSet.new\\n  end\\n\\n  def add(name, grade)\\n    @pupils \\u003c\\u003c Pupil.new(name, grade)\\n  end\\n\\n  def grade(grade)\\n    to_hash.fetch(grade, [])\\n  end\\n\\n  def to_hash\\n    pupils.reduce(Hash.new) { |hash, pupil|\\n      hash.merge(pupil.to_hash) { |k, o, n| o + n }\\n    }\\n  end\\n\\n  private\\n  attr_reader :pupils\\nend"}
53	40	3e6834d3071d4def66f22383	superseded	python	bob	\N	\N	0	1	58	2015-08-07 10:03:03	2015-08-07 10:03:03	{"bob.py":"\\r\\ndef hey(statement):\\r\\n    \\r\\n  if (statement.endswith('?') and not statement.isupper()):\\r\\n    return 'Sure.'\\r\\n\\r\\n  elif (statement.isupper()):\\r\\n\\treturn 'Whoa, chill out!'\\t\\r\\n\\r\\n  elif (statement.strip() == ''):\\r\\n\\treturn 'Fine. Be that way!'\\r\\n\\r\\n  else:\\r\\n    return 'Whatever.'"}
54	40	4c178d05281f52f8c5d7faa5	done	python	bob	\N	\N	0	2	58	2015-12-07 00:56:58	2015-12-07 00:56:58	{"bob.py":"\\r\\ndef hey(statement):\\r\\n   \\r\\n  if (statement.isupper()):\\r\\n\\treturn 'Whoa, chill out!'\\r\\n\\r\\n  elif (statement.endswith('?')):\\r\\n    return 'Sure.'\\r\\n\\r\\n  elif (statement.strip() == ''):\\r\\n\\treturn 'Fine. Be that way!'\\r\\n\\r\\n  else:\\r\\n    return 'Whatever.'"}
55	44	a71fbdf27119c0487d42d10d	pending	ruby	phone-number	\N	\N	0	1	59	2015-09-09 23:12:33	2015-09-09 23:12:33	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n  def initialize(num_string)\\n    @num_string = num_string\\n  end\\n\\n  def number\\n    return '0000000000' if invalid?\\n    return digits_string[1..-1] if valid_11_digit?\\n    digits_string\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  def area_code\\n    number[0..2]\\n  end\\n\\n  def prefix\\n    number[3..5]\\n  end\\n\\n  def line_number\\n    number[6..9]\\n  end\\n\\n  private\\n\\n    def digits_string\\n      @num_string.gsub(/\\\\D/, '')\\n    end\\n\\n    def invalid?\\n      contains_letters? || too_short? || too_long?\\n    end\\n\\n    def contains_letters?\\n      @num_string =~ /[a-zA-Z]/\\n    end\\n\\n    def too_short?\\n      digits_string.length \\u003c 10\\n    end\\n\\n    def too_long?\\n      digits_string.length \\u003e 10 unless valid_11_digit?\\n    end\\n\\n    def valid_11_digit?\\n      digits_string.length == 11 \\u0026\\u0026 digits_string.start_with?('1')\\n    end\\nend"}
56	46	423ba0414dbb4db88026f8de	hibernating	csharp	sieve	\N	\N	0	1	60	2015-08-21 02:33:09	2015-08-21 02:33:09	{"Sieve.cs":"﻿using System.Collections.Generic;\\r\\nusing System.Collections;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class Sieve\\r\\n{\\r\\n    public readonly List\\u003cint\\u003e Primes;\\r\\n\\r\\n    public Sieve(int limit)\\r\\n    {\\r\\n        Primes = new List\\u003cint\\u003e();\\r\\n        if (limit \\u003e 1)\\r\\n        {\\r\\n            var isPrime = Enumerable.Repeat(true, limit - 1).ToList\\u003cbool\\u003e();\\r\\n            for (int i = 0; i \\u003c limit - 1; i++)\\r\\n            {\\r\\n                if (isPrime[i])\\r\\n                {\\r\\n                    for (int j = 2 * (i + 1); j \\u003c limit - 1; j += (i + 2))\\r\\n                        isPrime[j] = false;\\r\\n                }\\r\\n            }\\r\\n            Primes = isPrime\\r\\n                .Select((b, i) =\\u003e new { Val = i + 2, IsPrime = b })\\r\\n                .Where(elt =\\u003e elt.IsPrime)\\r\\n                .Select(elt =\\u003e elt.Val)\\r\\n                .ToList();\\r\\n        }\\r\\n    }\\r\\n}\\r"}
57	48	9f87bb9dc00bf95668a408d5	done	python	atbash-cipher	\N	\N	0	3	61	2015-09-30 17:12:06	2015-09-30 17:12:06	{"atbash_cipher.py":"from string import ascii_letters, ascii_lowercase, maketrans\\nimport re\\n\\nATBASH = maketrans(ascii_letters, 2*(ascii_lowercase[::-1]))\\n\\n\\ndef decode(code):\\n    return code.translate(ATBASH, ' ')\\n\\n\\ndef encode(string):\\n    s = re.sub(r'[\\\\W]+', '', string).translate(ATBASH)\\n\\n    return ' '.join([s[i:i + 5] for i in range(0, len(s), 5)])"}
58	48	6c1eac2940701190e7f4f5d9	superseded	python	atbash-cipher	\N	\N	0	1	61	2015-10-10 04:44:52	2015-10-10 04:44:52	{"atbash_cipher.py":"from string import maketrans\\nimport re\\n\\ntrans_tbl = maketrans(\\"abcdefghijklmnopqrstuvwxyz\\",\\n                      \\"zyxwvutsrqponmlkjihgfedcba\\")\\n\\n\\ndef decode(code):\\n    return code.replace(' ', '').translate(trans_tbl)\\n\\n\\ndef encode(string):\\n    return _group(re.sub(r'[\\\\W]+', '', string.lower()).translate(trans_tbl))\\n\\n\\ndef _group(string):\\n    res = string[0]\\n\\n    for i in xrange(1, len(string)):\\n        if i % 5 == 0:\\n            res += ' ' + string[i]\\n        else:\\n            res += string[i]\\n\\n    return res"}
59	48	621883e5cb3dd00efdc8f8f3	superseded	python	atbash-cipher	\N	\N	0	2	61	2015-11-13 07:37:37	2015-11-13 07:37:37	{"atbash_cipher.py":"from string import maketrans\\nimport re\\n\\ntrans_tbl = maketrans(\\"abcdefghijklmnopqrstuvwxyz\\",\\n                      \\"zyxwvutsrqponmlkjihgfedcba\\")\\n\\n\\ndef decode(code):\\n    return code.replace(' ', '').translate(trans_tbl)\\n\\n\\ndef encode(string):\\n    return __group(\\n        re.sub(r'[\\\\W]+', '', string).lower().translate(trans_tbl)\\n    )\\n\\n\\ndef __group(string):\\n    if len(string) \\u003c= 5:\\n        return string\\n\\n    return string[:5] + \\" \\" + __group(string[5:])"}
60	48	f274835f3d21867cae4f0437	\N	ruby	robot-name	\N	\N	0	1	62	2015-10-24 12:53:34	2015-10-24 12:53:34	{"robot_name.rb":"class Robot\\n\\n  LETTERS = [*('A'..'Z')]\\n  NUMBERS = [*(0..9)]\\n\\n  @@robots = []\\n\\n  attr_reader :name\\n\\n  def initialize\\n    @name = generate_name\\n    register_name\\n  end\\n\\n  def reset\\n    @name = generate_name\\n    register_name\\n  end\\n\\n  private\\n\\n  def generate_name\\n    LETTERS.sample(2).join + NUMBERS.sample(3).join\\n  end\\n\\n  def register_name\\n    raise if @@robots.include?(@name)\\n    @@robots \\u003c\\u003c @name\\n  end\\nend"}
61	48	d94faacbe7dde0d7dda45665	pending	javascript	word-count	\N	\N	0	1	64	2015-09-15 17:07:36	2015-09-15 17:07:36	{"\\\\javascript\\\\word-count\\\\word-count.js":"//var phrase = function(){\\n\\n  //this.word_count = function(words)\\n  //var result = {};\\n  //total_words = words.split(\\" \\");\\n\\n  //for(var i = 0; i \\u003c= total_words.length; i++)\\n    //{\\n      //if(result.hasOwnProperty(total_words[i]))\\n        //{\\n          //result(total_words[i]) += 1;\\n        //}\\n        //else\\n          //{\\n            //result(total_words[i]) = 1;\\n          //}\\n        //}\\n\\n        //return result;\\n\\nvar count = function(phrase){\\n\\n  var wordCount = {};\\n  phrase.split(/\\\\s/).forEach(function(word){\\n    if(!wordCount[word]){\\n      wordCount[word] = 1;\\n    }\\n    else{\\n      wordCount[word]++;\\n    }\\n  });\\n\\n  return wordCount;\\n};\\n\\nmodule.exports = count;"}
71	7	44f3d72658984fe568ad3d2a	superseded	ruby	anagram	\N	\N	0	2	71	2015-09-10 20:42:37	2015-09-10 20:42:37	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @source = word.to_s\\n  end\\n\\n  def match(array)\\n    array.select do |word|\\n      is_anagram? word\\n    end\\n  end\\n\\nprivate\\n  attr_reader :source\\n\\n  def is_anagram?(word)\\n    normalized_source = source.downcase\\n    normalized_word   = word.downcase\\n    normalized_source.chars.sort == normalized_word.chars.sort \\u0026\\u0026\\n      normalized_source != normalized_word\\n  end\\nend"}
62	48	503a7336065e2a469503b44c	done	haskell	space-age	\N	\N	0	1	65	2015-09-12 05:37:36	2015-09-12 05:37:36	{"space-age.hs":"module SpaceAge (Planet(..), ageOn) where\\n\\ndata Planet = Mercury\\n            | Venus\\n            | Earth\\n            | Mars\\n            | Jupiter\\n            | Saturn\\n            | Uranus\\n            | Neptune\\n\\ntype Seconds = Float\\ntype Years = Float\\n\\nageOn :: Planet -\\u003e Seconds -\\u003e Years\\nageOn planet seconds = seconds / secondsPerYear planet\\n\\nsecondsPerYear :: Planet -\\u003e Seconds\\nsecondsPerYear planet = earthYear * case planet of\\n  Mercury -\\u003e 0.2408467\\n  Venus   -\\u003e 0.61519726\\n  Earth   -\\u003e 1\\n  Mars    -\\u003e 1.8808158\\n  Jupiter -\\u003e 11.862615\\n  Saturn  -\\u003e 29.447498\\n  Uranus  -\\u003e 84.016846\\n  Neptune -\\u003e 164.79132\\n  where earthYear = 365.25 * 24 * 60 * 60"}
63	26	33aac78d9b4ef9751477a4a4	pending	javascript	space-age	\N	\N	0	1	67	2015-12-31 11:56:43	2015-12-31 11:56:43	{"space-age.js":"var SpaceAge = function(num){\\n\\tthis.seconds = num;\\n}\\n\\nSpaceAge.prototype.onEarth = function(){\\n\\tvar num = this.seconds;\\n\\treturn Math.round((num/31557600)*100)/100;\\n}\\n\\nSpaceAge.prototype.onMercury = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/0.2408467)*100)/100;\\n}\\n\\nSpaceAge.prototype.onVenus = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/0.61519726)*100)/100;\\n}\\n\\nSpaceAge.prototype.onMars = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/1.8808158)*100)/100;\\n}\\n\\nSpaceAge.prototype.onJupiter = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/11.862615)*100)/100;\\n}\\n\\nSpaceAge.prototype.onSaturn = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/29.447498)*100)/100;\\n}\\n\\nSpaceAge.prototype.onUranus = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/84.016846)*100)/100;\\n}\\n\\nSpaceAge.prototype.onNeptune = function(){\\n\\tvar num = this.onEarth();\\n\\treturn Math.round((num/164.79132)*100)/100;\\n}"}
64	26	aa1d2dd95ac1ea9255a41cc3	pending	csharp	difference-of-squares	\N	\N	0	4	69	2015-11-28 23:39:58	2015-11-28 23:39:58	{"\\\\csharp\\\\difference-of-squares\\\\difference-of-squares\\\\DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Diagnostics;\\r\\nusing System.Diagnostics.CodeAnalysis;\\r\\nusing System.Linq;\\r\\nusing NUnit.Framework;\\r\\n\\r\\n/// \\u003csummary\\u003e\\r\\n/// The squares.\\r\\n/// \\u003c/summary\\u003e\\r\\npublic class Squares\\r\\n{\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The _range.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    private readonly IEnumerable\\u003clong\\u003e _range;\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// Initializes a new instance of the \\u003csee cref=\\"Squares\\"/\\u003e class.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003cparam name=\\"size\\"\\u003e\\r\\n    /// The size.\\r\\n    /// \\u003c/param\\u003e\\r\\n    /// \\u003cexception cref=\\"ArgumentException\\"\\u003e\\r\\n    /// \\u003c/exception\\u003e\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0) throw new ArgumentException();\\r\\n\\r\\n        //_range = Iota(1L, size);\\r\\n        _range = Enumerable.Range(1, size).Select(i=\\u003e(long)i);\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The square of sums.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    public long SquareOfSums()\\r\\n    {\\r\\n        // return (long)Math.Pow(_range.Sum(), 2);\\r\\n        // avoids floating point arithmetic.\\r\\n        var sum= _range.Sum();\\r\\n        return sum * sum;\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The sum of squares.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    public long SumOfSquares()\\r\\n    {\\r\\n        return _range.Sum(i =\\u003e i*i);\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The difference of squares.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003cparam name=\\"version\\"\\u003e\\r\\n    /// The version.\\r\\n    /// \\u003c/param\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    public long DifferenceOfSquares(int version = 0)\\r\\n    {\\r\\n        switch (version)\\r\\n        {\\r\\n            case 0:\\r\\n                return DifferenceOfSquaresImplTwice();\\r\\n            case 1:\\r\\n                return DifferenceOfSquaresImplOnce();\\r\\n            case 2:\\r\\n                return DifferenceOfSquaresImplLinq();\\r\\n            case 3:\\r\\n                return DifferenceOfSquaresImplFast();\\r\\n\\r\\n        }\\r\\n        return 0L;\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The difference of squares impl fast.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    [SuppressMessage(\\"StyleCop.CSharp.DocumentationRules\\", \\"SA1650:ElementDocumentationMustBeSpelledCorrectly\\", Justification = \\"Reviewed. Suppression is OK here.\\")]\\r\\n    private long DifferenceOfSquaresImplFast()\\r\\n    {\\r\\n        if (!_range.Any()) return 0;\\r\\n        var n = _range.Last();\\r\\n        var squareOfSum = ((n * n) * (n + 1L) * (n + 1L))/4L;\\r\\n        var sumOfSquare = (2L*(n * n * n) + 3L*(n * n) + n) / 6L;\\r\\n        return squareOfSum - sumOfSquare;\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The difference of squares impl twice.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    private long DifferenceOfSquaresImplTwice()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();    \\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplOnce()\\r\\n    {\\r\\n        var sumOfSquares = 0L;\\r\\n        var sum = 0L;\\r\\n        foreach (var i in _range)\\r\\n        {\\r\\n            sumOfSquares += i * i;\\r\\n            sum += i;\\r\\n        }\\r\\n        return (sum*sum) - sumOfSquares;\\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplLinq()\\r\\n    {\\r\\n        return _range.Aggregate(new[] {0L, 0L}, \\r\\n            (a, i) =\\u003e\\r\\n            {\\r\\n                a[0] += i*i;\\r\\n                a[1] += i;\\r\\n                return a;\\r\\n            }\\r\\n            ,a=\\u003ea[1]*a[1]-a[0]);\\r\\n    }\\r\\n}\\r\\n\\r\\ninternal class Test\\r\\n{\\r\\n    private static object[] _version = {0, 1,2,3};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_to_100(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(100).DifferenceOfSquares(v), Is.EqualTo(25164150));\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_0(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(0).DifferenceOfSquares(v), Is.EqualTo(0));\\r\\n    }\\r\\n\\r\\n\\r\\n    private static object[] _sizes = {100, 1000, 10000, 20000, 30000, 40000};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_twice_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 0);\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_fast_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 3);\\r\\n    }\\r\\n\\r\\n    private void Versions_to_size_Impl(int size, int version)\\r\\n    {\\r\\n        var squares = new Squares(size);\\r\\n        var squareOfSums = squares.SquareOfSums();\\r\\n        var sumOfSquares = squares.SumOfSquares();\\r\\n        var expected = squareOfSums - sumOfSquares;\\r\\n        Assert.That(squares.DifferenceOfSquares(version), Is.EqualTo(expected));\\r\\n    }\\r\\n\\r\\n    [Test]\\r\\n    public void Performance_of_versions()\\r\\n    {\\r\\n        var squares = new Squares(40000);\\r\\n        var watch = new Stopwatch();\\r\\n        foreach (int v in _version)\\r\\n        {\\r\\n            var average = new List\\u003clong\\u003e();\\r\\n            foreach(var i in Enumerable.Range(1,100))\\r\\n            {\\r\\n                watch.Reset();\\r\\n                watch.Start();\\r\\n                var actual = squares.DifferenceOfSquares(v);\\r\\n                watch.Stop();\\r\\n                average.Add(watch.ElapsedTicks);\\r\\n            }\\r\\n            Console.WriteLine(\\"version= \\" + v + \\", time= \\" + average.Average());\\r\\n        }\\r\\n    }\\r\\n}"}
65	26	ad8afa6d0bd13a09598c104a	superseded	csharp	difference-of-squares	\N	\N	0	3	69	2015-12-04 16:22:12	2015-12-04 16:22:12	{"DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Diagnostics;\\r\\nusing System.Linq;\\r\\nusing NUnit.Framework;\\r\\n\\r\\npublic class Squares\\r\\n{\\r\\n    private readonly IEnumerable\\u003clong\\u003e _range;\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0)\\r\\n            throw new ArgumentException();\\r\\n\\r\\n        _range = Iota(1L, size);\\r\\n    }\\r\\n\\r\\n    public long SquareOfSums()\\r\\n    {\\r\\n        return (long)Math.Pow(_range.Sum(), 2);\\r\\n    }\\r\\n\\r\\n    public long SumOfSquares()\\r\\n    {\\r\\n        return _range.Sum(i =\\u003e i*i);\\r\\n    }\\r\\n\\r\\n    public long DifferenceOfSquares(int version = 0)\\r\\n    {\\r\\n        switch (version)\\r\\n        {\\r\\n            case 0:\\r\\n                return DifferenceOfSquaresImplTwice();\\r\\n            case 1:\\r\\n                return DifferenceOfSquaresImplOnce();\\r\\n            case 2:\\r\\n                return DifferenceOfSquaresImplLinq();\\r\\n        }\\r\\n        return 0L;\\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplTwice()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();    \\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplOnce()\\r\\n    {\\r\\n        var sumOfSquares = 0L;\\r\\n        var sum = 0L;\\r\\n        foreach (var i in _range)\\r\\n        {\\r\\n            sumOfSquares += i * i;\\r\\n            sum += i;\\r\\n        }\\r\\n        return (sum*sum) - sumOfSquares;\\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplLinq()\\r\\n    {\\r\\n        var pair = _range.Aggregate(new[] {0L, 0L}, (a, i) =\\u003e\\r\\n        {\\r\\n            a[0] += i*i;\\r\\n            a[1] += i;\\r\\n            return a;\\r\\n        });\\r\\n        return pair[1]*pair[1] - pair[0];\\r\\n    }\\r\\n\\r\\n    private static IEnumerable\\u003clong\\u003e Iota(long s, long e)\\r\\n    {\\r\\n        while (s\\u003c=e) yield return s++;\\r\\n    }\\r\\n}\\r\\n\\r\\ninternal class Test\\r\\n{\\r\\n    private static object[] _version = {0, 1,2};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_to_100(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(100).DifferenceOfSquares(v), Is.EqualTo(25164150));\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_0(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(0).DifferenceOfSquares(v), Is.EqualTo(0));\\r\\n    }\\r\\n\\r\\n\\r\\n    private static object[] _sizes = {100, 1000, 10000, 20000, 30000, 40000};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_twice_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 0);\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_once_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 1);\\r\\n    }\\r\\n\\r\\n    private void Versions_to_size_Impl(int size, int version)\\r\\n    {\\r\\n        var squares = new Squares(size);\\r\\n        var squareOfSums = squares.SquareOfSums();\\r\\n        var sumOfSquares = squares.SumOfSquares();\\r\\n        var expected = squareOfSums - sumOfSquares;\\r\\n        Assert.That(squares.DifferenceOfSquares(version), Is.EqualTo(expected));\\r\\n    }\\r\\n\\r\\n    [Test]\\r\\n    public void Performance_of_versions()\\r\\n    {\\r\\n        var squares = new Squares(40000);\\r\\n        var watch = new Stopwatch();\\r\\n        foreach (int v in _version)\\r\\n        {\\r\\n            watch.Reset();\\r\\n            watch.Start();\\r\\n            var actual = squares.DifferenceOfSquares(v);\\r\\n            watch.Stop();\\r\\n            Console.WriteLine(\\"version= \\" + v + \\", time= \\" + watch.Elapsed);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r"}
66	26	d5bfc54c03e35f7be559d64b	superseded	csharp	difference-of-squares	\N	\N	0	1	69	2015-12-23 09:31:55	2015-12-23 09:31:55	{"DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class Squares\\r\\n{\\r\\n    private readonly List\\u003cint\\u003e _range;\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0)\\r\\n            throw new ArgumentException();\\r\\n\\r\\n        _range = Enumerable.Range(1, size).ToList();\\r\\n    }\\r\\n\\r\\n    public int SquareOfSums()\\r\\n    {\\r\\n        return Enumerable.Repeat(_range.Sum(), 2)\\r\\n                         .Aggregate((i, prod) =\\u003e i*prod);\\r\\n    }\\r\\n\\r\\n    public int SumOfSquares()\\r\\n    {\\r\\n        return _range.Select(i =\\u003e i*i)\\r\\n                     .Sum();\\r\\n    }\\r\\n\\r\\n    public int DifferenceOfSquares()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();\\r\\n    }\\r\\n}\\r\\n\\r"}
67	26	89f2309285bb654df1ba40d0	superseded	csharp	difference-of-squares	\N	\N	0	2	69	2016-01-03 10:53:23	2016-01-03 10:53:23	{"DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class Squares\\r\\n{\\r\\n    private readonly List\\u003cint\\u003e _range;\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0)\\r\\n            throw new ArgumentException();\\r\\n\\r\\n        _range = Enumerable.Range(1, size).ToList();\\r\\n    }\\r\\n\\r\\n    public int SquareOfSums()\\r\\n    {\\r\\n        return (int)Math.Pow(_range.Sum(), 2);\\r\\n    }\\r\\n\\r\\n    public int SumOfSquares()\\r\\n    {\\r\\n        return _range.Select(i =\\u003e i*i)\\r\\n                     .Sum();\\r\\n    }\\r\\n\\r\\n    public int DifferenceOfSquares()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();\\r\\n    }\\r\\n}\\r\\n\\r"}
68	7	6632b64d77f5fc48206ea297	done	go	house	\N	\N	0	1	70	2015-07-25 14:35:00	2015-07-25 14:35:00	{"house.go":"package house\\n\\nfunc Embed(phrase, endPhrase string) string{\\n\\treturn phrase + \\" \\" + endPhrase\\n}\\n\\nfunc Verse(startPhrase string, phrases []string, endPhrase string) string {\\n\\treturn startPhrase + \\" \\" + recurse(phrases, endPhrase)\\n}\\n\\nfunc recurse(phrases []string, endPhrase string) string {\\n\\tif len(phrases) == 0 {\\n\\t\\treturn endPhrase\\n\\t}\\n\\treturn Embed(phrases[0], recurse(phrases[1:], endPhrase))\\n}\\n\\nfunc Song() string {\\n\\tphrases := []string{\\n\\t\\t\\t\\"the horse and the hound and the horn\\\\nthat belonged to\\",\\n\\t\\t\\t\\"the farmer sowing his corn\\\\nthat kept\\",\\n\\t\\t\\t\\"the rooster that crowed in the morn\\\\nthat woke\\",\\n\\t\\t\\t\\"the priest all shaven and shorn\\\\nthat married\\",\\n\\t\\t\\t\\"the man all tattered and torn\\\\nthat kissed\\",\\n\\t\\t\\t\\"the maiden all forlorn\\\\nthat milked\\",\\n\\t\\t\\t\\"the cow with the crumpled horn\\\\nthat tossed\\",\\n\\t\\t\\t\\"the dog\\\\nthat worried\\",\\n\\t\\t\\t\\"the cat\\\\nthat killed\\",\\n\\t\\t\\t\\"the rat\\\\nthat ate\\",\\n\\t\\t\\t\\"the malt\\\\nthat lay in\\",\\n\\t\\t}\\n\\tstartPhrase := \\"This is\\"\\n\\tendPhrase := \\"the house that Jack built.\\"\\n\\n\\ts := startPhrase + \\" \\" + endPhrase\\n\\tfor i := len(phrases) -1 ; i \\u003e= 0; i-- {\\n\\t\\ts += \\"\\\\n\\\\n\\" + Verse(startPhrase, phrases[i:], endPhrase)\\n\\t}\\n\\treturn s\\n}"}
69	7	d3be16d6c8faab9ad5e53161	superseded	ruby	anagram	\N	\N	0	3	71	2015-07-12 21:46:21	2015-07-12 21:46:21	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @source = word.to_s\\n  end\\n\\n  def match(array)\\n    array.select { |word| is_anagram? word.downcase }\\n  end\\n\\nprivate\\n  attr_reader :source\\n\\n  def normalized_source\\n    @n_source ||= source.downcase\\n  end\\n\\n  def is_anagram?(word)\\n    normalized_source.chars.sort == word.chars.sort \\u0026\\u0026\\n      normalized_source != word\\n  end\\nend"}
70	7	3596da737c61cd10fbedf3d0	hibernating	ruby	anagram	\N	\N	0	4	71	2015-08-17 13:35:32	2015-08-17 13:35:32	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @source = word.to_s\\n  end\\n\\n  def match(array)\\n    array.select { |word| is_anagram? word.downcase }\\n  end\\n\\nprivate\\n\\n  def normalized_source\\n    @n_source ||= @source.downcase\\n  end\\n\\n  def is_anagram?(word)\\n    normalized_source.chars.sort == word.chars.sort \\u0026\\u0026\\n      normalized_source != word\\n  end\\nend"}
72	7	9218bd4613450d3c5464ed9e	superseded	ruby	anagram	\N	\N	0	1	71	2015-09-19 16:38:09	2015-09-19 16:38:09	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @source = word.to_s.downcase\\n  end\\n\\n  def match(string)\\n    get_words_from(string).each_with_object([]) do |word, result|\\n      result \\u003c\\u003c word if is_anagram?(word)\\n    end\\n  end\\n\\nprivate\\n  attr_reader :source\\n\\n  def get_words_from(string)\\n    string.to_s.scan(/\\\\w+/)\\n  end\\n\\n  def is_anagram?(word)\\n    normalized_word = word.downcase\\n    source.chars.sort == normalized_word.chars.sort \\u0026\\u0026 source != normalized_word\\n  end\\nend"}
73	7	ad51ecb776c48cb5396e1271	hibernating	csharp	bob	\N	\N	0	1	72	2015-11-05 13:07:47	2015-11-05 13:07:47	{"Bob.cs":"public class Bob {\\n  static void Main(string[] args) {\\n  }\\n\\n  public string Hey(string s) {\\n    if (s.Trim().Equals(\\"\\"))\\n      return \\"Fine. Be that way!\\";\\n    if (s.ToUpper().Equals(s)  \\u0026\\u0026 !s.ToLower().Equals(s))\\n      return \\"Whoa, chill out!\\";\\n    if (s.Trim().EndsWith(\\"?\\"))\\n      return \\"Sure.\\";\\n    return \\"Whatever.\\";\\n  }\\n}"}
74	23	c2197f9af70031d5e758c4b8	superseded	haskell	anagram	\N	\N	0	2	75	2015-11-12 03:27:50	2015-11-12 03:27:50	{"anagram.hs":"module Anagram\\n  where\\n\\nimport Data.Char\\nimport Data.Function\\nimport Data.List ( sort )\\nimport Control.Arrow\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor x = filter ((== xn) . normalize) . filter (/=x)\\n  where\\n    normalize = sort . map toLower\\n    xn = normalize x\\n    lower = map toLower"}
75	23	fe0b5e463e35ba0615c3df79	superseded	haskell	anagram	\N	\N	0	1	75	2015-12-20 04:04:56	2015-12-20 04:04:56	{"anagram.hs":"module Anagram\\n  where\\n\\nimport Data.Char\\nimport Data.Function\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor x = filter (/=x) . filter ((check `on` lower) x)\\n  where\\n    check [] [] = True\\n    check (x:xs) ys = \\n      case break (==x) ys of\\n        (t,[]) -\\u003e False\\n        (t,z:zs) -\\u003e check xs (t++zs)\\n    check _ _ = False\\n    lower = map toLower"}
76	23	5e2a55bc4ffa622dc8a06c2d	done	haskell	anagram	\N	\N	0	3	75	2015-12-21 14:53:28	2015-12-21 14:53:28	{"anagram.hs":"module Anagram\\n  ( anagramsFor ) where\\n\\nimport Data.Char\\nimport Data.List ( sort )\\n\\nanagramsFor :: String -\\u003e [String] -\\u003e [String]\\nanagramsFor x = filter ((== xn) . normalize) . filter (/=x)\\n  where\\n    normalize = sort . map toLower\\n    xn = normalize x"}
77	23	2d34bd21b1889132e487900c	\N	python	bob	\N	\N	0	1	76	2015-11-20 12:32:42	2015-11-20 12:32:42	{"/python/bob/bob.py":"def hey(something):\\n    if something.isupper():\\n\\treturn 'Whoa, chill out!'\\n    elif something.endswith('?'):\\n        return 'Sure.'\\n    elif something.isspace() or something =='':\\n    \\treturn 'Fine. Be that way!'\\n    else:\\n\\treturn 'Whatever.'"}
78	17	017df2510361f0e9d6285784	pending	python	allergies	\N	\N	0	1	78	2015-08-24 01:40:23	2015-08-24 01:40:23	{"allergies.py":"#Allergies exercism\\r\\n\\r\\nallergies_table = {\\r\\n\\t1: 'eggs',\\r\\n\\t2: 'peanuts',\\r\\n\\t4: 'shellfish', \\r\\n\\t8: 'strawberries',\\r\\n\\t16: 'tomatoes', \\r\\n\\t32: 'chocolate',\\r\\n\\t64: 'pollen',\\r\\n\\t128: 'cats',\\r\\n}\\r\\n\\r\\n\\r\\ndef get_allergies(score):\\r\\n\\tvalue_evaluated = 128\\r\\n\\tallergies_list = []\\r\\n\\twhile value_evaluated:\\r\\n\\t\\tif score \\u003e= value_evaluated:\\r\\n\\t\\t\\tallergies_list.append(allergies_table[value_evaluated])\\r\\n\\t\\t\\tscore -= value_evaluated\\r\\n\\t\\tvalue_evaluated /= 2\\t\\r\\n\\treturn allergies_list\\r\\n\\r\\n\\r\\nclass Allergies:\\r\\n\\tdef __init__(self, score):\\r\\n\\t\\tself.score = score % 256\\r\\n\\t\\tself.lst = get_allergies(self.score)\\r\\n\\r\\n\\tdef is_allergic_to(self, allergie):\\r\\n\\t\\treturn allergie in self.lst"}
79	17	a69c3669e57088d436493dbe	\N	javascript	leap	\N	\N	0	1	79	2015-09-11 13:10:57	2015-09-11 13:10:57	{"leap.js":"var isLeapYear = function(input) {\\n\\tif(input%400===0) {\\n\\t\\treturn true;\\n\\t} else if (input%4===0 \\u0026\\u0026 input%100!==0) {\\n\\t\\treturn true;\\n\\t} else {\\n\\t\\treturn false;\\n\\t}\\n};\\n\\nmodule.exports = isLeapYear;"}
80	17	341ca6d9ec71ef0bb05a851c	pending	java	bob	\N	\N	0	3	81	2015-08-02 01:39:01	2015-08-02 01:39:01	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?!.]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
81	17	44ec5933d9dd45c41b556bda	superseded	java	bob	\N	\N	0	2	81	2015-09-01 14:45:52	2015-09-01 14:45:52	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?!.]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse if (lastChar == '.' || lastChar == '!')\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
82	17	bca35d9caed50456b03b5ac5	superseded	java	bob	\N	\N	0	1	81	2015-11-17 04:55:09	2015-11-17 04:55:09	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse if (lastChar == '.' || lastChar == '!')\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
83	17	4dce34ce695f19b960a12b8c	pending	python	robot-name	\N	\N	0	1	83	2015-09-11 21:50:32	2015-09-11 21:50:32	{"robot.py":"from random import choice\\nimport string\\n\\n\\ndef random_char(charset):\\n    return choice(charset)\\n\\n\\nCHARSETS = {\\n    'D': string.digits,\\n    'U': string.ascii_uppercase,\\n}\\n\\n\\ndef random_str_from_pattern(pattern):\\n    return ''.join(random_char(CHARSETS[c]) for c in pattern)\\n\\n\\nclass Robot(object):\\n    _NAME_REGISTRY = []\\n    name_pattern = 'UUDDD'\\n\\n    @classmethod\\n    def generate_name(cls):\\n        while True:\\n            name = random_str_from_pattern(cls.name_pattern)\\n            if name not in cls._NAME_REGISTRY:\\n                cls._NAME_REGISTRY.append(name)\\n                return name\\n\\n    def __init__(self):\\n        self.reset()\\n\\n    def reset(self):\\n        self.name = self.__class__.generate_name()"}
84	17	72bf45727185621163967665	done	python	difference-of-squares	\N	\N	0	1	84	2015-08-10 07:03:33	2015-08-10 07:03:33	{"difference_of_squares.py":"# Difference of Squares\\n\\n# this sums all of the squares between 0 - n\\ndef sum_of_squares(n):\\n\\tsum_of_squares = 0\\n\\n\\tfor num in range(0, n+1):\\n\\t\\tsum_of_squares += (num ** 2)\\n\\n\\treturn sum_of_squares\\n\\n# this squares the sum of 0 - n\\ndef square_of_sum(n):\\n\\tsquare_of_sum = 0\\n\\n\\tfor num in range(0, n+1):\\n\\t\\tsquare_of_sum += num\\n\\n\\tsquare_of_sum **= 2\\n\\n\\treturn square_of_sum\\n\\n# calculates the difference between the\\n# square of the sum and the sum of the \\n# squares\\ndef difference(n):\\n\\tdifference = square_of_sum(n) - sum_of_squares(n)\\n\\t\\n\\treturn difference"}
85	20	35245cf49aa9fd722c1c2e47	\N	javascript	etl	\N	\N	0	1	85	2015-09-11 22:09:08	2015-09-11 22:09:08	{"etl.js":"module.exports = function(old){\\n  var shiny = {};\\n  for (var key in old){\\n    old[key].forEach(function(letter){\\n      shiny[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n  return shiny;\\n}"}
86	20	a99392379343aabeb26aa68c	hibernating	python	rna-transcription	\N	\N	0	1	86	2015-07-11 09:22:47	2015-07-11 09:22:47	{"dna.py":"def to_rna(dna_strand):\\n\\trna_strand = ''\\n\\tfor nucleotide in dna_strand:\\n\\t\\trna_strand += get_complement(nucleotide)\\n\\treturn rna_strand\\n\\ndef get_complement(nucleotide):\\n\\tif nucleotide == 'G':\\n\\t\\treturn 'C'\\n\\telif nucleotide == 'C':\\n\\t\\treturn 'G'\\n\\telif nucleotide == 'T':\\n\\t\\treturn 'A'\\n\\telif nucleotide == 'A':\\n\\t\\treturn 'U'\\n\\telse:\\n\\t\\treturn ''"}
87	20	5f2bc34cfbdf3cd3602cc7ca	pending	javascript	hello-world	\N	\N	0	1	88	2015-07-03 16:01:06	2015-07-03 16:01:06	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function () {};\\n\\nHelloWorld.prototype.hello = function (input) {\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n    if (input) {\\n        return 'Hello, ' + input + '!';\\n    } else {\\n        return 'Hello, world!';\\n    }\\n};\\n\\nmodule.exports = HelloWorld;"}
88	20	051645fb974519688671471c	\N	php	gigasecond	\N	\N	0	1	90	2015-07-22 13:01:33	2015-07-22 13:01:33	{"gigasecond.php":"\\u003c?php\\n\\nfunction from($date)\\n{\\n    return $date-\\u003eadd(new DateInterval(\\"PT1000000000S\\"));\\n}"}
89	20	1dadd865251969bba82764cd	pending	python	word-count	\N	\N	0	2	91	2015-10-14 20:52:19	2015-10-14 20:52:19	{"wordcount.py":"from collections import Counter\\ndef word_count(text):\\n    return Counter(text.split())"}
90	20	72de1c67e723d2ae522e9d17	superseded	python	word-count	\N	\N	0	1	91	2015-12-21 06:25:13	2015-12-21 06:25:13	{"wordcount.py":"def word_count(text):\\n    counts = {}\\n    for word in text.split():\\n        counts[word] = counts.get(word, 0) + 1\\n    return counts"}
91	21	07f595f1762bf51bd21ea47c	\N	javascript	etl	\N	\N	0	1	94	2015-10-07 07:21:49	2015-10-07 07:21:49	{"etl.js":"module.exports = function(old){\\n  var shiny = {};\\n  for (var key in old){\\n    old[key].forEach(function(letter){\\n      shiny[letter.toLowerCase()] = Number(key);\\n    });\\n  }\\n  return shiny;\\n}"}
92	36	e77ebe7afcb6346882038a26	hibernating	ruby	bob	\N	\N	0	1	95	2015-10-10 08:26:46	2015-10-10 08:26:46	{"bob.rb":"class Bob\\n  def hey(str)\\n    unless str.nil?\\n      punctuation = str[-1]\\n      yelling = (str.upcase == str)\\n    end\\n    if str.nil? || str.empty?\\n      return \\"Fine. Be that way.\\"\\n    elsif punctuation == '.' || (punctuation == '!' \\u0026\\u0026 !yelling)\\n      return \\"Whatever.\\"\\n    elsif yelling\\n      return \\"Woah, chill out!\\"\\n    else punctuation == '?'\\n      return \\"Sure.\\"\\n    end\\n  end\\nend"}
93	36	b121eeb8e91778a2f297a750	superseded	cpp	hamming	\N	\N	0	1	96	2015-09-26 03:13:37	2015-09-26 03:13:37	{"hamming.cpp":"#include \\"hamming.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cstdexcept\\u003e\\n#include \\u003cvector\\u003e\\n\\nstd::vector\\u003cstd::pair\\u003cchar, char\\u003e\\u003e zipString(std::string const \\u0026left, std::string const \\u0026right) {\\n  if (left.length() != right.length()) {\\n    throw std::domain_error {\\"Inequal length of input.\\"};\\n  }\\n\\n  std::string::const_iterator lit = left.cbegin();\\n  std::string::const_iterator rit = right.cbegin();\\n\\n  std::vector\\u003cstd::pair\\u003cchar, char\\u003e\\u003e result {};\\n\\n  for (; lit \\u003c left.cend() \\u0026\\u0026 rit \\u003c right.cend(); ++lit, ++rit) {\\n    result.push_back(std::pair\\u003cchar, char\\u003e{*lit, *rit});\\n  }\\n\\n  return result;\\n}\\n\\nunsigned int hamming::compute(std::string const left, std::string const right) {\\n  std::vector\\u003cstd::pair\\u003cchar, char\\u003e\\u003e pairs = zipString(left, right);\\n\\n  return std::count_if(pairs.cbegin(), pairs.cend(), [](std::pair\\u003cchar, char\\u003e val) {\\n    return val.first != val.second;\\n  });\\n}","hamming.h":"#ifndef HAMMING_HAMMING_H\\n#define HAMMING_HAMMING_H\\n\\n#include \\u003cstring\\u003e\\n\\nnamespace hamming {\\n  unsigned int compute(std::string const left, std::string const right);\\n}\\n\\n#endif //HAMMING_HAMMING_H"}
94	36	ca78cfa82424897f54cac1b6	pending	cpp	hamming	\N	\N	0	2	96	2015-09-29 14:48:15	2015-09-29 14:48:15	{"hamming.cpp":"#include \\"hamming.h\\"\\n\\n#include \\u003calgorithm\\u003e\\n#include \\u003cstdexcept\\u003e\\n#include \\u003cvector\\u003e\\n\\ntemplate\\u003cclass LeftOutput, class RightOutput, class LeftIt, class RightIt\\u003e\\n  std::vector\\u003cstd::pair\\u003cLeftOutput, RightOutput\\u003e\\u003e zip(LeftIt left_begin, LeftIt left_end,\\n                                                      RightIt right_begin, RightIt right_end) {\\n    if (left_end - left_begin != right_end - right_begin) { throw std::domain_error {\\"Inequal length of input.\\"}; }\\n\\n    std::vector\\u003cstd::pair\\u003cLeftOutput, RightOutput\\u003e\\u003e result;\\n\\n    for (auto lit = left_begin, rit = right_begin;\\n         lit \\u003c left_end; // Only need to check for one of them, I know already distance is the same from precondition\\n         ++lit, ++rit) {\\n      result.push_back(std::pair\\u003cLeftOutput, RightOutput\\u003e {*lit, *rit});\\n    }\\n\\n    return result;\\n  }\\n\\nunsigned int hamming::compute(std::string const left, std::string const right) {\\n  std::vector\\u003cstd::pair\\u003cchar, char\\u003e\\u003e pairs = zip\\u003cchar, char\\u003e(left.cbegin(), left.cend(), right.cbegin(), right.cend());\\n\\n  return (unsigned int) std::count_if(pairs.cbegin(), pairs.cend(), [](std::pair\\u003cchar, char\\u003e val) {\\n    return val.first != val.second;\\n  });\\n}","hamming.h":"#ifndef HAMMING_HAMMING_H\\n#define HAMMING_HAMMING_H\\n\\n#include \\u003cstring\\u003e\\n\\nnamespace hamming {\\n  unsigned int compute(std::string const left, std::string const right);\\n}\\n\\n#endif //HAMMING_HAMMING_H"}
97	30	45955aff811c703e3c76513f	pending	javascript	hello-world	\N	\N	0	1	102	2015-10-05 00:26:32	2015-10-05 00:26:32	{"hello-world.js":"//\\n// This is only a SKELETON file for the 'Hello World' exercise. It's been provided as a\\n// convenience to get you started writing code faster.\\n//\\n\\nvar HelloWorld = function () {};\\n\\nHelloWorld.prototype.hello = function (input) {\\n    //\\n    // YOUR CODE GOES HERE\\n    //\\n    if (input) {\\n        return 'Hello, ' + input + '!';\\n    } else {\\n        return 'Hello, world!';\\n    }\\n};\\n\\nmodule.exports = HelloWorld;"}
98	35	f0dc2021ebe4918fe958a563	superseded	ruby	word-count	\N	\N	0	5	103	2015-10-23 00:22:25	2015-10-23 00:22:25	{"word-count.rb":"class Counter \\u003c Hash\\n  def add(item)\\n    k = key_for(item)\\n    self[k] = count_for(k) + 1\\n  end\\n  \\n  private\\n  \\n  def count_for(k)\\n    (has_key? k) ? self[k] : 0\\n  end\\n  \\n  def key_for(item)\\n  \\titem.to_s.strip.downcase\\n  end\\nend\\n\\nclass Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    split(@input).each_with_object(Counter.new) { |w, counter| counter.add w }\\n  end\\n\\t\\n  private\\n\\t\\n  def split(input)\\n    input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
99	35	c67eef0b6e087b4ecbb2ca37	superseded	ruby	word-count	\N	\N	0	1	103	2015-11-04 18:21:14	2015-11-04 18:21:14	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
100	35	114876a274b006045a40252f	superseded	ruby	word-count	\N	\N	0	3	103	2015-11-18 07:05:39	2015-11-18 07:05:39	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase.to_sym\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
101	35	107d9668d01925c0eb0d37da	superseded	ruby	word-count	\N	\N	0	4	103	2015-11-19 04:59:42	2015-11-19 04:59:42	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
102	35	dee193e9157f015c66b716c7	superseded	ruby	word-count	\N	\N	0	6	103	2015-12-04 17:09:13	2015-12-04 17:09:13	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(counter) { |w, c| c[key_for(w)] += 1 }\\n  end\\n  \\n  private\\n  \\n  def counter\\n    Hash.new {|h,k| h.default = 0}\\n  end\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
103	35	c29dbf101d55d9101178d348	superseded	ruby	word-count	\N	\N	0	2	103	2015-12-06 21:27:20	2015-12-06 21:27:20	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
104	35	b19eeeaa5725bdc005786b79	superseded	ruby	word-count	\N	\N	0	7	103	2015-12-31 13:05:37	2015-12-31 13:05:37	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) do |w, c| \\n      c[key_for(w)] += 1 \\n    end\\n  end\\n  \\n  private\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
105	35	a268fabe3afe01fffb62d4c0	superseded	ruby	word-count	\N	\N	0	8	103	2016-01-01 10:54:39	2016-01-01 10:54:39	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
106	35	7016e297c588b8bf9303770e	done	ruby	word-count	\N	\N	0	9	103	2016-01-05 10:15:38	2016-01-05 10:15:38	{"phrase.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/[\\\\w']+/)\\n  end\\nend"}
107	35	bf3c8a2d914e0abdc5ae1a86	pending	java	bob	\N	\N	0	3	104	2015-11-21 03:23:39	2015-11-21 03:23:39	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?!.]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
108	35	0d94de36179b4cb17c4f933c	superseded	java	bob	\N	\N	0	2	104	2015-11-30 12:18:02	2015-11-30 12:18:02	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?!.]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse if (lastChar == '.' || lastChar == '!')\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
109	35	81f1eadc4e5e67ee2754f31d	superseded	java	bob	\N	\N	0	1	104	2015-12-06 22:23:43	2015-12-06 22:23:43	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse if (lastChar == '.' || lastChar == '!')\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
110	35	c27e375f7c95c5a52485f054	\N	ruby	rna-transcription	\N	\N	0	1	105	2015-11-08 10:22:12	2015-11-08 10:22:12	{"rna_transcription.rb":"class Complement \\n  VERSION = 2\\n  Dictionary = [[\\"G\\",\\"C\\"],[\\"C\\",\\"G\\"],[\\"T\\",\\"A\\"],[\\"A\\",\\"U\\"]]\\n  \\n\\n  def self.of_dna(string)\\n    rna = ''\\n    \\n    string.each_char { |ch|\\n      case ch\\n      when 'G'\\n        rna += 'C'\\n      when 'C'\\n        rna += 'G'\\n      when 'T'\\n        rna += 'A'\\n      when 'A'\\n        rna += 'U'\\n      else\\n        fail ArgumentError, 'wrong character in DNA string'\\n      end        \\n    }\\n\\n    return rna\\n  end\\n\\n  def self.of_rna(string)\\n    dna = ''\\n    \\n    string.each_char { |ch|\\n      case ch\\n      when 'C'\\n        dna += 'G'\\n      when 'G'\\n        dna += 'C'\\n      when 'A'\\n        dna += 'T'\\n      when 'U'\\n        dna += 'A'\\n      else\\n        fail ArgumentError, 'wrong character in RNA string'\\n      end        \\n    }\\n\\n    return dna\\n  end  \\nend"}
111	35	fd943517431f75242043ffd1	\N	ruby	rna-transcription	\N	\N	0	2	105	2015-12-28 16:42:42	2015-12-28 16:42:42	{"rna_transcription.rb":"class Complement \\n  VERSION = 2\\n  \\n  def self.of_dna(string)\\n    fail ArgumentError, 'wrong character in DNA strand' if string =~ /[^ACGT]/\\n    string.tr 'CGTA', 'GCAU'\\n  end\\n\\n  def self.of_rna(string)\\n    fail ArgumentError, 'wrong character in DNA strand' if string =~ /[^ACGU]/\\n    string.tr 'CGUA', 'GCAT'\\n  end\\nend"}
112	35	f540e7a0adf1eb6e5e6d6623	done	javascript	bob	\N	\N	0	7	106	2015-11-15 02:38:00	2015-11-15 02:38:00	{"bob.js":"var Bob = function() {\\r\\n\\tvar questionRegEXP = new RegExp(\\"\\\\\\\\?\\" + \\"$\\", \\"g\\");\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\tif (_.isYelling(order)) {\\r\\n\\t\\t\\t\\treturn 'Whoa, chill out!';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (_.isQuestionning(order)) {\\r\\n\\t\\t\\t\\treturn 'Sure.';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (_.isSilence(order)) {\\r\\n\\t\\t\\t\\treturn 'Fine. Be that way!';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn 'Whatever.';\\r\\n\\t\\t},\\r\\n\\t\\t// Check if all upper case, and its not just numbers and symbols\\r\\n\\t\\tisYelling : function(order) {\\r\\n\\t\\t\\tvar upperCase=order.toUpperCase();\\r\\n\\t\\t\\tif (order !== upperCase){\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t} \\r\\n\\t\\t\\tvar lowerCase=order.toLowerCase();\\r\\n\\t\\t\\tif(upperCase === lowerCase){\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t},\\r\\n\\t\\tisQuestionning : function(order) {\\r\\n\\t\\t\\treturn order.match(questionRegEXP);\\r\\n\\t\\t},\\r\\n\\t\\tisSilence : function(order) {\\r\\n\\t\\t\\treturn order.trim() === \\"\\";\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n};\\r\\nmodule.exports = Bob;"}
113	35	a6ce993bc333205c8cf5f762	superseded	javascript	bob	\N	\N	0	4	106	2015-11-23 03:09:37	2015-11-23 03:09:37	{"bob.js":"var Bob = function() {\\r\\n\\tvar questionRegEXP = new RegExp(\\"\\\\\\\\?\\" + \\"$\\", \\"g\\");\\r\\n\\tvar containsAlpha = new RegExp(\\"[A-Z]\\", \\"g\\");\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\tif (order.match(questionRegEXP)) {\\r\\n\\t\\t\\t\\treturn 'Sure.';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (order.trim() === \\"\\") {\\r\\n\\t\\t\\t\\treturn 'Fine. Be that way!'\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(order.match(containsAlpha) \\u0026\\u0026 order.toUpperCase() === order){\\r\\n\\t\\t\\t\\treturn 'Whoa, chill out!';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\treturn 'Whatever.';\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n}\\r\\nmodule.exports = Bob;"}
114	35	dc93aaa5eade75a6532574a6	superseded	javascript	bob	\N	\N	0	3	106	2015-11-24 07:50:45	2015-11-24 07:50:45	{"bob.js":"var Bob = function() {\\r\\n\\tvar questionRegEXP = new RegExp(\\"\\\\\\\\?\\" + \\"$\\", \\"g\\");\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\tif (order.match(questionRegEXP)) {\\r\\n\\t\\t\\t\\treturn 'Sure.';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (order.trim() === \\"\\") {\\r\\n\\t\\t\\t\\treturn 'Fine. Be that way!'\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(order.toUpperCase === order){\\r\\n\\t\\t\\t\\treturn 'Whoa, chill out!';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\treturn 'Whatever.';\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n}\\r\\nmodule.exports = Bob;"}
115	35	99d6b0e8d0cd08120834905a	superseded	javascript	bob	\N	\N	0	1	106	2015-12-02 20:12:40	2015-12-02 20:12:40	{"bob.js":"var Bob = function() {\\r\\n\\r\\n\\tvar orders = {\\r\\n\\t\\t'Tom-ay-to, tom-aaaah-to.' : 'Whatever.',\\r\\n\\t\\t'WATCH OUT!' : 'Whoa, chill out!',\\r\\n\\t\\t'Does this cryogenic chamber make me look fat?' : 'Sure.',\\r\\n\\t\\t'Let\\\\'s go make out behind the gym!' : 'Whatever.',\\r\\n\\t\\t'It\\\\'s OK if you don\\\\'t want to go to the DMV.' : 'Whatever.',\\r\\n\\t\\t'WHAT THE HELL WERE YOU THINKING' : 'Whoa, chill out!',\\r\\n\\t\\t'1, 2, 3 GO!' : 'Whoa, chill out!',\\r\\n\\t\\t'1, 2, 3' : 'Whatever.',\\r\\n\\t\\t'4?' : 'Sure.',\\r\\n\\t\\t'ZOMG THE %^*@#$(*^ ZOMBIES ARE COMING!!11!!1!' : 'Whoa, chill out!',\\r\\n\\t\\t'\\\\xdcML\\\\xc4\\\\xdcTS!' : 'Whoa, chill out!',\\r\\n\\t\\t'\\\\xfcML\\\\xe4\\\\xdcTS' : 'Whatever.',\\r\\n\\t\\t'I HATE YOU' : 'Whoa, chill out!',\\r\\n\\t\\t'Ending with a ? means a question.' : 'Whatever.',\\r\\n\\t\\t'Wait! Hang on.  Are you going to be OK?' : 'Sure.',\\r\\n\\t\\t'' : 'Fine. Be that way!',\\r\\n\\t\\t'   ' : 'Fine. Be that way!'\\r\\n\\t};\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\treturn orders[order]; \\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n}\\r\\nmodule.exports = Bob;"}
116	35	1dcb0efa544ddca972ade097	superseded	javascript	bob	\N	\N	0	2	106	2015-12-04 18:07:15	2015-12-04 18:07:15	{"bob.js":"var Bob = function() {\\r\\n\\r\\n\\tvar orders = {\\r\\n\\t\\t'Tom-ay-to, tom-aaaah-to.' : 'Whatever.',\\r\\n\\t\\t'Let\\\\'s go make out behind the gym!' : 'Whatever.',\\r\\n\\t\\t'It\\\\'s OK if you don\\\\'t want to go to the DMV.' : 'Whatever.',\\r\\n\\t\\t'1, 2, 3' : 'Whatever.',\\r\\n\\t\\t'\\\\xfcML\\\\xe4\\\\xdcTS' : 'Whatever.',\\r\\n\\t\\t'Ending with a ? means a question.' : 'Whatever.',\\r\\n\\r\\n\\t\\t'\\\\xdcML\\\\xc4\\\\xdcTS!' : 'Whoa, chill out!',\\r\\n\\t};\\r\\n\\r\\n\\tvar questionRegEXP = new RegExp(\\"\\\\\\\\?\\" + \\"$\\", \\"g\\");\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\tif (order.match(questionRegEXP)) {\\r\\n\\t\\t\\t\\treturn 'Sure.';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (order.trim() === \\"\\") {\\r\\n\\t\\t\\t\\treturn 'Fine. Be that way!'\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(order.toUpperCase === order){\\r\\n\\t\\t\\t\\treturn 'Whoa, chill out!';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn orders[order];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n}\\r\\nmodule.exports = Bob;"}
193	27	085b8938fb40eb9ab99e2227	done	ruby	grains	\N	\N	0	1	189	2015-11-19 06:06:25	2015-11-19 06:06:25	{"grains.rb":"class Grains\\n\\n  NUM_SQUARES = 64\\n\\n  def square(square)\\n    2 ** (square - 1)\\n  end\\n\\n  def total\\n    sum = 1\\n    last_square = 1\\n    (2..NUM_SQUARES).each do |num|\\n      last_square *= 2\\n      sum += last_square\\n    end\\n    sum\\n  end\\n  \\nend"}
117	35	5f7474646167d3fa40ae1de4	superseded	javascript	bob	\N	\N	0	5	106	2015-12-07 17:59:43	2015-12-07 17:59:43	{"bob.js":"var Bob = function() {\\r\\n\\tvar questionRegEXP = new RegExp(\\"\\\\\\\\?\\" + \\"$\\", \\"g\\");\\r\\n\\tvar containsAlpha = new RegExp(\\"[A-Z]\\", \\"g\\");\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\tif(order.match(containsAlpha) \\u0026\\u0026 order.toUpperCase() === order){\\r\\n\\t\\t\\t\\treturn 'Whoa, chill out!';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (order.trim() === \\"\\") {\\r\\n\\t\\t\\t\\treturn 'Fine. Be that way!'\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (order.match(questionRegEXP)) {\\r\\n\\t\\t\\t\\treturn 'Sure.';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\treturn 'Whatever.';\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n}\\r\\nmodule.exports = Bob;"}
118	35	d8f41f825cef6d643478fed4	superseded	javascript	bob	\N	\N	0	6	106	2015-12-22 00:10:33	2015-12-22 00:10:33	{"bob.js":"var Bob = function() {\\r\\n\\tvar questionRegEXP = new RegExp(\\"\\\\\\\\?\\" + \\"$\\", \\"g\\");\\r\\n\\tvar containsUpperCaseAlphaRegEXP = new RegExp(\\"[A-Z]\\", \\"g\\");\\r\\n\\r\\n\\tvar _ = {\\r\\n\\t\\they : function(order) {\\r\\n\\t\\t\\tif(order.match(containsUpperCaseAlphaRegEXP) \\u0026\\u0026 order.toUpperCase() === order){\\r\\n\\t\\t\\t\\treturn 'Whoa, chill out!';\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (order.trim() === \\"\\") {\\r\\n\\t\\t\\t\\treturn 'Fine. Be that way!';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (order.match(questionRegEXP)) {\\r\\n\\t\\t\\t\\treturn 'Sure.';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\treturn 'Whatever.';\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\treturn {\\r\\n\\t\\they : _.hey\\r\\n\\t};\\r\\n};\\r\\nmodule.exports = Bob;"}
119	14	78de2da8e41f99ddede855a3	done	ruby	hamming	\N	\N	0	1	107	2016-01-09 19:32:48	2016-01-09 19:32:48	{"hamming.rb":"# Write a program that can calculate the Hamming difference between two DNA strands.\\nclass Hamming\\n  def self.compute(a, b)\\n    new(a, b).compute\\n  end\\n\\n  def initialize(a, b)\\n    @a, @b = a, b\\n  end\\n\\n  def compute\\n    0.upto(length - 1).inject(0) do |memo, idx|\\n      memo += 1 if @a[idx] != @b[idx]\\n\\n      memo\\n    end\\n  end\\n\\nprivate\\n\\n  def length\\n    [@a.length, @b.length].min\\n  end\\n\\nend"}
120	14	7fd6c909b9fcea0d18624765	done	python	word-count	\N	\N	0	2	109	2016-01-08 16:08:40	2016-01-08 16:08:40	{"/python/word-count/wordcount.py":"from collections import defaultdict\\n\\ndef word_count(phrase):\\n\\tcount = defaultdict(int)\\n\\tfor word in phrase.split():\\n\\t\\tcount[word] += 1\\n\\treturn count"}
121	14	452e67c856e2375ab89dbcb7	superseded	python	word-count	\N	\N	0	1	109	2016-01-10 19:09:08	2016-01-10 19:09:08	{"/python/word-count/wordcount.py":"def word_count(phrase):\\n\\tcount = {}\\n\\tfor word in phrase.split():\\n\\t\\tif word in count:\\n\\t\\t\\tcount[word] += 1\\n\\t\\telse:\\n\\t\\t\\tcount[word] = 1\\n\\treturn count"}
122	41	015fd26f46d5e6bfc7661626	done	ruby	atbash-cipher	\N	\N	0	1	111	2015-08-30 04:42:16	2015-08-30 04:42:16	{"/ruby/atbash-cipher/atbash.rb":"class Atbash\\n  def self.encode(plaintext)\\n    a_to_z = (\\"a\\"..\\"z\\").to_a.join\\n    normalized_text = plaintext.downcase.gsub(/[^a-z0-9]/i,\\"\\")\\n    normalized_text.tr(a_to_z, a_to_z.reverse).scan(/.{,5}/).join(\\" \\").strip\\n  end\\nend"}
123	41	73bb67f6abff061c5a93ec43	pending	python	gigasecond	\N	\N	0	2	113	2015-09-04 03:20:04	2015-09-04 03:20:04	{"gigasecond.py":"from datetime import timedelta\\n\\n# define constants\\ngiga_seconds = timedelta(seconds=10**9)\\n\\ndef add_gigasecond(date):\\n    return date + giga_seconds"}
124	41	e04745f8b3655e67be0f41f4	superseded	python	gigasecond	\N	\N	0	1	113	2015-10-03 18:45:49	2015-10-03 18:45:49	{"gigasecond.py":"import datetime\\n\\ndef add_gigasecond(input_date):\\n    giga_seconds = datetime.timedelta(seconds=10**9)\\n    return input_date + giga_seconds"}
125	41	07e315b5e41a996126f23f30	\N	haskell	robot-name	\N	\N	0	1	114	2015-08-05 05:04:56	2015-08-05 05:04:56	{"Robot.hs":"module Robot (mkRobot, robotName, resetName) where\\n\\nimport Control.Concurrent (MVar, readMVar, newMVar, modifyMVar_)\\nimport System.Random (randomRIO)\\n\\nnewtype Robot = Robot (MVar String)\\n\\nmkRobot :: IO Robot\\nmkRobot = generateName \\u003e\\u003e= newMVar \\u003e\\u003e= return . Robot\\n\\nrobotName :: Robot -\\u003e IO String\\nrobotName (Robot r) = readMVar r\\n\\nresetName :: Robot -\\u003e IO ()\\nresetName (Robot r) = modifyMVar_ r (const generateName)\\n\\ngenerateName :: IO String\\ngenerateName =\\n  mapM randomRIO [('A', 'Z'), ('A', 'Z'), ('0', '9'), ('0', '9'), ('0', '9')]"}
126	41	cd69d09dbdae620b000f98d8	superseded	javascript	triangle	\N	\N	0	1	116	2015-08-22 21:41:21	2015-08-22 21:41:21	{"triangle.js":";\\n\\nvar Triangle = function(a, b, c) {\\n    var hasNoSides = function() {\\n            return a == 0 \\u0026\\u0026 b == 0 \\u0026\\u0026 c == 0;\\n        },\\n        hasNonPositiveSides = function() {\\n            return a \\u003c= 0 || b \\u003c= 0 || c \\u003c= 0;\\n        },\\n        violatesTriangleInequality = function() {\\n            return a \\u003e= b + c || b \\u003e= a + c || c \\u003e= a + b;\\n        },\\n        isError = function() {\\n            return hasNoSides();\\n        },\\n        isIllegal = function() {\\n            return hasNonPositiveSides() || violatesTriangleInequality();\\n        },\\n        isEquilateral = function() {\\n            return a == b \\u0026\\u0026 b == c;\\n        },\\n        isIsoscelees = function() {\\n            return a == b || b == c || a == c;\\n        };\\n\\n    this.kind = function() {\\n        if( isError() )\\n            throw(new TriangleError(\\"Invalid Triangle\\"));\\n\\n        if( isIllegal() )\\n            return \\"illegal\\";\\n\\n        if( isEquilateral() )\\n            return \\"equilateral\\";\\n\\n        if( isIsoscelees() )\\n            return \\"isosceles\\";\\n\\n        return \\"scalene\\";\\n    };\\n\\n};\\n\\n\\nTriangleError = function() {};\\nTriangleError.prototype = Error;\\n\\nTriangle.Error = TriangleError;\\n\\nmodule.exports = Triangle;"}
127	41	f23c72fa771bdb29a0686f5a	done	javascript	triangle	\N	\N	0	2	116	2015-10-31 21:38:20	2015-10-31 21:38:20	{"triangle.js":"var Triangle = function(a, b, c) {\\r\\n  var hasNoSides, hasNonPositiveSides,\\r\\n      isEquilateral, isError, isIllegal,\\r\\n      isIsoscelees, violatesTriangleInequality;\\r\\n\\r\\n  this.kind = function() {\\r\\n    if( isError() )\\r\\n      throw(new TriangleError(\\"Invalid Triangle\\"));\\r\\n\\r\\n    if( isIllegal() )\\r\\n      return \\"illegal\\";\\r\\n\\r\\n    if( isEquilateral() )\\r\\n      return \\"equilateral\\";\\r\\n\\r\\n    if( isIsoscelees() )\\r\\n      return \\"isosceles\\";\\r\\n\\r\\n    return \\"scalene\\";\\r\\n  };\\r\\n\\r\\n\\r\\n  isError = function() {\\r\\n    return hasNoSides();\\r\\n  };\\r\\n\\r\\n  hasNoSides = function() {\\r\\n    return a == 0 \\u0026\\u0026 b == 0 \\u0026\\u0026 c == 0;\\r\\n  };\\r\\n\\r\\n\\r\\n  isIllegal = function() {\\r\\n    return hasNonPositiveSides() || violatesTriangleInequality();\\r\\n  };\\r\\n\\r\\n  hasNonPositiveSides = function() {\\r\\n    return a \\u003c= 0 || b \\u003c= 0 || c \\u003c= 0;\\r\\n  };\\r\\n\\r\\n  violatesTriangleInequality = function() {\\r\\n    return a \\u003e= b + c || b \\u003e= a + c || c \\u003e= a + b;\\r\\n  };\\r\\n\\r\\n\\r\\n  isEquilateral = function() {\\r\\n    return a == b \\u0026\\u0026 b == c;\\r\\n  };\\r\\n\\r\\n\\r\\n  isIsoscelees = function() {\\r\\n    return a == b || b == c || a == c;\\r\\n  };\\r\\n};\\r\\n\\r\\n\\r\\nTriangleError = function() {};\\r\\nTriangleError.prototype = Error.prototype;\\r\\n\\r\\nTriangle.Error = TriangleError;\\r\\n\\r\\nmodule.exports = Triangle;\\r"}
138	34	fbff374d01886854301e4861	superseded	ruby	word-count	\N	\N	0	3	129	2015-11-20 02:39:44	2015-11-20 02:39:44	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase.to_sym\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
128	41	3f5eef907409dad8cf98faf0	done	ruby	phone-number	\N	\N	0	1	117	2015-11-29 07:50:51	2015-11-29 07:50:51	{"phone-number.rb":"class PhoneNumber\\n  attr_reader :phone_number\\n  alias_method :number, :phone_number\\n\\n  def initialize( raw_phone_number )\\n    cleaned_number = clean_phone_number( raw_phone_number ) \\n    if valid_phone_number?( cleaned_number ) \\n      @phone_number = cleaned_number \\n      make_phone_number_10_digits_long\\n    else\\n      @phone_number = \\"0\\" * 10\\n    end\\n  end\\n\\n  def area_code\\n    @phone_number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(\\" + @phone_number[0..2] + \\") \\" + @phone_number[3..5] + \\"-\\" + @phone_number[6..9] \\n  end\\n\\n  def make_phone_number_10_digits_long\\n    if @phone_number.length == 11\\n      @phone_number = @phone_number[1..10]\\n    end\\n  end\\n\\n  def valid_phone_number?( number=\\"\\" )\\n    case number.length\\n    when 10 \\n      true\\n    when 11 then \\n      number[0] == \\"1\\" ? true : false\\n    else\\n      false\\n    end\\n  end\\n\\n  def clean_phone_number( raw_phone_number )\\n    cleaned_number = \\"\\"\\n    raw_phone_number.chars.each { |d| cleaned_number \\u003c\\u003c d  unless d.match(/[0-9]/).nil? }\\n    cleaned_number    \\n  end\\nend"}
129	41	31ea8a06c8458be08e8ec621	pending	scala	anagram	\N	\N	0	1	118	2015-10-14 23:07:42	2015-10-14 23:07:42	{"\\\\scala\\\\anagram\\\\src\\\\main\\\\scala\\\\Anagram.scala":"class Anagram(initStr: String) {\\r\\n\\r\\n  /** Fixed Map reference for the word given in constructor */\\r\\n  val referenceMap = stringToMap(initStr)\\r\\n\\r\\n  def matches(attempts: Seq[String]): Seq[String] = {\\r\\n    attempts.filter(testedStr =\\u003e testedStr.toLowerCase != initStr.toLowerCase \\u0026\\u0026 stringToMap(testedStr) == referenceMap)\\r\\n  }\\r\\n\\r\\n  /** Transform a String into a Map with characters of the word as key and nb of occurrence of the character in the word as value */\\r\\n  private def stringToMap(word: String):Map[Char,Int] = {\\r\\n    word.toLowerCase.toCharArray.distinct.map(c =\\u003e c -\\u003e word.toLowerCase.count(_ == c)).toMap\\r\\n  }\\r\\n\\r\\n}"}
130	41	1a4d7ee49ffcddcda1b54f00	pending	python	largest-series-product	\N	\N	0	1	119	2015-09-10 15:48:27	2015-09-10 15:48:27	{"series.py":"# translates the given string into a list of digits (of type int)\\r\\ndef extract_digits(string):\\r\\n\\tanswer=[]\\r\\n\\tfor d in string:\\r\\n\\t\\tanswer.append(int(d))\\r\\n\\treturn answer\\r\\n\\r\\n# calculates all the size-length slices of the given string interpreted as int's\\r\\n# raises a ValueError if size\\u003elen(string) or size\\u003c=0\\r\\ndef slices(string,size):\\r\\n\\tif size\\u003elen(string) or size\\u003c=0:\\r\\n\\t\\traise ValueError(\\"%s is not a valid size for slices of \\\\\\"%s\\\\\\".\\"%(size,string))\\r\\n\\tanswer=[]\\r\\n\\tfor i in range(len(string)-size+1):\\r\\n\\t\\tanswer.append(extract_digits(string[i:i+size]))\\r\\n\\treturn answer\\r\\n\\r\\n# calculates the product of all arguments (which should be of type int)\\r\\ndef product(*args):\\r\\n\\tanswer=1\\r\\n\\tfor n in args:\\r\\n\\t\\tanswer*=n\\r\\n\\treturn answer\\r\\n\\r\\n# calculates the largest product of all size-length slices of the given string interpreted as ints.\\r\\n# raises a ValueError if size\\u003elen(string)\\r\\ndef largest_product(string,size):\\r\\n\\tif len(string)==size==0:\\r\\n\\t\\treturn 1\\r\\n\\telse:\\r\\n\\t\\treturn max([ product(*x) for x in slices(string,size) ])"}
131	41	5a25a40bb6036cb447f653ca	\N	php	gigasecond	\N	\N	0	1	120	2015-09-13 16:06:54	2015-09-13 16:06:54	{"gigasecond.php":"\\u003c?php\\n\\nfunction from($date)\\n{\\n    return $date-\\u003eadd(new DateInterval(\\"PT1000000000S\\"));\\n}"}
132	41	5674e258fc6a82c2ccf58ad4	done	python	word-count	\N	\N	0	2	123	2015-10-01 08:23:14	2015-10-01 08:23:14	{"/python/word-count/wordcount.py":"from collections import defaultdict\\n\\ndef word_count(phrase):\\n\\tcount = defaultdict(int)\\n\\tfor word in phrase.split():\\n\\t\\tcount[word] += 1\\n\\treturn count"}
133	41	ec1db74d23fe4b841b818b49	superseded	python	word-count	\N	\N	0	1	123	2015-11-02 11:42:56	2015-11-02 11:42:56	{"/python/word-count/wordcount.py":"def word_count(phrase):\\n\\tcount = {}\\n\\tfor word in phrase.split():\\n\\t\\tif word in count:\\n\\t\\t\\tcount[word] += 1\\n\\t\\telse:\\n\\t\\t\\tcount[word] = 1\\n\\treturn count"}
134	34	66fae8de2286d4aef06604fb	done	ruby	phone-number	\N	\N	0	1	126	2015-11-16 06:03:33	2015-11-16 06:03:33	{"phone-number.rb":"class PhoneNumber\\n  attr_reader :phone_number\\n  alias_method :number, :phone_number\\n\\n  def initialize( raw_phone_number )\\n    cleaned_number = clean_phone_number( raw_phone_number ) \\n    if valid_phone_number?( cleaned_number ) \\n      @phone_number = cleaned_number \\n      make_phone_number_10_digits_long\\n    else\\n      @phone_number = \\"0\\" * 10\\n    end\\n  end\\n\\n  def area_code\\n    @phone_number[0..2]\\n  end\\n\\n  def to_s\\n    \\"(\\" + @phone_number[0..2] + \\") \\" + @phone_number[3..5] + \\"-\\" + @phone_number[6..9] \\n  end\\n\\n  def make_phone_number_10_digits_long\\n    if @phone_number.length == 11\\n      @phone_number = @phone_number[1..10]\\n    end\\n  end\\n\\n  def valid_phone_number?( number=\\"\\" )\\n    case number.length\\n    when 10 \\n      true\\n    when 11 then \\n      number[0] == \\"1\\" ? true : false\\n    else\\n      false\\n    end\\n  end\\n\\n  def clean_phone_number( raw_phone_number )\\n    cleaned_number = \\"\\"\\n    raw_phone_number.chars.each { |d| cleaned_number \\u003c\\u003c d  unless d.match(/[0-9]/).nil? }\\n    cleaned_number    \\n  end\\nend"}
135	34	f07cf13c88ef756981209aff	pending	ruby	grade-school	\N	\N	0	1	127	2015-11-21 18:27:35	2015-11-21 18:27:35	{"/ruby/grade-school/grade_school.rb":"class School\\n  class Pupil\\n    def initialize(name, grade)\\n      @name = name.to_s\\n      @grade = grade.to_i\\n      @name.freeze\\n      @grade.freeze\\n    end\\n\\n    def \\u003c=\\u003e(other_pupil)\\n      grade == other_pupil.grade ? name \\u003c=\\u003e other_pupil.name : grade \\u003c=\\u003e other_pupil.grade\\n    end\\n\\n    def to_hash\\n      {@grade =\\u003e [@name]}\\n    end\\n\\n    protected\\n    attr_reader :name, :grade\\n  end\\n\\n  require 'set'\\n\\n  def initialize\\n    @pupils = SortedSet.new\\n  end\\n\\n  def add(name, grade)\\n    @pupils \\u003c\\u003c Pupil.new(name, grade)\\n  end\\n\\n  def grade(grade)\\n    to_hash.fetch(grade, [])\\n  end\\n\\n  def to_hash\\n    pupils.reduce(Hash.new) { |hash, pupil|\\n      hash.merge(pupil.to_hash) { |k, o, n| o + n }\\n    }\\n  end\\n\\n  private\\n  attr_reader :pupils\\nend"}
136	34	8e67f382c022b0d3ac92c62c	superseded	ruby	word-count	\N	\N	0	5	129	2015-11-09 13:36:07	2015-11-09 13:36:07	{"word-count.rb":"class Counter \\u003c Hash\\n  def add(item)\\n    k = key_for(item)\\n    self[k] = count_for(k) + 1\\n  end\\n  \\n  private\\n  \\n  def count_for(k)\\n    (has_key? k) ? self[k] : 0\\n  end\\n  \\n  def key_for(item)\\n  \\titem.to_s.strip.downcase\\n  end\\nend\\n\\nclass Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    split(@input).each_with_object(Counter.new) { |w, counter| counter.add w }\\n  end\\n\\t\\n  private\\n\\t\\n  def split(input)\\n    input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
137	34	ad2ca11f94e9021ec46de7a9	superseded	ruby	word-count	\N	\N	0	1	129	2015-11-13 00:43:54	2015-11-13 00:43:54	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
194	27	6ef2697e1a47ca8c8feea439	\N	clojure	rna-transcription	\N	\N	0	2	190	2015-09-24 04:53:08	2015-09-24 04:53:08	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(defn convert-base\\n  [base]\\n  (case base\\n    \\\\C \\"G\\"\\n    \\\\G \\"C\\"\\n    \\\\A \\"U\\"\\n    \\\\T \\"A\\"\\n    (throw (AssertionError.))))\\n\\n(defn to-rna\\n  [dna]\\n  (apply str (map convert-base dna)))"}
139	34	e6b258b898ceb9cfd028ff6b	superseded	ruby	word-count	\N	\N	0	4	129	2015-11-23 08:24:19	2015-11-23 08:24:19	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
140	34	a02d893bfaa4fec4afb7217c	superseded	ruby	word-count	\N	\N	0	6	129	2015-12-03 04:01:07	2015-12-03 04:01:07	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(counter) { |w, c| c[key_for(w)] += 1 }\\n  end\\n  \\n  private\\n  \\n  def counter\\n    Hash.new {|h,k| h.default = 0}\\n  end\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
141	34	18678502a439b278169518a8	superseded	ruby	word-count	\N	\N	0	2	129	2015-12-04 22:23:34	2015-12-04 22:23:34	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
142	34	c53613fc9e96b5c005cd5dcd	superseded	ruby	word-count	\N	\N	0	7	129	2015-12-20 01:23:17	2015-12-20 01:23:17	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) do |w, c| \\n      c[key_for(w)] += 1 \\n    end\\n  end\\n  \\n  private\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
143	34	f94c1345157250704611bb22	superseded	ruby	word-count	\N	\N	0	8	129	2015-12-27 09:40:20	2015-12-27 09:40:20	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
144	34	3005daf31ff88cbe6923432a	done	ruby	word-count	\N	\N	0	9	129	2015-12-29 18:29:00	2015-12-29 18:29:00	{"phrase.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/[\\\\w']+/)\\n  end\\nend"}
145	34	91c6e97a60d613da9e82edd1	needs_input	cpp	anagram	\N	\N	0	1	132	2015-11-16 19:31:33	2015-11-16 19:31:33	{"anagram.cpp":"#include \\u003ciostream\\u003e\\n#include \\u003cvector\\u003e\\n#include \\"anagram.h\\"\\n#include \\u003ccstring\\u003e\\n#include \\u003calgorithm\\u003e\\n\\ntypedef std::vector\\u003cstd::string\\u003e test;\\n\\nnamespace anagram\\n{\\n\\tstd::string orderAlpha(std::string input)\\n\\t{\\n\\t\\tint i = 0;\\n\\t\\tchar tmp;\\n\\n\\t\\twhile(i\\u003cinput.length() - 1)\\n\\t\\t{\\n\\t\\t\\tif(input[i] \\u003e input[i+1])\\n\\t\\t\\t{\\n\\t\\t\\t\\ttmp = input[i];\\n\\t\\t\\t\\tinput[i] = input[i+1];\\n\\t\\t\\t\\tinput[i+1] = tmp;\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t\\ti++;\\n\\t\\t}\\n\\t\\treturn input;\\n\\t}\\n\\n\\tanagram::anagram (std::string input) \\n\\t{\\n  \\t\\t//Sort\\n  \\t\\ttransform(input.begin(), input.end(), input.begin(),(int (*)(int))tolower); //Conver to lower case\\n  \\t\\troot_word_orig = input;\\n  \\t\\troot_word = orderAlpha(root_word_orig);\\n\\t}\\n\\n\\ttest anagram::matches (test words) \\n\\t{\\n\\t\\ttest matching_words;\\n\\t\\ttest::iterator match_words_it;\\n\\n\\t\\ttest::iterator match_it;\\n\\t\\t\\n\\t\\tstd::string ordered;\\n\\n\\t\\tfor (match_it=words.begin(); match_it\\u003cwords.end(); match_it++) //For each string in vector\\n\\t\\t{\\n\\t\\t\\tordered = *match_it;\\n\\t\\t\\ttransform(ordered.begin(), ordered.end(), ordered.begin(),(int (*)(int))tolower); //Convert to lower case\\n\\n\\t\\t\\tif(root_word_orig != ordered)\\n\\t\\t\\t{\\n\\t\\t\\t\\tordered = orderAlpha(ordered); \\n\\n\\t\\t\\t\\tif(ordered == root_word)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmatch_words_it = matching_words.begin();\\n\\t\\t\\t\\t\\tmatch_words_it = matching_words.insert(matching_words.end(), *match_it); //Add to vector of found anagrams\\n\\t\\t\\t\\t}\\t\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn matching_words;\\n\\t}\\n}"}
146	34	32169e42a8ab3e555a77396a	done	ruby	nucleotide-count	\N	\N	0	2	133	2015-12-06 08:23:24	2015-12-06 08:23:24	{"nucleotide-count.rb":"class DNA\\n  attr_reader :nucleotides\\n\\n  DNA_NUCLEOTIDES = [ 'A', 'C', 'G', 'T' ]\\n \\n  def initialize(nucleotides)\\n    @nucleotides = normalized_input(nucleotides)\\n    validate_as_dna(@nucleotides)\\n    @dna_nucleotide_count_result_default = {'A' =\\u003e 0, 'T' =\\u003e 0, 'C' =\\u003e 0, 'G' =\\u003e 0} \\n  end\\n\\n  def count(nucleotide)\\n    Nucleotide.count_single(nucleotide, nucleotides)\\n  end\\n\\n  def nucleotide_counts\\n    nucleotides.each_with_object(@dna_nucleotide_count_result_default) do |nucleotide, count_results|\\n      count_results[nucleotide] = count(nucleotide) unless count_results.key? [nucleotide] \\n    end\\n  end\\n\\nprivate\\n\\n  def normalized_input(nucleotides)\\n    nucleotides.split('').sort\\n  end\\n\\n  def validate_as_dna(candidates)\\n    candidates.uniq.each do |possible_nucleotide|\\n      unless DNA_NUCLEOTIDES.include? possible_nucleotide\\n        raise ArgumentError\\n      end\\n    end\\n  end\\n\\nend\\n\\nclass Nucleotide\\n\\n  NUCLEOTIDES = [ 'A', 'C', 'G', 'T', 'U' ] \\n\\n  def self.count_single(nucleotide, nucleotides)\\n    if validate_as_nucleotide(nucleotide)\\n      nucleotides.select {|n| n.eql? nucleotide}.count\\n    else\\n      raise ArgumentError\\n    end\\n  end\\n\\nprivate\\n\\n  def self.validate_as_nucleotide(candidate)\\n    NUCLEOTIDES.include? candidate \\n  end\\n\\nend"}
147	34	57d55cad0d44d69d74ef27dd	superseded	ruby	nucleotide-count	\N	\N	0	1	133	2015-12-11 01:08:42	2015-12-11 01:08:42	{"nucleotide-count.rb":"class DNA\\n  attr_reader :nucleotides\\n\\n  DNA_NUCLEOTIDES = [ 'A', 'C', 'G', 'T' ]\\n \\n  def initialize(nucleotides)\\n    @nucleotides = nucleotides.split('').sort\\n    validate_as_dna(@nucleotides)\\n    @dna_nucleotide_count_result_default = {'A' =\\u003e 0, 'T' =\\u003e 0, 'C' =\\u003e 0, 'G' =\\u003e 0} \\n  end\\n\\n  def count(nucleotide)\\n    Nucleotide.count(nucleotide, nucleotides)\\n  end\\n\\n  def nucleotide_counts\\n    nucleotides.each_with_object(@dna_nucleotide_count_result_default) do |nucleotide, count_results|\\n      unless count_results.has_key? [nucleotide] \\n        count_results[nucleotide] = count(nucleotide)\\n      end\\n    end\\n  end\\n\\n  def validate_as_dna(candidates)\\n    candidates.uniq.each do |possible_nucleotide|\\n      unless DNA_NUCLEOTIDES.include? possible_nucleotide\\n        raise ArgumentError\\n      end\\n    end\\n  end\\n\\nend\\n\\nclass Nucleotide\\n\\n  NUCLEOTIDES = [ 'A', 'C', 'G', 'T', 'U' ] \\n\\n  def self.count(nucleotide, nucleotides)\\n    if validate_as_nucleotide(nucleotide)\\n      nucleotides.select {|n| n.eql? nucleotide}.count\\n    else\\n      raise ArgumentError\\n    end\\n  end\\n\\n  def self.validate_as_nucleotide(candidate)\\n    NUCLEOTIDES.include? candidate \\n  end\\n\\nend"}
148	34	79958eabab173634784615ab	pending	clojure	point-mutations	\N	\N	0	2	134	2015-11-23 21:46:02	2015-11-23 21:46:02	{"/clojure/point-mutations/point_mutations.clj":"(ns point-mutations)\\n\\n(defn hamming-distance [dna1 dna2]\\n  (if (= (count dna1)\\n         (count dna2))\\n    (reduce + (map #(if (= %1 %2) 0 1) dna1 dna2))\\n    nil))"}
149	34	dcbcc4838fd012f71abf4d37	superseded	clojure	point-mutations	\N	\N	0	1	134	2015-12-13 22:33:10	2015-12-13 22:33:10	{"/clojure/point-mutations/point_mutations.clj":"(ns point-mutations)\\n\\n(defn hamming-distance [dna1 dna2]\\n  (if (= (count dna1)\\n         (count dna2))\\n    (count\\n      (filter (fn [nucleotides]\\n                (not= (get nucleotides 0)\\n                      (get nucleotides 1)))\\n              (map vector dna1 dna2)))\\n  nil))"}
150	34	8ce581b157a0dcfa1e2dcd30	pending	java	bob	\N	\N	0	3	138	2015-11-21 12:54:35	2015-11-21 12:54:35	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?!.]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
151	34	0b41049b9cfdd304396fa7fa	superseded	java	bob	\N	\N	0	2	138	2015-12-02 20:58:42	2015-12-02 20:58:42	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?!.]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse if (lastChar == '.' || lastChar == '!')\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
152	34	8fb7d8b9eed220dada75571a	superseded	java	bob	\N	\N	0	1	138	2015-12-23 05:44:23	2015-12-23 05:44:23	{"src/main/java/Bob.java":"public class Bob {\\n\\tpublic String hey(String phrase) {\\n\\t\\tString[] data = phrase.split(\\"[\\\\\\\\s+,?]\\");\\n\\t\\tString response = new String();\\n\\t\\tint count = 0;\\n\\t\\tint blank = 0;\\n\\t\\tint length = data.length;\\n\\t\\tchar lastChar = phrase.isEmpty() ? '\\\\0' : phrase.charAt(phrase.length()-1);\\n\\n\\t\\tfor (String word : data) {\\n\\t\\t\\tif (!word.isEmpty()) {\\n\\t\\t\\t\\ttry {\\n       \\t\\t\\t\\tif (Integer.parseInt(word) \\u003e 0)\\n\\t\\t\\t\\t\\t\\tcount++;\\n\\t\\t\\t    } catch(NumberFormatException e){}\\n\\t\\t\\t} else\\n\\t\\t\\t\\tblank++;\\n\\t\\t}\\n\\n\\t\\tif (blank != length) {\\n\\t\\t\\tif (count == (length-blank)) {\\n\\t\\t\\t\\tif (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (phrase.toUpperCase().equals(phrase))\\n\\t\\t\\t\\t\\tresponse = \\"Whoa, chill out!\\";\\n\\t\\t\\t\\telse if (lastChar == '?')\\n\\t\\t\\t\\t\\tresponse = \\"Sure.\\";\\n\\t\\t\\t\\telse if (lastChar == '.' || lastChar == '!')\\n\\t\\t\\t\\t\\tresponse = \\"Whatever.\\";\\n\\t\\t\\t}\\n\\n\\t\\t} else\\n\\t\\t\\tresponse = \\"Fine. Be that way!\\";\\n\\n\\t\\treturn response;\\n\\t}\\n}"}
153	34	b6cadfeedc7f3c979eb5e03e	superseded	ruby	anagram	\N	\N	0	1	141	2015-12-05 05:35:09	2015-12-05 05:35:09	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @word = word\\n    @letters = word.downcase.scan(/[\\\\w]/).sort\\n  end\\n  def match(anagrams)\\n    match = []\\n    for i in anagrams\\n      for j in i.scan(/[\\\\w]+/).sort\\n        if j.downcase == @word.downcase\\n          next\\n        end\\n        k = j.downcase.scan(/[\\\\w]/).sort\\n        if @letters == k\\n          match.push j\\n        end\\n      end\\n    end   \\n    return match\\n  end  \\nend"}
154	34	0e1ecb9dd55dd13775403340	done	ruby	anagram	\N	\N	0	4	141	2015-12-14 11:36:03	2015-12-14 11:36:03	{"anagram.rb":"class Anagram\\n\\n  def initialize(word)\\n    @word = word.downcase\\n    @letters = @word.chars.sort\\n  end\\n  \\n  def match(anagrams)\\n    match = anagrams.each_with_object([]) do |anagram, m|\\n      a = anagram.downcase\\n      m.push anagram if a != @word \\u0026\\u0026 a.chars.sort == @letters\\n    end\\n  end  \\n  \\nend"}
155	34	c545decae4580995f2be57f3	superseded	ruby	anagram	\N	\N	0	3	141	2015-12-22 10:12:20	2015-12-22 10:12:20	{"anagram.rb":"class Anagram\\n\\n  def initialize(word)\\n    @word = word.downcase\\n    @letters = @word.chars.sort\\n  end\\n  \\n  def match(anagrams)\\n    match = anagrams.each_with_object([]) do |anagram, m|\\n      a = anagram.downcase\\n      m.push anagram if a != @word \\u0026\\u0026 a.chars.sort == @letters\\n    end\\n    return match\\n  end  \\n  \\nend"}
156	34	e3db9139ed686056161be27e	superseded	ruby	anagram	\N	\N	0	2	141	2015-12-31 06:22:11	2015-12-31 06:22:11	{"anagram.rb":"class Anagram\\n\\n  def initialize(word)\\n    @word = word.downcase\\n    @letters = @word.chars.sort\\n  end\\n  \\n  def match(anagrams)\\n    match = Array.new\\n    anagrams.each do |anagram|\\n      a = anagram.downcase\\n      if a != @word \\u0026\\u0026 a.chars.sort == @letters\\n        match.push anagram\\n      end\\n    end\\n    return match\\n  end  \\n  \\nend"}
157	34	e5b18d1a23e2147cdfe74a23	pending	lua	hello-world	\N	\N	0	1	142	2015-11-20 17:58:27	2015-11-20 17:58:27	{"hello_world.lua":"local hello_world = {}\\n\\nfunction hello_world.hello(name)\\n  if not name then\\n    name = \\"world\\"\\n  end\\n  return \\"Hello, \\" .. name .. \\"!\\"\\nend\\n\\nreturn hello_world"}
158	34	aac06d5976b4aca48632cb0f	hibernating	ruby	hamming	\N	\N	0	1	144	2015-11-11 05:54:17	2015-11-11 05:54:17	{"hamming.rb":"class Hamming\\n  def self.compute(first_strand, second_strand)\\n    useful_strands(first_strand.split(''), second_strand.split('')).\\n      map{|v| v[0] == v[1]}.\\n      select {|x| x == false}.\\n      count\\n  end\\n\\n  private\\n\\n  def self.useful_strands(a, b)\\n    maxlen = [a.length, b.length].min\\n\\n    a.take(maxlen).zip(b.take(maxlen))\\n  end\\n\\nend"}
191	27	461ce70033f4c9c5a337edf8	\N	scala	bob	\N	\N	0	1	185	2015-08-18 03:06:59	2015-08-18 03:06:59	{"src/main/scala-2.11/Bob.scala":"import scala.language.postfixOps\\n\\n/**\\n  * @author edafinov\\n  */\\nclass Bob {\\n\\n  private implicit def extendedBoolean(a : Boolean) = new {\\n    def implies(b : =\\u003e Boolean) = {\\n      !a || b\\n    }\\n  }\\n\\n  def hey(phrase: String): String =\\n    phrase match {\\n      case silence if silence.trim isEmpty =\\u003e \\"Fine. Be that way!\\"\\n      case shouting\\n        if (shouting exists(character =\\u003e character.isLetter)) \\u0026\\u0026\\n           (shouting forall( character =\\u003e character.isLetter implies character.isUpper )) =\\u003e \\"Whoa, chill out!\\"\\n      case question if question.last == '?' =\\u003e \\"Sure.\\"\\n      case _ =\\u003e \\"Whatever.\\"\\n    }\\n\\n}"}
159	34	704669f1a5b41d790b8e4b67	pending	csharp	bob	\N	\N	0	1	146	2015-11-09 11:33:45	2015-11-09 11:33:45	{"Bob.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace ExercismCSharp.bob\\r\\n{\\r\\n    class Bob\\r\\n    {\\r\\n        public static bool isAllUpper (string sentence)\\r\\n        {\\r\\n            for (int i = 0; i \\u003c sentence.Length; i++)\\r\\n            {\\r\\n                if (Char.IsLetter(sentence[i]) \\u0026\\u0026 !Char.IsUpper(sentence[i]))\\r\\n                {\\r\\n                    return false;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        public static bool isAllDigit (string sentence)\\r\\n        {\\r\\n            for (int i = 0; i \\u003c sentence.Length; i++)\\r\\n            {\\r\\n                if (Char.IsLetter(sentence[i]))\\r\\n                    return false;\\r\\n            }\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        public string Hey(string words)\\r\\n        {\\r\\n            if (isAllUpper(words) \\u0026\\u0026 !isAllDigit(words)) //check if all characters are upper case and not all numbers\\r\\n                return \\"Whoa, chill out!\\";\\r\\n\\r\\n            if (words.EndsWith(\\"?\\"))\\r\\n                return \\"Sure.\\";\\r\\n\\r\\n            if (String.IsNullOrWhiteSpace(words))\\r\\n                return \\"Fine. Be that way!\\";\\r\\n\\r\\n            else\\r\\n                return \\"Whatever.\\";\\r\\n        }\\r\\n    }\\r\\n}\\r"}
160	16	c57016ff0e67c2a94e9a3cc1	\N	php	gigasecond	\N	\N	0	1	148	2015-07-13 22:46:09	2015-07-13 22:46:09	{"gigasecond.php":"\\u003c?php\\n\\nfunction from($date)\\n{\\n    return $date-\\u003eadd(new DateInterval(\\"PT1000000000S\\"));\\n}"}
161	16	8aa97104330b3afc4416fb3a	\N	python	grains	\N	\N	0	1	152	2015-10-24 01:12:15	2015-10-24 01:12:15	{"grains.py":"def on_square(num):\\n    return 2**(num-1)\\n\\ndef total_after(num):\\n    return on_square(num)*2 -1"}
162	18	c9e6fa9d9d8a5015cbd9b84c	\N	ruby	robot-name	\N	\N	0	1	157	2015-09-23 06:47:05	2015-09-23 06:47:05	{"robot_name.rb":"class Robot\\n\\n  LETTERS = [*('A'..'Z')]\\n  NUMBERS = [*(0..9)]\\n\\n  @@robots = []\\n\\n  attr_reader :name\\n\\n  def initialize\\n    @name = generate_name\\n    register_name\\n  end\\n\\n  def reset\\n    @name = generate_name\\n    register_name\\n  end\\n\\n  private\\n\\n  def generate_name\\n    LETTERS.sample(2).join + NUMBERS.sample(3).join\\n  end\\n\\n  def register_name\\n    raise if @@robots.include?(@name)\\n    @@robots \\u003c\\u003c @name\\n  end\\nend"}
163	18	51c1d82456ab4ff321146712	superseded	ruby	difference-of-squares	\N	\N	0	1	158	2015-09-23 12:51:40	2015-09-23 12:51:40	{"difference_of_squares.rb":"class Squares\\n  def initialize val\\n    @val = val\\n  end\\n\\n  def square_of_sums\\n    # Standard formula for \\\\Sigma_{i = 1}^{i = n} i : n * (n+1) / 2\\n    sums = @val * (@val + 1) / 2\\n    sums * sums\\n  end\\n\\n  def sum_of_squares\\n    # Standard formula for \\\\Sigma_{i = 1}^{i = n} i^2 : n * (n+1) * (2n+1) / 2\\n    @val * (@val + 1) * (@val * 2 + 1) / 6\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
164	18	e9e2d3d2bcb7971e7ba5d0e1	done	ruby	difference-of-squares	\N	\N	0	2	158	2015-12-04 09:25:59	2015-12-04 09:25:59	{"difference_of_squares.rb":"class Squares\\n  attr_reader :n\\n\\n  def initialize n\\n    @n = n\\n  end\\n\\n  def square_of_sums\\n    # Standard formula for \\\\Sigma_{i = 1}^{i = n} i : n * (n+1) / 2\\n    sums = n * (n+1) / 2\\n    sums * sums\\n  end\\n\\n  def sum_of_squares\\n    # Standard formula for \\\\Sigma_{i = 1}^{i = n} i^2 : n * (n+1) * (2n+1) / 2\\n    n * (n+1) * (n*2 + 1) / 6\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\nend"}
165	18	74ed659c53ec45154a6e4932	pending	python	secret-handshake	\N	\N	0	1	159	2015-10-06 02:52:33	2015-10-06 02:52:33	{"handshake.py":"EVENTS = ('wink',\\n          'double blink',\\n          'close your eyes',\\n          'jump')\\n\\n\\ndef handshake(number):\\n    if isinstance(number, str):\\n        try:\\n            number = int(number, base=2)\\n        except:\\n            number = 0\\n\\n    if number \\u003c= 0:\\n        return []\\n\\n    result = []\\n    for i, event in enumerate(EVENTS):\\n        if number \\u0026 (1 \\u003c\\u003c i):\\n            result.append(event)\\n    if number \\u0026 0b10000:\\n        result.reverse()\\n\\n    return result\\n\\n\\ndef code(events):\\n    number = 0\\n    for event in events:\\n        try:\\n            number += (1 \\u003c\\u003c EVENTS.index(event))\\n        except ValueError:\\n            return \\"0\\"\\n\\n    # test whether the order of events is reversed\\n    if len(events) \\u003e= 2 and EVENTS.index(events[0]) \\u003e EVENTS.index(events[1]):\\n        number += 0b10000\\n\\n    return bin(number)[2:]"}
166	18	3324b2a050cae3bc0f1d86ae	done	ruby	nucleotide-count	\N	\N	0	2	160	2015-10-24 20:46:48	2015-10-24 20:46:48	{"nucleotide-count.rb":"class DNA\\n  attr_reader :nucleotides\\n\\n  DNA_NUCLEOTIDES = [ 'A', 'C', 'G', 'T' ]\\n \\n  def initialize(nucleotides)\\n    @nucleotides = normalized_input(nucleotides)\\n    validate_as_dna(@nucleotides)\\n    @dna_nucleotide_count_result_default = {'A' =\\u003e 0, 'T' =\\u003e 0, 'C' =\\u003e 0, 'G' =\\u003e 0} \\n  end\\n\\n  def count(nucleotide)\\n    Nucleotide.count_single(nucleotide, nucleotides)\\n  end\\n\\n  def nucleotide_counts\\n    nucleotides.each_with_object(@dna_nucleotide_count_result_default) do |nucleotide, count_results|\\n      count_results[nucleotide] = count(nucleotide) unless count_results.key? [nucleotide] \\n    end\\n  end\\n\\nprivate\\n\\n  def normalized_input(nucleotides)\\n    nucleotides.split('').sort\\n  end\\n\\n  def validate_as_dna(candidates)\\n    candidates.uniq.each do |possible_nucleotide|\\n      unless DNA_NUCLEOTIDES.include? possible_nucleotide\\n        raise ArgumentError\\n      end\\n    end\\n  end\\n\\nend\\n\\nclass Nucleotide\\n\\n  NUCLEOTIDES = [ 'A', 'C', 'G', 'T', 'U' ] \\n\\n  def self.count_single(nucleotide, nucleotides)\\n    if validate_as_nucleotide(nucleotide)\\n      nucleotides.select {|n| n.eql? nucleotide}.count\\n    else\\n      raise ArgumentError\\n    end\\n  end\\n\\nprivate\\n\\n  def self.validate_as_nucleotide(candidate)\\n    NUCLEOTIDES.include? candidate \\n  end\\n\\nend"}
167	18	982eb560cfd0d5d3896ee680	superseded	ruby	nucleotide-count	\N	\N	0	1	160	2015-12-05 11:38:05	2015-12-05 11:38:05	{"nucleotide-count.rb":"class DNA\\n  attr_reader :nucleotides\\n\\n  DNA_NUCLEOTIDES = [ 'A', 'C', 'G', 'T' ]\\n \\n  def initialize(nucleotides)\\n    @nucleotides = nucleotides.split('').sort\\n    validate_as_dna(@nucleotides)\\n    @dna_nucleotide_count_result_default = {'A' =\\u003e 0, 'T' =\\u003e 0, 'C' =\\u003e 0, 'G' =\\u003e 0} \\n  end\\n\\n  def count(nucleotide)\\n    Nucleotide.count(nucleotide, nucleotides)\\n  end\\n\\n  def nucleotide_counts\\n    nucleotides.each_with_object(@dna_nucleotide_count_result_default) do |nucleotide, count_results|\\n      unless count_results.has_key? [nucleotide] \\n        count_results[nucleotide] = count(nucleotide)\\n      end\\n    end\\n  end\\n\\n  def validate_as_dna(candidates)\\n    candidates.uniq.each do |possible_nucleotide|\\n      unless DNA_NUCLEOTIDES.include? possible_nucleotide\\n        raise ArgumentError\\n      end\\n    end\\n  end\\n\\nend\\n\\nclass Nucleotide\\n\\n  NUCLEOTIDES = [ 'A', 'C', 'G', 'T', 'U' ] \\n\\n  def self.count(nucleotide, nucleotides)\\n    if validate_as_nucleotide(nucleotide)\\n      nucleotides.select {|n| n.eql? nucleotide}.count\\n    else\\n      raise ArgumentError\\n    end\\n  end\\n\\n  def self.validate_as_nucleotide(candidate)\\n    NUCLEOTIDES.include? candidate \\n  end\\n\\nend"}
168	18	78e3d80eb5b3561256325a19	pending	csharp	difference-of-squares	\N	\N	0	4	164	2015-10-01 04:31:02	2015-10-01 04:31:02	{"\\\\csharp\\\\difference-of-squares\\\\difference-of-squares\\\\DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Diagnostics;\\r\\nusing System.Diagnostics.CodeAnalysis;\\r\\nusing System.Linq;\\r\\nusing NUnit.Framework;\\r\\n\\r\\n/// \\u003csummary\\u003e\\r\\n/// The squares.\\r\\n/// \\u003c/summary\\u003e\\r\\npublic class Squares\\r\\n{\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The _range.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    private readonly IEnumerable\\u003clong\\u003e _range;\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// Initializes a new instance of the \\u003csee cref=\\"Squares\\"/\\u003e class.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003cparam name=\\"size\\"\\u003e\\r\\n    /// The size.\\r\\n    /// \\u003c/param\\u003e\\r\\n    /// \\u003cexception cref=\\"ArgumentException\\"\\u003e\\r\\n    /// \\u003c/exception\\u003e\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0) throw new ArgumentException();\\r\\n\\r\\n        //_range = Iota(1L, size);\\r\\n        _range = Enumerable.Range(1, size).Select(i=\\u003e(long)i);\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The square of sums.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    public long SquareOfSums()\\r\\n    {\\r\\n        // return (long)Math.Pow(_range.Sum(), 2);\\r\\n        // avoids floating point arithmetic.\\r\\n        var sum= _range.Sum();\\r\\n        return sum * sum;\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The sum of squares.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    public long SumOfSquares()\\r\\n    {\\r\\n        return _range.Sum(i =\\u003e i*i);\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The difference of squares.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003cparam name=\\"version\\"\\u003e\\r\\n    /// The version.\\r\\n    /// \\u003c/param\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    public long DifferenceOfSquares(int version = 0)\\r\\n    {\\r\\n        switch (version)\\r\\n        {\\r\\n            case 0:\\r\\n                return DifferenceOfSquaresImplTwice();\\r\\n            case 1:\\r\\n                return DifferenceOfSquaresImplOnce();\\r\\n            case 2:\\r\\n                return DifferenceOfSquaresImplLinq();\\r\\n            case 3:\\r\\n                return DifferenceOfSquaresImplFast();\\r\\n\\r\\n        }\\r\\n        return 0L;\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The difference of squares impl fast.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    [SuppressMessage(\\"StyleCop.CSharp.DocumentationRules\\", \\"SA1650:ElementDocumentationMustBeSpelledCorrectly\\", Justification = \\"Reviewed. Suppression is OK here.\\")]\\r\\n    private long DifferenceOfSquaresImplFast()\\r\\n    {\\r\\n        if (!_range.Any()) return 0;\\r\\n        var n = _range.Last();\\r\\n        var squareOfSum = ((n * n) * (n + 1L) * (n + 1L))/4L;\\r\\n        var sumOfSquare = (2L*(n * n * n) + 3L*(n * n) + n) / 6L;\\r\\n        return squareOfSum - sumOfSquare;\\r\\n    }\\r\\n\\r\\n    /// \\u003csummary\\u003e\\r\\n    /// The difference of squares impl twice.\\r\\n    /// \\u003c/summary\\u003e\\r\\n    /// \\u003creturns\\u003e\\r\\n    /// The \\u003csee cref=\\"long\\"/\\u003e.\\r\\n    /// \\u003c/returns\\u003e\\r\\n    private long DifferenceOfSquaresImplTwice()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();    \\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplOnce()\\r\\n    {\\r\\n        var sumOfSquares = 0L;\\r\\n        var sum = 0L;\\r\\n        foreach (var i in _range)\\r\\n        {\\r\\n            sumOfSquares += i * i;\\r\\n            sum += i;\\r\\n        }\\r\\n        return (sum*sum) - sumOfSquares;\\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplLinq()\\r\\n    {\\r\\n        return _range.Aggregate(new[] {0L, 0L}, \\r\\n            (a, i) =\\u003e\\r\\n            {\\r\\n                a[0] += i*i;\\r\\n                a[1] += i;\\r\\n                return a;\\r\\n            }\\r\\n            ,a=\\u003ea[1]*a[1]-a[0]);\\r\\n    }\\r\\n}\\r\\n\\r\\ninternal class Test\\r\\n{\\r\\n    private static object[] _version = {0, 1,2,3};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_to_100(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(100).DifferenceOfSquares(v), Is.EqualTo(25164150));\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_0(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(0).DifferenceOfSquares(v), Is.EqualTo(0));\\r\\n    }\\r\\n\\r\\n\\r\\n    private static object[] _sizes = {100, 1000, 10000, 20000, 30000, 40000};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_twice_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 0);\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_fast_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 3);\\r\\n    }\\r\\n\\r\\n    private void Versions_to_size_Impl(int size, int version)\\r\\n    {\\r\\n        var squares = new Squares(size);\\r\\n        var squareOfSums = squares.SquareOfSums();\\r\\n        var sumOfSquares = squares.SumOfSquares();\\r\\n        var expected = squareOfSums - sumOfSquares;\\r\\n        Assert.That(squares.DifferenceOfSquares(version), Is.EqualTo(expected));\\r\\n    }\\r\\n\\r\\n    [Test]\\r\\n    public void Performance_of_versions()\\r\\n    {\\r\\n        var squares = new Squares(40000);\\r\\n        var watch = new Stopwatch();\\r\\n        foreach (int v in _version)\\r\\n        {\\r\\n            var average = new List\\u003clong\\u003e();\\r\\n            foreach(var i in Enumerable.Range(1,100))\\r\\n            {\\r\\n                watch.Reset();\\r\\n                watch.Start();\\r\\n                var actual = squares.DifferenceOfSquares(v);\\r\\n                watch.Stop();\\r\\n                average.Add(watch.ElapsedTicks);\\r\\n            }\\r\\n            Console.WriteLine(\\"version= \\" + v + \\", time= \\" + average.Average());\\r\\n        }\\r\\n    }\\r\\n}"}
169	18	b4900e0629f72fb65f76ddb6	superseded	csharp	difference-of-squares	\N	\N	0	3	164	2015-10-21 03:48:56	2015-10-21 03:48:56	{"DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Diagnostics;\\r\\nusing System.Linq;\\r\\nusing NUnit.Framework;\\r\\n\\r\\npublic class Squares\\r\\n{\\r\\n    private readonly IEnumerable\\u003clong\\u003e _range;\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0)\\r\\n            throw new ArgumentException();\\r\\n\\r\\n        _range = Iota(1L, size);\\r\\n    }\\r\\n\\r\\n    public long SquareOfSums()\\r\\n    {\\r\\n        return (long)Math.Pow(_range.Sum(), 2);\\r\\n    }\\r\\n\\r\\n    public long SumOfSquares()\\r\\n    {\\r\\n        return _range.Sum(i =\\u003e i*i);\\r\\n    }\\r\\n\\r\\n    public long DifferenceOfSquares(int version = 0)\\r\\n    {\\r\\n        switch (version)\\r\\n        {\\r\\n            case 0:\\r\\n                return DifferenceOfSquaresImplTwice();\\r\\n            case 1:\\r\\n                return DifferenceOfSquaresImplOnce();\\r\\n            case 2:\\r\\n                return DifferenceOfSquaresImplLinq();\\r\\n        }\\r\\n        return 0L;\\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplTwice()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();    \\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplOnce()\\r\\n    {\\r\\n        var sumOfSquares = 0L;\\r\\n        var sum = 0L;\\r\\n        foreach (var i in _range)\\r\\n        {\\r\\n            sumOfSquares += i * i;\\r\\n            sum += i;\\r\\n        }\\r\\n        return (sum*sum) - sumOfSquares;\\r\\n    }\\r\\n\\r\\n    private long DifferenceOfSquaresImplLinq()\\r\\n    {\\r\\n        var pair = _range.Aggregate(new[] {0L, 0L}, (a, i) =\\u003e\\r\\n        {\\r\\n            a[0] += i*i;\\r\\n            a[1] += i;\\r\\n            return a;\\r\\n        });\\r\\n        return pair[1]*pair[1] - pair[0];\\r\\n    }\\r\\n\\r\\n    private static IEnumerable\\u003clong\\u003e Iota(long s, long e)\\r\\n    {\\r\\n        while (s\\u003c=e) yield return s++;\\r\\n    }\\r\\n}\\r\\n\\r\\ninternal class Test\\r\\n{\\r\\n    private static object[] _version = {0, 1,2};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_to_100(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(100).DifferenceOfSquares(v), Is.EqualTo(25164150));\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_version\\")]\\r\\n    public void Test_difference_of_sums_0(int v)\\r\\n    {\\r\\n        Assert.That(new Squares(0).DifferenceOfSquares(v), Is.EqualTo(0));\\r\\n    }\\r\\n\\r\\n\\r\\n    private static object[] _sizes = {100, 1000, 10000, 20000, 30000, 40000};\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_twice_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 0);\\r\\n    }\\r\\n\\r\\n    [Test, TestCaseSource(\\"_sizes\\")]\\r\\n    public void Versions_once_to_size(int size)\\r\\n    {\\r\\n        Versions_to_size_Impl(size, 1);\\r\\n    }\\r\\n\\r\\n    private void Versions_to_size_Impl(int size, int version)\\r\\n    {\\r\\n        var squares = new Squares(size);\\r\\n        var squareOfSums = squares.SquareOfSums();\\r\\n        var sumOfSquares = squares.SumOfSquares();\\r\\n        var expected = squareOfSums - sumOfSquares;\\r\\n        Assert.That(squares.DifferenceOfSquares(version), Is.EqualTo(expected));\\r\\n    }\\r\\n\\r\\n    [Test]\\r\\n    public void Performance_of_versions()\\r\\n    {\\r\\n        var squares = new Squares(40000);\\r\\n        var watch = new Stopwatch();\\r\\n        foreach (int v in _version)\\r\\n        {\\r\\n            watch.Reset();\\r\\n            watch.Start();\\r\\n            var actual = squares.DifferenceOfSquares(v);\\r\\n            watch.Stop();\\r\\n            Console.WriteLine(\\"version= \\" + v + \\", time= \\" + watch.Elapsed);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r"}
170	18	fc55c45a63c4744a3a30dd58	superseded	csharp	difference-of-squares	\N	\N	0	1	164	2015-11-21 00:58:12	2015-11-21 00:58:12	{"DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class Squares\\r\\n{\\r\\n    private readonly List\\u003cint\\u003e _range;\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0)\\r\\n            throw new ArgumentException();\\r\\n\\r\\n        _range = Enumerable.Range(1, size).ToList();\\r\\n    }\\r\\n\\r\\n    public int SquareOfSums()\\r\\n    {\\r\\n        return Enumerable.Repeat(_range.Sum(), 2)\\r\\n                         .Aggregate((i, prod) =\\u003e i*prod);\\r\\n    }\\r\\n\\r\\n    public int SumOfSquares()\\r\\n    {\\r\\n        return _range.Select(i =\\u003e i*i)\\r\\n                     .Sum();\\r\\n    }\\r\\n\\r\\n    public int DifferenceOfSquares()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();\\r\\n    }\\r\\n}\\r\\n\\r"}
171	18	9f6141475484d6c1846f521a	superseded	csharp	difference-of-squares	\N	\N	0	2	164	2015-11-22 13:08:38	2015-11-22 13:08:38	{"DifferenceOfSquares.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Linq;\\r\\n\\r\\npublic class Squares\\r\\n{\\r\\n    private readonly List\\u003cint\\u003e _range;\\r\\n    public Squares(int size)\\r\\n    {\\r\\n        if (size \\u003c 0)\\r\\n            throw new ArgumentException();\\r\\n\\r\\n        _range = Enumerable.Range(1, size).ToList();\\r\\n    }\\r\\n\\r\\n    public int SquareOfSums()\\r\\n    {\\r\\n        return (int)Math.Pow(_range.Sum(), 2);\\r\\n    }\\r\\n\\r\\n    public int SumOfSquares()\\r\\n    {\\r\\n        return _range.Select(i =\\u003e i*i)\\r\\n                     .Sum();\\r\\n    }\\r\\n\\r\\n    public int DifferenceOfSquares()\\r\\n    {\\r\\n        return SquareOfSums() - SumOfSquares();\\r\\n    }\\r\\n}\\r\\n\\r"}
172	18	a8380bbd591f351c03ca5212	hibernating	ruby	hamming	\N	\N	0	1	166	2015-11-04 14:32:00	2015-11-04 14:32:00	{"hamming.rb":"class Hamming\\n  def self.compute(first_strand, second_strand)\\n    useful_strands(first_strand.split(''), second_strand.split('')).\\n      map{|v| v[0] == v[1]}.\\n      select {|x| x == false}.\\n      count\\n  end\\n\\n  private\\n\\n  def self.useful_strands(a, b)\\n    maxlen = [a.length, b.length].min\\n\\n    a.take(maxlen).zip(b.take(maxlen))\\n  end\\n\\nend"}
173	24	61b87e2a858037b65c8f5634	hibernating	ruby	grains	\N	\N	0	1	172	2015-11-05 23:52:43	2015-11-05 23:52:43	{"grains.rb":"class Grains\\n\\n  def square(num)\\n    (1..num).inject{|acc, num| acc * 2 }\\n  end\\n\\n  def total\\n    18446744073709551615\\n  end\\n\\nend"}
174	24	839326fd04389dd4f4ea6b6e	pending	ruby	phone-number	\N	\N	0	1	174	2015-10-22 21:09:22	2015-10-22 21:09:22	{"/ruby/phone-number/phone_number.rb":"class PhoneNumber\\n  def initialize(num_string)\\n    @num_string = num_string\\n  end\\n\\n  def number\\n    return '0000000000' if invalid?\\n    return digits_string[1..-1] if valid_11_digit?\\n    digits_string\\n  end\\n\\n  def to_s\\n    \\"(#{area_code}) #{prefix}-#{line_number}\\"\\n  end\\n\\n  def area_code\\n    number[0..2]\\n  end\\n\\n  def prefix\\n    number[3..5]\\n  end\\n\\n  def line_number\\n    number[6..9]\\n  end\\n\\n  private\\n\\n    def digits_string\\n      @num_string.gsub(/\\\\D/, '')\\n    end\\n\\n    def invalid?\\n      contains_letters? || too_short? || too_long?\\n    end\\n\\n    def contains_letters?\\n      @num_string =~ /[a-zA-Z]/\\n    end\\n\\n    def too_short?\\n      digits_string.length \\u003c 10\\n    end\\n\\n    def too_long?\\n      digits_string.length \\u003e 10 unless valid_11_digit?\\n    end\\n\\n    def valid_11_digit?\\n      digits_string.length == 11 \\u0026\\u0026 digits_string.start_with?('1')\\n    end\\nend"}
175	24	8c6dcf1693aaaf3670c2ea08	hibernating	haskell	rna-transcription	\N	\N	0	1	176	2015-11-05 18:59:51	2015-11-05 18:59:51	{"DNA.hs":"module DNA where\\n\\ntoRNA :: String -\\u003e String\\ntoRNA []     = []\\ntoRNA (c:cs) = trans c : toRNA cs\\n    where trans 'G' = 'C'\\n          trans 'C' = 'G'\\n          trans 'T' = 'A'\\n          trans 'A' = 'U'\\n          trans _   = undefined"}
176	42	0b14ba1f237fe671dfcb17ab	\N	clojure	rna-transcription	\N	\N	0	2	177	2015-08-26 08:13:02	2015-08-26 08:13:02	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(defn convert-base\\n  [base]\\n  (case base\\n    \\\\C \\"G\\"\\n    \\\\G \\"C\\"\\n    \\\\A \\"U\\"\\n    \\\\T \\"A\\"\\n    (throw (AssertionError.))))\\n\\n(defn to-rna\\n  [dna]\\n  (apply str (map convert-base dna)))"}
177	42	305c6b1d8c8a10b9f215c827	\N	clojure	rna-transcription	\N	\N	0	1	177	2015-10-03 07:01:44	2015-10-03 07:01:44	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def *nucleobase* #\\"[ACGT]*\\")\\n\\n(defn valid?\\n  [dna]\\n  (if (re-matches *nucleobase* dna)\\n    true\\n    (throw (AssertionError.))))\\n\\n(defn convert-base\\n  [base]\\n  (case base\\n    \\\\C \\"G\\"\\n    \\\\G \\"C\\"\\n    \\\\A \\"U\\"\\n    \\\\T \\"A\\"))\\n\\n(defn to-rna\\n  [dna]\\n  (valid? dna)\\n  (apply str (map convert-base dna)))"}
178	42	506e4649f325854984226752	\N	cpp	bob	\N	\N	0	3	178	2015-06-05 05:35:07	2015-06-05 05:35:07	{"bob.cpp":"#include \\"bob.h\\"\\n#include \\u003cboost/algorithm/string.hpp\\u003e\\n#include \\u003cboost/algorithm/cxx11/none_of.hpp\\u003e\\n#include \\u003cboost/algorithm/cxx11/any_of.hpp\\u003e\\n\\nusing namespace boost::algorithm;\\nusing namespace std;\\n\\nbool is_shouting(const string\\u0026 s) {\\n    return any_of(s, is_from_range('A', 'Z'))\\n        \\u0026\\u0026 none_of(s, is_from_range('a', 'z'));\\n}\\n\\nbool is_question(const string\\u0026 s) {\\n    return s.back() == '?';\\n}\\n\\nconst string bob::hey(const string\\u0026 s) {\\n    const string msg = trim_right_copy(s);\\n    if (is_shouting(msg))\\n        return \\"Whoa, chill out!\\";\\n    if (is_question(msg))\\n        return \\"Sure.\\";\\n    if (msg.empty())\\n        return \\"Fine. Be that way!\\";\\n    return \\"Whatever.\\";\\n}","bob.h":"#pragma once\\n\\n#include \\u003cstring\\u003e\\n\\nnamespace bob {\\n    const std::string hey(const std::string\\u0026 msg);\\n}"}
192	27	fdb7e7760a6e4a06e69b28ef	pending	javascript	word-count	\N	\N	0	1	186	2015-09-17 20:27:30	2015-09-17 20:27:30	{"word-count.js":"function words(words)\\r\\n{\\r\\n\\tvar wordsArr = words.split(/ |\\\\n/);\\r\\n\\tvar countedWords = {};\\r\\n\\r\\n\\tfor(var x = 0; x \\u003c wordsArr.length; x++)\\r\\n\\t{\\r\\n\\t\\tif(!countedWords[wordsArr[x]])\\r\\n\\t\\t{\\r\\n\\t\\t\\tcountedWords[wordsArr[x]] = 1;\\r\\n\\t\\t}\\r\\n\\t\\telse\\r\\n\\t\\t{\\r\\n\\t\\t\\tcountedWords[wordsArr[x]]++;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn countedWords;\\r\\n}"}
179	42	556fcfdb864d83e11d5b2313	\N	cpp	bob	\N	\N	0	1	178	2015-06-12 20:21:19	2015-06-12 20:21:19	{"bob.cpp":"#include \\"bob.h\\"\\n#include \\u003calgorithm\\u003e\\n\\nusing namespace std;\\n\\nbool is_shouting(const string\\u0026 s) {\\n    bool was_upper = false;\\n    bool was_lower = false;\\n    for (char c: s) {\\n        if (islower(c)) was_lower = true;\\n        if (isupper(c)) was_upper = true;\\n    }\\n    return was_upper \\u0026\\u0026 !was_lower;\\n}\\n\\nbool is_question(const string\\u0026 s) {\\n    return s[s.length() - 1] == '?';\\n}\\n\\nstring rtrim(const string\\u0026 s) {\\n    ssize_t pos = s.length() - 1;\\n\\n    while (pos \\u003e= 0 \\u0026\\u0026 isspace(s[pos]))\\n        --pos;\\n    return s.substr(0, pos + 1);\\n}\\n\\nconst string bob::hey(const string\\u0026 s) {\\n    string msg = rtrim(s);\\n    if (is_shouting(msg))\\n        return \\"Whoa, chill out!\\";\\n    if (is_question(msg))\\n        return \\"Sure.\\";\\n    if (msg.empty())\\n        return \\"Fine. Be that way!\\";\\n    return \\"Whatever.\\";\\n}","bob.h":"#pragma once\\n\\n#include \\u003cstring\\u003e\\n\\nnamespace bob {\\n    const std::string hey(const std::string\\u0026 msg);\\n}"}
180	42	dc6ff05c1aa848b18aff68a6	\N	cpp	bob	\N	\N	0	2	178	2015-06-15 04:10:11	2015-06-15 04:10:11	{"bob.cpp":"#include \\"bob.h\\"\\n#include \\u003cboost/algorithm/string.hpp\\u003e\\n#include \\u003cboost/algorithm/cxx11/none_of.hpp\\u003e\\n#include \\u003cboost/algorithm/cxx11/any_of.hpp\\u003e\\n\\nusing namespace boost::algorithm;\\nusing namespace std;\\n\\nbool is_shouting(const string\\u0026 s) {\\n    return any_of(s, is_from_range('A', 'Z'))\\n        \\u0026\\u0026 none_of(s, is_from_range('a', 'z'));\\n}\\n\\nbool is_question(const string\\u0026 s) {\\n    return s[s.length() - 1] == '?';\\n}\\n\\nconst string bob::hey(const string\\u0026 s) {\\n    const string msg = trim_right_copy(s);\\n    if (is_shouting(msg))\\n        return \\"Whoa, chill out!\\";\\n    if (is_question(msg))\\n        return \\"Sure.\\";\\n    if (msg.empty())\\n        return \\"Fine. Be that way!\\";\\n    return \\"Whatever.\\";\\n}","bob.h":"#pragma once\\n\\n#include \\u003cstring\\u003e\\n\\nnamespace bob {\\n    const std::string hey(const std::string\\u0026 msg);\\n}"}
181	42	6cf5e0343718d33391e466f5	hibernating	haskell	allergies	\N	\N	0	1	179	2015-09-03 13:09:37	2015-09-03 13:09:37	{"/haskell/allergies/Allergies.hs":"module Allergies (Allergen(..), isAllergicTo, allergies) where\\n\\nimport Data.List (foldl')\\nimport Data.Char (intToDigit)\\nimport Numeric (showIntAtBase)\\n\\ndata Allergen = Eggs | Peanuts | Shellfish | Strawberries | Tomatoes | Chocolate | Pollen | Cats deriving (Show, Ord, Eq, Enum)\\n\\nallergenList :: [Allergen]\\nallergenList = [Eggs .. Cats]\\n\\nallergies :: Int -\\u003e [Allergen]\\nallergies n = foldl' (\\\\ acc (a,x) -\\u003e if x == '1' then a : acc else acc) [] zippedAL\\n  where\\n    zippedAL = zip (reverse allergenList) . allergenString $ n `mod` 256\\n\\nallergenString :: Int -\\u003e String\\nallergenString n = if lnAS == lnAL\\n                   then toString\\n                   else replicate (lnAL - lnAS) '0' ++ toString\\n where\\n   toString = showIntAtBase 2 intToDigit n \\"\\"\\n   lnAS = length toString\\n   lnAL = length allergenList\\n\\nisAllergicTo :: Allergen -\\u003e Int -\\u003e Bool\\nisAllergicTo a = elem a . allergies"}
182	27	02430054df73aa9286cd479e	superseded	ruby	word-count	\N	\N	0	5	184	2015-08-30 01:04:13	2015-08-30 01:04:13	{"word-count.rb":"class Counter \\u003c Hash\\n  def add(item)\\n    k = key_for(item)\\n    self[k] = count_for(k) + 1\\n  end\\n  \\n  private\\n  \\n  def count_for(k)\\n    (has_key? k) ? self[k] : 0\\n  end\\n  \\n  def key_for(item)\\n  \\titem.to_s.strip.downcase\\n  end\\nend\\n\\nclass Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    split(@input).each_with_object(Counter.new) { |w, counter| counter.add w }\\n  end\\n\\t\\n  private\\n\\t\\n  def split(input)\\n    input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
183	27	43c201de997412b9a44d17fc	superseded	ruby	word-count	\N	\N	0	1	184	2015-09-04 15:55:37	2015-09-04 15:55:37	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
184	27	264f435a955e9b3e24ac247a	superseded	ruby	word-count	\N	\N	0	3	184	2015-09-10 17:25:34	2015-09-10 17:25:34	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase.to_sym\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
185	27	d6668870f51a7603c20843cb	superseded	ruby	word-count	\N	\N	0	4	184	2015-10-02 08:52:42	2015-10-02 08:52:42	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
186	27	05a930a8c77a0440574b0d78	superseded	ruby	word-count	\N	\N	0	6	184	2015-10-07 09:20:52	2015-10-07 09:20:52	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(counter) { |w, c| c[key_for(w)] += 1 }\\n  end\\n  \\n  private\\n  \\n  def counter\\n    Hash.new {|h,k| h.default = 0}\\n  end\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/[a-zA-Z0-9]+/)\\n  end\\nend"}
187	27	8f1a1be6184d916999c583f2	superseded	ruby	word-count	\N	\N	0	2	184	2015-10-24 16:46:18	2015-10-24 16:46:18	{"word-count.rb":"class Phrase\\n\\tattr_reader :word_count\\n\\n\\tdef initialize(input)\\n\\t\\t@word_count = {}\\n\\t\\textract_words(input).each { |w| update_word_count_with w }\\n\\tend\\n\\t\\n\\tprivate\\n\\t\\n\\tdef extract_words(input)\\n\\t\\tinput.scan(/[a-zA-Z0-9]+/)\\n\\tend\\n\\t\\n\\tdef update_word_count_with(word)\\n\\t\\tkey = word.strip.downcase\\n\\t\\tcount = (@word_count.has_key? key) ? @word_count[key] : 0\\n\\t\\t@word_count[key] = count + 1\\n\\tend\\nend"}
188	27	0f274859966d22fe54b73312	superseded	ruby	word-count	\N	\N	0	7	184	2015-10-28 13:40:29	2015-10-28 13:40:29	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) do |w, c| \\n      c[key_for(w)] += 1 \\n    end\\n  end\\n  \\n  private\\n  \\n  def key_for(word)\\n    word.to_s.strip.downcase\\n  end\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
189	27	05bccacc72a2ec95c966ab5e	superseded	ruby	word-count	\N	\N	0	8	184	2015-11-16 15:58:52	2015-11-16 15:58:52	{"word-count.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/\\\\w+/)\\n  end\\nend"}
190	27	21d33b696be9d5352856e3f1	done	ruby	word-count	\N	\N	0	9	184	2015-11-28 03:47:04	2015-11-28 03:47:04	{"phrase.rb":"class Phrase\\n  def initialize(input)\\n    @input = input.downcase\\n  end\\n  \\n  def word_count\\n    words.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\\n  end\\n  \\n  private\\n  \\n  def words\\n    @input.scan(/[\\\\w']+/)\\n  end\\nend"}
195	27	bc4e506fa17de4ef181e97b3	\N	clojure	rna-transcription	\N	\N	0	1	190	2015-09-28 02:37:42	2015-09-28 02:37:42	{"rna_transcription.clj":"(ns rna-transcription)\\n\\n(def *nucleobase* #\\"[ACGT]*\\")\\n\\n(defn valid?\\n  [dna]\\n  (if (re-matches *nucleobase* dna)\\n    true\\n    (throw (AssertionError.))))\\n\\n(defn convert-base\\n  [base]\\n  (case base\\n    \\\\C \\"G\\"\\n    \\\\G \\"C\\"\\n    \\\\A \\"U\\"\\n    \\\\T \\"A\\"))\\n\\n(defn to-rna\\n  [dna]\\n  (valid? dna)\\n  (apply str (map convert-base dna)))"}
196	27	0d38b4dbb102b2dfb10d024b	done	ruby	rna-transcription	\N	\N	0	1	192	2015-11-26 10:58:57	2015-11-26 10:58:57	{"/ruby/rna-transcription/complement.rb":"class Complement\\n  def self.of_dna(sequence)\\n    find_complement(sequence, rna_sequence, dna_sequence)\\n  end\\n\\n  def self.of_rna(sequence)\\n    find_complement(sequence, dna_sequence, rna_sequence)\\n  end\\n\\n  def self.find_complement(sequence, seqA, seqB)\\n    sequence.chars.inject(\\"\\") do |complement, elem|\\n      complement += seqA[seqB.index(elem)]\\n    end\\n  end\\n\\n  private\\n  def self.dna_sequence\\n    %w[G C T A]\\n  end\\n\\n  def self.rna_sequence\\n    %w[C G A U]\\n  end\\nend"}
197	27	3180fac26d9b5906a9075a05	\N	php	gigasecond	\N	\N	0	1	195	2015-09-20 07:03:49	2015-09-20 07:03:49	{"gigasecond.php":"\\u003c?php\\n\\nfunction from($date)\\n{\\n    return $date-\\u003eadd(new DateInterval(\\"PT1000000000S\\"));\\n}"}
198	27	b4084e36bac64c8c300e53f0	pending	haskell	triangle	\N	\N	0	1	196	2015-08-14 10:37:58	2015-08-14 10:37:58	{"Triangle.hs":"module Triangle (TriangleType(..), triangleType) where\\n\\ndata TriangleType = \\n    Equilateral |\\n    Isosceles |\\n    Scalene |\\n    Illogical\\n    deriving (Show, Eq)\\n\\nisIllogical ::  Int -\\u003e Int -\\u003e Int -\\u003e Bool\\nisIllogical a b c = \\n    (a + b) \\u003c= c ||\\n    (a + c) \\u003c= b ||\\n    (b + c) \\u003c= a\\n\\n-- possible improvement: collapse the below two functions into one that takes a boolean combination function\\nisEquilateral :: Int -\\u003e Int -\\u003e Int -\\u003e Bool\\nisEquilateral a b c =\\n    a == b \\u0026\\u0026\\n    a == c \\u0026\\u0026\\n    b == c\\n\\nisIsosceles :: Int -\\u003e Int -\\u003e Int -\\u003e Bool\\nisIsosceles a b c =\\n    a == b ||\\n    a == c ||\\n    b == c\\n\\n\\ntriangleType :: Int -\\u003e Int -\\u003e Int -\\u003e TriangleType\\ntriangleType a b c \\n    | isIllogical a b c = Illogical\\n    | isEquilateral a b c = Equilateral\\n    | isIsosceles a b c = Isosceles\\n    | otherwise = Scalene"}
199	45	bd41a60afb6481f3340b1720	pending	csharp	bob	\N	\N	0	1	199	2015-10-06 07:36:00	2015-10-06 07:36:00	{"Bob.cs":"﻿using System;\\r\\nusing System.Collections.Generic;\\r\\nusing System.Text;\\r\\nusing System.Threading.Tasks;\\r\\n\\r\\nnamespace ExercismCSharp.bob\\r\\n{\\r\\n    class Bob\\r\\n    {\\r\\n        public static bool isAllUpper (string sentence)\\r\\n        {\\r\\n            for (int i = 0; i \\u003c sentence.Length; i++)\\r\\n            {\\r\\n                if (Char.IsLetter(sentence[i]) \\u0026\\u0026 !Char.IsUpper(sentence[i]))\\r\\n                {\\r\\n                    return false;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        public static bool isAllDigit (string sentence)\\r\\n        {\\r\\n            for (int i = 0; i \\u003c sentence.Length; i++)\\r\\n            {\\r\\n                if (Char.IsLetter(sentence[i]))\\r\\n                    return false;\\r\\n            }\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        public string Hey(string words)\\r\\n        {\\r\\n            if (isAllUpper(words) \\u0026\\u0026 !isAllDigit(words)) //check if all characters are upper case and not all numbers\\r\\n                return \\"Whoa, chill out!\\";\\r\\n\\r\\n            if (words.EndsWith(\\"?\\"))\\r\\n                return \\"Sure.\\";\\r\\n\\r\\n            if (String.IsNullOrWhiteSpace(words))\\r\\n                return \\"Fine. Be that way!\\";\\r\\n\\r\\n            else\\r\\n                return \\"Whatever.\\";\\r\\n        }\\r\\n    }\\r\\n}\\r"}
200	45	36a827f97039eaf81332a1bc	superseded	python	bob	\N	\N	0	1	200	2015-10-06 03:05:33	2015-10-06 03:05:33	{"bob.py":"\\r\\ndef hey(statement):\\r\\n    \\r\\n  if (statement.endswith('?') and not statement.isupper()):\\r\\n    return 'Sure.'\\r\\n\\r\\n  elif (statement.isupper()):\\r\\n\\treturn 'Whoa, chill out!'\\t\\r\\n\\r\\n  elif (statement.strip() == ''):\\r\\n\\treturn 'Fine. Be that way!'\\r\\n\\r\\n  else:\\r\\n    return 'Whatever.'"}
201	45	9cf3bfdd5f63137737c7019a	done	python	bob	\N	\N	0	2	200	2015-11-22 00:39:57	2015-11-22 00:39:57	{"bob.py":"\\r\\ndef hey(statement):\\r\\n   \\r\\n  if (statement.isupper()):\\r\\n\\treturn 'Whoa, chill out!'\\r\\n\\r\\n  elif (statement.endswith('?')):\\r\\n    return 'Sure.'\\r\\n\\r\\n  elif (statement.strip() == ''):\\r\\n\\treturn 'Fine. Be that way!'\\r\\n\\r\\n  else:\\r\\n    return 'Whatever.'"}
202	45	cc325b609efe7a30e1eb0cec	\N	javascript	bob	\N	\N	0	1	202	2015-09-07 10:45:55	2015-09-07 10:45:55	{"bob.js":"var Bob = function() {};\\n\\nBob.prototype.hey = function( input ) {\\n    'use strict';\\n\\n\\t  var answer = 'Whatever.',\\n\\t      isQuestion = input.slice( -1 ) === '?',\\n\\t      isSilence = !input.match( /\\\\S/ ),\\n\\t      isYelling = input.match( /[a-zA-Z]/g ) \\u0026\\u0026 input.toUpperCase() === input;\\n\\n\\t  if ( isYelling ) {\\n\\t  \\t  answer = 'Whoa, chill out!';\\n\\t  } else if ( isQuestion ) {\\n          answer = 'Sure.';\\n\\t  } else if ( isSilence ) {\\n          answer = 'Fine. Be that way!';\\n\\t  }\\n\\n\\t  return answer;\\n};\\n\\nmodule.exports = Bob;"}
203	45	713c2ef12ef90de07be398f0	\N	javascript	bob	\N	\N	0	2	202	2015-12-17 09:03:24	2015-12-17 09:03:24	{"bob.js":"var Bob = function() {};\\n\\nBob.prototype.hey = function( input ) {\\n    'use strict';\\n\\n\\tvar answer = 'Whatever.',\\n\\t    isQuestion = input.slice( -1 ) === '?',\\n\\t    isSilence = !input.match( /\\\\S/ ),\\n\\t    isYelling = input.match( /[a-zA-Z]/g ) \\u0026\\u0026 input.toUpperCase() === input;\\n\\n\\tif ( isYelling ) {\\n\\t  \\tanswer = 'Whoa, chill out!';\\n\\t} else if ( isQuestion ) {\\n        answer = 'Sure.';\\n\\t} else if ( isSilence ) {\\n        answer = 'Fine. Be that way!';\\n\\t}\\n\\n\\treturn answer;\\n};\\n\\nmodule.exports = Bob;"}
204	45	1ace662aabea442c1988c2d3	\N	erlang	accumulate	\N	\N	0	1	203	2015-09-26 15:53:17	2015-09-26 15:53:17	{"accumulate.erl":"-module(accumulate).\\n-compile(export_all).\\n\\naccumulate(Fn, [H|T]) -\\u003e\\n\\tOutput = Fn(H),\\n\\taccumulate(Fn,T,[Output]).\\n\\naccumulate(Fn, [H|T], Output) -\\u003e\\n\\tNewOutput = Output ++ [Fn(H)],\\n\\taccumulate(Fn,T,NewOutput);\\n\\naccumulate(_, [], Output) -\\u003e\\n\\tOutput."}
205	45	3ee167bd2ea775d2359b9713	done	javascript	pythagorean-triplet	\N	\N	0	1	206	2015-09-07 22:01:34	2015-09-07 22:01:34	{"pythagorean-triplet.js":"var Triplet = function(x,y,z){\\r\\n\\tthis.sum = function(){\\r\\n\\t\\treturn Number(x) + Number(y) + Number(z);\\r\\n\\t}\\r\\n\\tthis.product = function(){\\r\\n\\t\\treturn Number(x) * Number(y) * Number(z);\\r\\n\\t}\\r\\n\\tthis.isPythagorean = function(){\\r\\n\\t\\tif (Math.pow(x,2) + Math.pow(y,2) == Math.pow(z,2) || Math.pow(y,2) + Math.pow(z,2) == Math.pow(x,2) || Math.pow(x,2) + Math.pow(z,2) == Math.pow(y,2)){\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t} else {return false;}\\r\\n\\t}\\r\\n\\tTriplet.where = function(filter){\\r\\n\\t\\tif (!filter.minFactor){\\r\\n\\t\\t\\tfilter.minFactor = 1;\\r\\n\\t\\t}\\r\\n\\t\\tvar set = [];\\r\\n\\t\\tvar c = 0;\\r\\n\\t\\tvar as = 0;\\r\\n\\t\\tvar bs = 0;\\r\\n\\t\\tfor (var a = filter.minFactor; a \\u003c= filter.maxFactor; a++){\\r\\n\\t\\t\\tas = Math.pow(a,2);\\r\\n\\t\\t\\tfor (var b = a; b \\u003c= filter.maxFactor; b++){\\r\\n\\t\\t\\t\\tbs = Math.pow(b,2);\\r\\n\\t\\t\\t\\tc = Math.sqrt(as + bs);\\r\\n\\t\\t\\t\\tif (Math.floor(c) == c \\u0026\\u0026 c \\u003c= filter.maxFactor){\\r\\n\\t\\t\\t\\t\\tif (!filter.sum || a + b + c == filter.sum){\\r\\n\\t\\t\\t\\t\\t\\tt = new Triplet(a,b,c);\\r\\n\\t\\t\\t\\t\\t\\tif (set.indexOf(t) == -1){\\r\\n\\t\\t\\t\\t\\t\\t\\tset.push(t);\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn set;\\r\\n\\t}\\r\\n}"}
206	45	59b95a37f939e0580e6439d0	\N	python	phone-number	\N	\N	0	1	208	2015-09-07 06:09:05	2015-09-07 06:09:05	{"phone.py":"class Phone():\\n    def __init__(self, number):\\n        # validates phone number; if invalid it is set to \\"0000000000\\"\\n        number = number.replace(\\"(\\", \\"\\").replace(\\")\\", \\"\\").replace(\\"-\\", \\"\\").replace(\\" \\", \\"\\").replace(\\".\\", \\"\\")\\n        if len(number) not in range(10, 12) or (len(number) == 11 and number[0] != '1'):\\n            self.number = \\"0000000000\\"\\n            return\\n        if len(number) == 11:\\n            number = number[1:]\\n        try:\\n            n = int(number)\\n            self.number = number\\n        except ValueError:\\n            self.number = \\"0000000000\\"\\n            return\\n        \\n    def area_code(self):\\n        # return area code which is first three digits of number\\n        return self.number[:3]\\n\\n    def pretty(self):\\n        # returns number as pretty string in format: (AAA) BBB-CCCC\\n        return \\"(\\" + self.number[:3] + \\") \\" + self.number[3:6] + \\"-\\" + self.number[6:]"}
207	45	a9f9eb5f51042f5e980e54bd	\N	ruby	word-count	\N	\N	0	1	210	2015-09-24 03:56:47	2015-09-24 03:56:47	{"word_count.rb":"class Phrase\\n  VERSION = 1\\n  @phrase\\n  def initialize (phrase)\\n    @phrase = phrase.downcase.scan(/[a-z1-9]+(?:\\\\'[a-z1-9]+)?/)\\n  end\\n  def word_count\\n    result = Hash.new\\n    @phrase.each{|x| result[x] = result[x].to_i+1}\\n    result\\n  end\\nend"}
208	45	f87d87006a91a19e2e1ae59a	done	python	meetup	\N	\N	0	1	211	2015-09-13 00:13:13	2015-09-13 00:13:13	{"/python/meetup/meetup.py":"import datetime as dt\\n\\n\\nclass MeetupDayException(Exception):\\n\\n    def __init__(self, value):\\n        self.value = value\\n\\n    def __str__(self):\\n        return repr(self.value)\\n\\n\\ndef meetup_day(year, month, day, week):\\n    days = {'Monday': 0, 'Tuesday': 1, 'Wednesday': 2, 'Thursday': 3,\\n            'Friday': 4, 'Saturday': 5, 'Sunday': 6}\\n\\n#   adjust weekday\\n    meeting = dt.date(year, month, 1)\\n    if meeting.weekday() != days[day]:\\n        meeting = meeting + dt.timedelta((days[day] - meeting.weekday()) % 7)\\n\\n#  adjust week\\n    if week == \\"last\\":\\n        meeting += dt.timedelta(weeks=4)\\n        if meeting.month != month:\\n            meeting -= dt.timedelta(weeks=1)\\n    elif week == \\"teenth\\":\\n        if meeting.day \\u003c 6:\\n            meeting += dt.timedelta(weeks=2)\\n        else:\\n            meeting += dt.timedelta(weeks=1)\\n    elif week == \\"1st\\":\\n        #  do nothing\\n        pass\\n    elif week == \\"2nd\\":\\n        meeting += dt.timedelta(weeks=1)\\n    elif week == \\"3rd\\":\\n        meeting += dt.timedelta(weeks=2)\\n    elif week == \\"4th\\":\\n        meeting += dt.timedelta(weeks=3)\\n    elif week == \\"5th\\":\\n        meeting += dt.timedelta(weeks=4)\\n    else:\\n        raise ValueError(\\"Illegal argument for week\\")\\n\\n    if meeting.month != month:\\n        raise MeetupDayException(\\"Invalid week\\")\\n\\n    return meeting"}
209	45	047a90f1bea82a0183e84748	superseded	ruby	anagram	\N	\N	0	1	214	2015-11-19 14:14:12	2015-11-19 14:14:12	{"anagram.rb":"class Anagram\\n  def initialize(word)\\n    @word = word\\n    @letters = word.downcase.scan(/[\\\\w]/).sort\\n  end\\n  def match(anagrams)\\n    match = []\\n    for i in anagrams\\n      for j in i.scan(/[\\\\w]+/).sort\\n        if j.downcase == @word.downcase\\n          next\\n        end\\n        k = j.downcase.scan(/[\\\\w]/).sort\\n        if @letters == k\\n          match.push j\\n        end\\n      end\\n    end   \\n    return match\\n  end  \\nend"}
210	45	9e40322363a98cfd6702908c	done	ruby	anagram	\N	\N	0	4	214	2015-12-05 08:29:18	2015-12-05 08:29:18	{"anagram.rb":"class Anagram\\n\\n  def initialize(word)\\n    @word = word.downcase\\n    @letters = @word.chars.sort\\n  end\\n  \\n  def match(anagrams)\\n    match = anagrams.each_with_object([]) do |anagram, m|\\n      a = anagram.downcase\\n      m.push anagram if a != @word \\u0026\\u0026 a.chars.sort == @letters\\n    end\\n  end  \\n  \\nend"}
211	45	1ae3f998d934091942c3a7d6	superseded	ruby	anagram	\N	\N	0	3	214	2015-12-09 10:25:50	2015-12-09 10:25:50	{"anagram.rb":"class Anagram\\n\\n  def initialize(word)\\n    @word = word.downcase\\n    @letters = @word.chars.sort\\n  end\\n  \\n  def match(anagrams)\\n    match = anagrams.each_with_object([]) do |anagram, m|\\n      a = anagram.downcase\\n      m.push anagram if a != @word \\u0026\\u0026 a.chars.sort == @letters\\n    end\\n    return match\\n  end  \\n  \\nend"}
212	45	bea5473e7d59f747233be112	superseded	ruby	anagram	\N	\N	0	2	214	2015-12-25 00:41:57	2015-12-25 00:41:57	{"anagram.rb":"class Anagram\\n\\n  def initialize(word)\\n    @word = word.downcase\\n    @letters = @word.chars.sort\\n  end\\n  \\n  def match(anagrams)\\n    match = Array.new\\n    anagrams.each do |anagram|\\n      a = anagram.downcase\\n      if a != @word \\u0026\\u0026 a.chars.sort == @letters\\n        match.push anagram\\n      end\\n    end\\n    return match\\n  end  \\n  \\nend"}
213	45	8af555e051905d8de3dd56da	hibernating	ruby	difference-of-squares	\N	\N	0	2	215	2015-10-27 08:27:19	2015-10-27 08:27:19	{"/ruby/difference-of-squares/squares.rb":"class Squares\\n  def initialize(number)\\n    @number = number\\n  end\\n\\n  def square_of_sums\\n    sequence.reduce(:+) ** 2\\n  end\\n\\n  def sum_of_squares\\n    sequence.map { |n| n ** 2 }.reduce(:+)\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\n\\n  private\\n  attr_reader :number\\n\\n  def sequence\\n    (1..number)\\n  end\\nend"}
214	45	f69e0c8bf3d7799687566f7d	superseded	ruby	difference-of-squares	\N	\N	0	1	215	2015-12-07 04:53:39	2015-12-07 04:53:39	{"/ruby/difference-of-squares/squares.rb":"class Squares \\u003c Struct.new(:number)\\n  def square_of_sums\\n    sequence.reduce(:+) ** 2\\n  end\\n\\n  def sum_of_squares\\n    sequence.map { |n| n ** 2 }.reduce(:+)\\n  end\\n\\n  def difference\\n    square_of_sums - sum_of_squares\\n  end\\n\\n  private\\n\\n  def sequence\\n    (1..number)\\n  end\\nend"}
215	45	2c99330fb9e629cc84884c50	pending	clojure	anagram	\N	\N	0	1	218	2015-12-02 06:14:40	2015-12-02 06:14:40	{"anagram.clj":"(ns anagram)\\n\\n(defn check-word [word candidate]\\n  (if (= (.toLowerCase word)  (.toLowerCase candidate))  false\\n    (= (sort (.toLowerCase word)) (sort (.toLowerCase candidate)))))\\n\\n(defn anagrams-for [word candidates]\\n  (filter not-empty (map #(if (check-word word %) %) candidates))\\n )"}
\.


--
-- Name: submissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('submissions_id_seq', 215, true);


--
-- Data for Name: team_managers; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_managers (id, user_id, team_id) FROM stdin;
1	2	1
2	3	1
3	4	1
4	2	2
5	2	3
6	2	4
7	3	4
8	4	5
9	3	6
10	3	7
\.


--
-- Name: team_managers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_managers_id_seq', 10, true);


--
-- Data for Name: team_memberships; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY team_memberships (id, team_id, user_id, confirmed, created_at, updated_at, inviter_id) FROM stdin;
1	1	22	t	1995-03-10 01:21:36	1995-03-10 01:21:36	\N
2	1	15	t	1986-08-07 15:52:35	1986-08-07 15:52:35	\N
3	1	18	t	1976-02-02 04:44:34	1976-02-02 04:44:34	\N
4	1	23	t	1986-01-27 21:14:13	1986-01-27 21:14:13	\N
5	1	11	t	2005-11-01 22:48:08	2005-11-01 22:48:08	\N
6	1	8	t	2015-07-07 08:23:12	2015-07-07 08:23:12	\N
7	1	7	t	2002-05-25 21:48:57	2002-05-25 21:48:57	\N
8	1	30	t	2006-05-03 23:36:37	2006-05-03 23:36:37	\N
9	1	31	t	1977-08-14 05:39:11	1977-08-14 05:39:11	\N
10	1	36	t	1998-04-15 09:56:35	1998-04-15 09:56:35	\N
11	1	16	f	1982-07-29 07:31:07	1982-07-29 07:31:07	\N
12	1	17	f	1999-11-01 23:52:21	1999-11-01 23:52:21	\N
13	1	29	f	2013-03-02 08:04:52	2013-03-02 08:04:52	\N
14	1	32	f	2002-03-10 23:56:54	2002-03-10 23:56:54	\N
15	1	38	f	1977-12-28 11:13:13	1977-12-28 11:13:13	\N
16	1	42	f	1982-04-02 10:29:05	1982-04-02 10:29:05	\N
17	1	43	f	1992-07-25 23:36:31	1992-07-25 23:36:31	\N
18	1	47	f	2011-02-20 00:08:55	2011-02-20 00:08:55	\N
19	2	3	t	1977-11-12 09:01:43	1977-11-12 09:01:43	\N
20	2	36	t	2015-09-08 00:49:50	2015-09-08 00:49:50	\N
21	2	31	t	1985-04-27 21:05:58	1985-04-27 21:05:58	\N
22	2	47	t	1988-01-20 06:29:42	1988-01-20 06:29:42	\N
23	2	19	f	2012-07-10 05:20:16	2012-07-10 05:20:16	\N
24	2	38	f	1989-11-21 09:21:35	1989-11-21 09:21:35	\N
25	3	38	f	1998-10-26 14:24:31	1998-10-26 14:24:31	\N
26	3	3	f	2002-09-08 22:47:12	2002-09-08 22:47:12	\N
27	4	3	t	1972-07-13 07:49:17	1972-07-13 07:49:17	\N
28	4	32	t	2015-07-14 20:23:47	2015-07-14 20:23:47	\N
29	4	22	t	2001-06-15 04:37:14	2001-06-15 04:37:14	\N
30	4	27	t	1987-04-24 13:34:23	1987-04-24 13:34:23	\N
31	4	20	t	1998-07-11 06:46:01	1998-07-11 06:46:01	\N
32	4	25	t	1988-12-08 02:23:40	1988-12-08 02:23:40	\N
33	4	19	t	1979-02-18 20:12:01	1979-02-18 20:12:01	\N
34	4	24	t	1976-01-23 06:26:00	1976-01-23 06:26:00	\N
35	4	26	t	2010-03-31 21:07:20	2010-03-31 21:07:20	\N
36	4	21	t	1972-05-26 00:44:07	1972-05-26 00:44:07	\N
37	4	38	f	1993-05-09 23:46:44	1993-05-09 23:46:44	\N
38	4	12	f	1972-06-27 23:39:33	1972-06-27 23:39:33	\N
39	4	14	f	2001-10-02 09:27:52	2001-10-02 09:27:52	\N
40	5	32	t	2001-09-15 16:37:59	2001-09-15 16:37:59	\N
41	5	40	t	2000-02-02 01:04:59	2000-02-02 01:04:59	\N
42	5	35	t	1971-06-14 04:09:53	1971-06-14 04:09:53	\N
43	5	37	t	1979-06-26 07:00:03	1979-06-26 07:00:03	\N
44	5	33	t	1993-12-24 05:38:24	1993-12-24 05:38:24	\N
45	5	36	t	1974-02-13 19:24:55	1974-02-13 19:24:55	\N
46	5	34	t	2010-06-17 14:10:54	2010-06-17 14:10:54	\N
47	5	39	t	1977-05-12 14:07:04	1977-05-12 14:07:04	\N
48	5	41	f	2008-10-21 01:52:33	2008-10-21 01:52:33	\N
49	5	38	f	1980-09-28 13:31:26	1980-09-28 13:31:26	\N
50	5	3	f	2000-10-26 16:08:08	2000-10-26 16:08:08	\N
51	6	6	t	2009-06-13 08:08:37	2009-06-13 08:08:37	\N
52	6	7	t	1992-07-06 03:42:01	1992-07-06 03:42:01	\N
53	6	8	t	1977-08-08 05:13:49	1977-08-08 05:13:49	\N
54	6	9	t	2003-06-04 16:49:51	2003-06-04 16:49:51	\N
55	6	11	t	1980-10-04 14:39:09	1980-10-04 14:39:09	\N
56	6	12	t	2014-07-23 23:12:23	2014-07-23 23:12:23	\N
57	6	13	t	2012-05-24 00:25:12	2012-05-24 00:25:12	\N
58	6	14	t	1973-12-10 01:59:09	1973-12-10 01:59:09	\N
59	6	15	t	1977-06-07 09:03:15	1977-06-07 09:03:15	\N
60	6	16	t	1977-07-30 09:05:40	1977-07-30 09:05:40	\N
61	6	17	t	2007-01-25 10:12:35	2007-01-25 10:12:35	\N
62	6	18	t	1988-05-02 21:24:51	1988-05-02 21:24:51	\N
63	6	23	t	1976-07-03 05:30:10	1976-07-03 05:30:10	\N
64	6	28	t	1982-06-05 19:41:42	1982-06-05 19:41:42	\N
65	6	29	t	2009-09-21 08:39:32	2009-09-21 08:39:32	\N
66	6	30	t	2013-01-05 10:58:04	2013-01-05 10:58:04	\N
67	6	31	t	2011-07-14 10:28:28	2011-07-14 10:28:28	\N
68	6	32	t	1995-02-28 08:04:50	1995-02-28 08:04:50	\N
69	6	38	t	1997-11-15 08:39:52	1997-11-15 08:39:52	\N
70	6	42	t	1984-03-25 17:12:35	1984-03-25 17:12:35	\N
71	6	43	t	2002-04-28 00:26:06	2002-04-28 00:26:06	\N
72	6	44	t	2000-11-19 08:30:51	2000-11-19 08:30:51	\N
73	6	45	t	1999-10-28 22:43:56	1999-10-28 22:43:56	\N
74	6	46	t	1999-09-30 18:03:42	1999-09-30 18:03:42	\N
75	6	47	t	2005-06-29 16:15:53	2005-06-29 16:15:53	\N
76	6	48	t	2003-11-30 06:55:42	2003-11-30 06:55:42	\N
77	6	49	t	1993-04-20 10:16:21	1993-04-20 10:16:21	\N
78	7	3	t	2008-04-18 03:25:22	2008-04-18 03:25:22	\N
79	7	39	t	2010-01-28 17:34:07	2010-01-28 17:34:07	\N
80	7	32	t	1987-12-08 13:01:53	1987-12-08 13:01:53	\N
81	7	38	f	1992-05-08 15:53:39	1992-05-08 15:53:39	\N
\.


--
-- Name: team_memberships_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('team_memberships_id_seq', 81, true);


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY teams (id, slug, name, created_at, updated_at) FROM stdin;
1	baconesia	baconesia	2015-07-01 06:42:19.168872	2015-07-01 06:42:19.168872
2	chocolades	chocolades	2015-06-07 03:26:26.204109	2015-06-07 03:26:26.204109
3	ghost	ghost	2015-07-22 04:37:13.214496	2015-07-22 04:37:13.214496
4	motley	motley	2015-09-17 12:42:44.219133	2015-09-17 12:42:44.219133
5	rugrats	rugrats	2015-09-16 06:20:07.24109	2015-09-16 06:20:07.24109
6	slate	slate	2015-12-19 02:24:27.260425	2015-12-19 02:24:27.260425
7	polkadots	polkadots	2015-04-21 12:03:18.301172	2015-04-21 12:03:18.301172
\.


--
-- Name: teams_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('teams_id_seq', 7, true);


--
-- Data for Name: user_exercises; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY user_exercises (id, user_id, language, slug, iteration_count, state, key, created_at, updated_at, archived, last_iteration_at, last_activity_at, last_activity, fetched_at, skipped_at) FROM stdin;
1	9	php	rna-transcription	1	hibernating	455c548d5f61c7098db93961	2015-09-11 14:27:07	2015-09-11 14:27:07	f	2015-10-30 13:04:29	2015-10-30 13:04:29	Submitted an iteration	\N	\N
2	9	ruby	hamming	6	hibernating	b23a8e923bcb6d675b89ba56	2015-08-03 22:01:11	2015-08-03 22:01:11	f	2015-12-27 20:27:54	2015-12-27 20:27:54	Submitted an iteration	\N	\N
3	9	ocaml	bob	0	\N	f0163e79ce5d47c4b63a795d	2015-09-13 06:23:25	2015-09-13 06:23:25	f	2015-09-13 06:23:25	2015-09-13 06:23:25	\N	\N	\N
4	9	elixir	sublist	0	\N	e1be63345335d3ac988af356	2015-12-25 09:23:18	2015-12-25 09:23:18	f	2015-12-25 09:23:18	2015-12-25 09:23:18	\N	\N	\N
5	9	rust	hello-world	0	done	129387918649dd1d35cb4c29	2015-08-07 16:20:04	2015-08-07 16:20:04	t	2015-08-07 16:20:04	2015-08-07 16:20:04	\N	\N	\N
6	9	javascript	hello-world	1	pending	f95bf4e52e33d9e95a3e2d4a	2015-08-28 08:14:05	2015-08-28 08:14:05	t	2015-10-18 16:58:05	2015-10-18 16:58:05	Submitted an iteration	\N	\N
7	11	erlang	leap	0	\N	055e5fbcf94c0ad3742f9172	2015-12-28 11:12:54	2015-12-28 11:12:54	f	2015-12-28 11:12:54	2015-12-28 11:12:54	\N	\N	\N
8	11	javascript	etl	1	\N	0e0306b6b7ab6fa801b119fa	2015-12-08 01:13:53	2015-12-08 01:13:53	f	2015-12-13 19:15:36	2015-12-13 19:15:36	Submitted an iteration	2015-10-30 22:44:04.514134	\N
9	11	objective-c	bob	0	\N	ffb6906c924941e0e49128a7	2016-01-13 03:53:11	2016-01-13 03:53:11	f	2016-01-13 03:53:11	2016-01-13 03:53:11	\N	\N	\N
10	11	lisp	point-mutations	0	\N	c49425766bc9d8acc1558ca1	2015-12-01 07:42:20	2015-12-01 07:42:20	f	2015-12-01 07:42:20	2015-12-01 07:42:20	\N	\N	\N
11	11	ruby	difference-of-squares	2	done	9a3384747af0593c102f829f	2015-12-23 14:52:15	2015-12-23 14:52:15	t	2016-01-04 21:07:49	2016-01-04 21:07:49	Submitted an iteration	\N	\N
12	11	plsql	hamming	0	\N	59c554a5220e1ac87fab91a0	2015-11-30 12:27:09	2015-11-30 12:27:09	f	2015-11-30 12:27:09	2015-11-30 12:27:09	\N	\N	\N
13	11	csharp	hamming	1	pending	3430bad2ba609fce0c24de04	2015-12-13 00:20:44	2015-12-13 00:20:44	f	2015-12-23 06:47:47	2015-12-23 06:47:47	Submitted an iteration	\N	\N
14	11	ocaml	bob	0	\N	8df17c9908fa351036b84beb	2015-12-18 17:34:55	2015-12-18 17:34:55	f	2015-12-18 17:34:55	2015-12-18 17:34:55	\N	\N	\N
15	11	erlang	rna-transcription	0	\N	697767b01274bb969d4e4bf2	2016-01-04 21:32:43	2016-01-04 21:32:43	f	2016-01-04 21:32:43	2016-01-04 21:32:43	\N	\N	\N
16	11	clojure	word-count	0	\N	8febad188c78b54095649a62	2015-11-30 14:52:15	2015-11-30 14:52:15	f	2015-11-30 14:52:15	2015-11-30 14:52:15	\N	\N	\N
17	11	clojure	hello-world	0	\N	8157a5d940e8624e7ac36ef5	2015-12-03 03:25:32	2015-12-03 03:25:32	f	2015-12-03 03:25:32	2015-12-03 03:25:32	\N	\N	\N
18	11	python	etl	1	\N	e49b9722fe934d904071cef3	2015-12-10 07:48:40	2015-12-10 07:48:40	f	2015-12-23 08:56:03	2015-12-23 08:56:03	Submitted an iteration	2015-11-29 15:35:46.976795	\N
19	11	ruby	rna-transcription	1	pending	4dd23af3aa63459e2ae19198	2015-12-29 02:15:25	2015-12-29 02:15:25	f	2015-12-29 10:43:44	2015-12-29 10:43:44	Submitted an iteration	\N	\N
20	11	python	word-count	2	pending	3a4160715b4e79c31ac0aad1	2015-12-27 16:50:36	2015-12-27 16:50:36	f	2016-01-07 23:00:15	2016-01-07 23:00:15	Submitted an iteration	\N	\N
21	11	ocaml	word-count	0	\N	2ad7f9d275422ecb76abe8d2	2015-12-28 02:45:11	2015-12-28 02:45:11	f	2015-12-28 02:45:11	2015-12-28 02:45:11	\N	\N	\N
22	11	ruby	phone-number	1	done	81481d621fd1020fe642c849	2015-12-08 14:34:31	2015-12-08 14:34:31	t	2015-12-13 09:45:41	2015-12-13 09:45:41	Submitted an iteration	\N	\N
49	31	coffeescript	bob	1	hibernating	e8060e4e930ab89a98d430bd	2016-01-07 17:00:15	2016-01-07 17:00:15	t	2016-01-13 09:00:01	2016-01-13 09:00:01	Submitted an iteration	\N	\N
23	11	ruby	word-count	9	done	275a681d279e6b0f8353eda4	2015-11-29 16:12:11	2015-11-29 16:12:11	t	2016-01-06 18:46:00	2016-01-06 18:46:00	Submitted an iteration	\N	\N
24	11	java	etl	0	\N	5d07787daa41bdabcc115ebd	2015-12-06 22:23:01	2015-12-06 22:23:01	f	2015-12-06 22:23:01	2015-12-06 22:23:01	\N	\N	\N
25	11	ruby	beer-song	1	done	b3b1ec95348496e4630fee33	2015-11-29 02:27:35	2015-11-29 02:27:35	t	2015-12-24 12:58:20	2015-12-24 12:58:20	Submitted an iteration	\N	\N
26	11	elisp	hello-world	0	\N	65738225ad751e64c06ebc89	2015-12-04 16:37:50	2015-12-04 16:37:50	f	2015-12-04 16:37:50	2015-12-04 16:37:50	\N	\N	\N
27	11	python	leap	1	done	405b8abeb71775a0c7453c9a	2015-12-11 17:30:46	2015-12-11 17:30:46	t	2015-12-16 22:28:41	2015-12-16 22:28:41	Submitted an iteration	\N	\N
28	11	ruby	atbash-cipher	1	done	5152c3224cafb2aa66c367b0	2015-12-13 09:02:55	2015-12-13 09:02:55	t	2015-12-30 20:10:45	2015-12-30 20:10:45	Submitted an iteration	\N	\N
29	11	ruby	series	2	done	0e489b3190a52feaf1c89a1a	2015-12-02 05:14:30	2015-12-02 05:14:30	t	2015-12-29 16:59:05	2015-12-29 16:59:05	Submitted an iteration	\N	\N
30	11	go	house	1	done	4b50e49549e96ea8c4ab0674	2016-01-11 00:56:13	2016-01-11 00:56:13	t	2016-01-13 18:41:09	2016-01-13 18:41:09	Submitted an iteration	\N	\N
31	11	javascript	rna-transcription	4	\N	3b48a9255482c5833c6d5117	2015-12-01 12:53:56	2015-12-01 12:53:56	f	2015-12-28 11:30:19	2015-12-28 11:30:19	Submitted an iteration	2015-10-04 12:28:54.898473	\N
32	11	csharp	leap	0	\N	e22088d66808742a3202b4c1	2016-01-07 09:50:41	2016-01-07 09:50:41	f	2016-01-07 09:50:41	2016-01-07 09:50:41	\N	\N	\N
33	12	ruby	hello-world	0	done	11a88e6890a9cbb63c662d41	2015-12-29 23:04:23	2015-12-29 23:04:23	t	2015-12-29 23:04:23	2015-12-29 23:04:23	\N	\N	\N
34	15	ruby	series	2	done	046f37fbb717c946607a7cfd	2015-11-21 02:37:11	2015-11-21 02:37:11	t	2015-12-23 14:14:32	2015-12-23 14:14:32	Submitted an iteration	\N	\N
35	22	elisp	hello-world	0	\N	f8f94b33da795a87044b189e	2016-01-09 07:26:21	2016-01-09 07:26:21	f	2016-01-09 07:26:21	2016-01-09 07:26:21	\N	\N	\N
36	22	lfe	leap	0	\N	b05c8a5582badf7006aa1d50	2016-01-03 14:34:57	2016-01-03 14:34:57	f	2016-01-03 14:34:57	2016-01-03 14:34:57	\N	\N	\N
37	22	ruby	hello-world	0	done	d7e3bf35fedb969a6d58e627	2016-01-04 08:27:22	2016-01-04 08:27:22	t	2016-01-04 08:27:22	2016-01-04 08:27:22	\N	\N	\N
38	22	coffeescript	hello-world	0	\N	badf00354240b9f272dca61b	2016-01-03 12:21:27	2016-01-03 12:21:27	f	2016-01-03 12:21:27	2016-01-03 12:21:27	\N	\N	\N
39	28	ruby	hello-world	1	pending	523cc947aace1fa51ea09a07	2015-08-27 05:56:34	2015-08-27 05:56:34	f	2015-10-24 03:03:07	2015-10-24 03:03:07	Submitted an iteration	\N	\N
40	28	python	hello-world	0	done	7bd55e5a6622a642a71534ff	2015-11-05 14:53:31	2015-11-05 14:53:31	t	2015-11-05 14:53:31	2015-11-05 14:53:31	\N	\N	\N
41	28	python	word-count	2	done	d9f1ca322bd15c475fa24704	2015-09-18 08:24:04	2015-09-18 08:24:04	t	2015-12-31 13:03:57	2015-12-31 13:03:57	Submitted an iteration	\N	\N
42	28	php	rna-transcription	1	hibernating	584b1ffa1fcd22128b7ee7bd	2015-08-31 05:58:57	2015-08-31 05:58:57	f	2015-09-14 13:47:14	2015-09-14 13:47:14	Submitted an iteration	\N	\N
43	29	javascript	hello-world	0	done	4ba4b9286665d01549210306	2015-12-20 22:47:30	2015-12-20 22:47:30	t	2015-12-20 22:47:30	2015-12-20 22:47:30	\N	\N	\N
44	31	python	meetup	1	done	66926193b4c7e848e8956e6a	2016-01-01 22:55:14	2016-01-01 22:55:14	t	2016-01-06 15:02:05	2016-01-06 15:02:05	Submitted an iteration	\N	\N
45	31	swift	leap	0	\N	8e11d1ecc08988c61513ce07	2016-01-04 11:34:33	2016-01-04 11:34:33	f	2016-01-04 11:34:33	2016-01-04 11:34:33	\N	\N	\N
46	31	scala	accumulate	2	done	5d234ffc5d54021d20a47cc4	2016-01-05 05:26:00	2016-01-05 05:26:00	t	2016-01-08 19:51:12	2016-01-08 19:51:12	Submitted an iteration	\N	\N
47	31	csharp	sieve	1	hibernating	545e2ac591c9c0a1f7eb278b	2016-01-07 18:58:33	2016-01-07 18:58:33	f	2016-01-12 08:29:31	2016-01-12 08:29:31	Submitted an iteration	\N	\N
48	31	swift	hello-world	0	\N	2f1c3a606b2f9f7af3257666	2016-01-09 04:18:47	2016-01-09 04:18:47	f	2016-01-09 04:18:47	2016-01-09 04:18:47	\N	\N	\N
50	33	ruby	phone-number	1	pending	1d724ff51cbf28b9e37690ca	2015-11-20 03:34:47	2015-11-20 03:34:47	t	2015-11-30 15:27:19	2015-11-30 15:27:19	Submitted an iteration	\N	\N
51	33	python	difference-of-squares	1	done	7b99c31460894c1ee4e7d51c	2015-10-30 03:03:37	2015-10-30 03:03:37	t	2015-11-15 14:22:40	2015-11-15 14:22:40	Submitted an iteration	\N	\N
207	45	java	etl	0	\N	c4dc0b60211d7176f72cfffc	2015-11-03 21:33:46	2015-11-03 21:33:46	f	2015-11-03 21:33:46	2015-11-03 21:33:46	\N	\N	\N
52	33	javascript	hamming	1	\N	006528baba62acd6ed81b2d4	2015-09-22 19:55:14	2015-09-22 19:55:14	f	2015-12-10 14:33:18	2015-12-10 14:33:18	Submitted an iteration	2015-12-13 17:26:54.470234	\N
53	33	go	house	1	done	8080cb6122861dbc4e38bf18	2015-07-29 13:37:36	2015-07-29 13:37:36	t	2015-08-29 21:50:07	2015-08-29 21:50:07	Submitted an iteration	\N	\N
54	38	clojure	hello-world	0	\N	dcf554290a1891e684d0a29e	2015-10-19 04:38:03	2015-10-19 04:38:03	f	2015-10-19 04:38:03	2015-10-19 04:38:03	\N	\N	\N
55	38	ruby	grade-school	1	pending	02c689962bd28d71ecf4eb0f	2015-08-18 15:43:22	2015-08-18 15:43:22	f	2015-09-05 14:16:40	2015-09-05 14:16:40	Submitted an iteration	\N	\N
56	40	plsql	hamming	0	\N	76b8f024b7e88f94c2b2b08d	2015-07-19 15:28:57	2015-07-19 15:28:57	f	2015-07-19 15:28:57	2015-07-19 15:28:57	\N	\N	\N
57	40	python	hello-world	0	done	22974d0b2291a87f09b29b32	2015-08-30 21:29:20	2015-08-30 21:29:20	t	2015-08-30 21:29:20	2015-08-30 21:29:20	\N	\N	\N
58	40	python	bob	2	done	93c966f3caa8747001a4a4bb	2015-08-07 10:03:03	2015-08-07 10:03:03	t	2016-01-04 23:37:46	2016-01-04 23:37:46	Submitted an iteration	\N	\N
59	44	ruby	phone-number	1	pending	4f136cee546eadfbb4ce8d56	2015-09-09 23:12:33	2015-09-09 23:12:33	f	2015-11-04 19:23:03	2015-11-04 19:23:03	Submitted an iteration	\N	\N
60	46	csharp	sieve	1	hibernating	1b883810a4430bc2476597b1	2015-08-21 02:33:09	2015-08-21 02:33:09	f	2015-09-17 11:34:49	2015-09-17 11:34:49	Submitted an iteration	\N	\N
61	48	python	atbash-cipher	3	done	4c0d40d387e0e3ea908deba9	2015-09-30 17:12:06	2015-09-30 17:12:06	t	2015-12-14 07:37:21	2015-12-14 07:37:21	Submitted an iteration	\N	\N
62	48	ruby	robot-name	1	pending	3578475e0a91e42e5108ac6f	2015-10-24 12:53:34	2015-10-24 12:53:34	f	2015-10-29 18:16:33	2015-10-29 18:16:33	Submitted an iteration	\N	\N
63	48	ruby	hello-world	0	done	4d3008a94d2a6d5ed22c7ee4	2015-09-23 22:05:55	2015-09-23 22:05:55	t	2015-09-23 22:05:55	2015-09-23 22:05:55	\N	\N	\N
64	48	javascript	word-count	1	pending	9fab6a3a8af76855b35ba1a0	2015-09-15 17:07:36	2015-09-15 17:07:36	f	2015-12-31 01:04:49	2015-12-31 01:04:49	Submitted an iteration	\N	\N
65	48	haskell	space-age	1	done	b28e465c80ee55f99dfa908e	2015-09-12 05:37:36	2015-09-12 05:37:36	t	2015-11-09 07:41:14	2015-11-09 07:41:14	Submitted an iteration	\N	\N
66	49	ecmascript	hello-world	0	\N	ae2ca8a4632edcb87ea69200	2015-11-02 01:41:41	2015-11-02 01:41:41	f	2015-11-02 01:41:41	2015-11-02 01:41:41	\N	\N	\N
67	26	javascript	space-age	1	pending	2e2b7c888f329ebc9bddbc65	2015-12-31 11:56:43	2015-12-31 11:56:43	f	2016-01-13 21:15:40	2016-01-13 21:15:40	Submitted an iteration	\N	\N
68	26	javascript	hello-world	0	\N	1b7450324ab41b4d82f8b0d3	2015-12-14 11:46:20	2015-12-14 11:46:20	f	2015-12-14 11:46:20	2015-12-14 11:46:20	\N	\N	\N
69	26	csharp	difference-of-squares	4	pending	42972cd30cad7b02aa976c44	2015-11-28 23:39:58	2015-11-28 23:39:58	f	2016-01-13 10:28:43	2016-01-13 10:28:43	Submitted an iteration	\N	\N
70	7	go	house	1	done	522f9bf88831fd126c0305f5	2015-07-25 14:35:00	2015-07-25 14:35:00	t	2015-10-12 19:30:41	2015-10-12 19:30:41	Submitted an iteration	\N	\N
71	7	ruby	anagram	4	hibernating	6b7424319732bf81908ba333	2015-07-12 21:46:21	2015-07-12 21:46:21	f	2015-12-27 14:00:51	2015-12-27 14:00:51	Submitted an iteration	\N	\N
72	7	csharp	bob	1	hibernating	eb993599d20b780479553879	2015-11-05 13:07:47	2015-11-05 13:07:47	f	2015-11-13 10:31:33	2015-11-13 10:31:33	Submitted an iteration	\N	\N
73	23	clojure	bob	0	\N	03fc569cf9ac176fd54cf8e1	2015-11-20 07:46:47	2015-11-20 07:46:47	f	2015-11-20 07:46:47	2015-11-20 07:46:47	\N	\N	\N
74	23	objective-c	hello-world	0	\N	2b65d286def634e080622fd0	2015-11-18 17:39:48	2015-11-18 17:39:48	f	2015-11-18 17:39:48	2015-11-18 17:39:48	\N	\N	\N
75	23	haskell	anagram	3	done	24a87a4992c29293fd46c4a9	2015-11-12 03:27:50	2015-11-12 03:27:50	t	2016-01-04 14:55:28	2016-01-04 14:55:28	Submitted an iteration	\N	\N
76	23	python	bob	1	\N	364ac51e9c70893ab19687ee	2015-11-20 12:32:42	2015-11-20 12:32:42	t	2015-12-18 16:33:35	2015-12-18 16:33:35	@sopoforic commented	\N	\N
77	23	java	etl	0	\N	093c701b2384d61b69226025	2015-12-13 02:25:16	2015-12-13 02:25:16	f	2015-12-13 02:25:16	2015-12-13 02:25:16	\N	\N	\N
78	17	python	allergies	1	pending	3e6ce0936a0a5ac56b21669c	2015-08-24 01:40:23	2015-08-24 01:40:23	f	2015-12-09 14:00:13	2015-12-09 14:00:13	Submitted an iteration	\N	\N
79	17	javascript	leap	1	\N	80147112c9caba493fb510c2	2015-09-11 13:10:57	2015-09-11 13:10:57	t	2015-11-05 18:12:15	2015-11-05 18:12:15	@kyleofori commented	2015-10-23 14:36:28.33841	\N
80	17	fsharp	sum-of-multiples	0	\N	7865e50165fe3293f6dfd5b1	2015-11-05 20:39:28	2015-11-05 20:39:28	f	2015-11-05 20:39:28	2015-11-05 20:39:28	\N	\N	\N
81	17	java	bob	3	pending	50d69c9afb86dfba2e4ec923	2015-08-02 01:39:01	2015-08-02 01:39:01	f	2016-01-09 09:10:47	2016-01-09 09:10:47	Submitted an iteration	\N	\N
82	17	plsql	gigasecond	0	\N	2bbd02e766062bcaf523ca0e	2015-11-19 00:28:09	2015-11-19 00:28:09	f	2015-11-19 00:28:09	2015-11-19 00:28:09	\N	\N	\N
83	17	python	robot-name	1	pending	2e9daaeca1882b01dfcebd2f	2015-09-11 21:50:32	2015-09-11 21:50:32	f	2015-09-20 06:07:05	2015-09-20 06:07:05	Submitted an iteration	\N	\N
84	17	python	difference-of-squares	1	done	03199d8db17edbe564c10557	2015-08-10 07:03:33	2015-08-10 07:03:33	t	2015-09-08 08:48:31	2015-09-08 08:48:31	Submitted an iteration	\N	\N
85	20	javascript	etl	1	\N	1d9fc17b73789d4c2b635c7b	2015-09-11 22:09:08	2015-09-11 22:09:08	f	2015-10-31 07:50:55	2015-10-31 07:50:55	Submitted an iteration	2015-10-30 22:44:04.514134	\N
86	20	python	rna-transcription	1	hibernating	36f5a0aa1c5e5bb062e5a448	2015-07-11 09:22:47	2015-07-11 09:22:47	t	2015-10-25 13:49:37	2015-10-25 13:49:37	Submitted an iteration	\N	\N
87	20	go	house	0	\N	b15c553b8edeac2c3a1ae641	2015-08-13 22:31:44	2015-08-13 22:31:44	f	2015-08-13 22:31:44	2015-08-13 22:31:44	\N	\N	\N
88	20	javascript	hello-world	1	pending	cdbf975e428f4ebb36e66053	2015-07-03 16:01:06	2015-07-03 16:01:06	t	2015-09-03 01:52:38	2015-09-03 01:52:38	Submitted an iteration	\N	\N
89	20	lisp	gigasecond	0	\N	cd667acabc716f667065184b	2015-10-17 12:34:39	2015-10-17 12:34:39	f	2015-10-17 12:34:39	2015-10-17 12:34:39	\N	\N	\N
90	20	php	gigasecond	1	\N	f1e7f630197e7eb64f2c2b97	2015-07-22 13:01:33	2015-07-22 13:01:33	f	2015-12-30 01:03:43	2015-12-30 01:03:43	@shssoichiro commented	2015-09-22 17:53:10.229443	\N
91	20	python	word-count	2	pending	4e7d62c62228c99bcc1fde63	2015-10-14 20:52:19	2015-10-14 20:52:19	f	2015-12-22 12:31:58	2015-12-22 12:31:58	Submitted an iteration	\N	\N
92	21	javascript	hello-world	0	\N	511af2a4e7b90aa9148e0eaa	2015-10-13 00:24:48	2015-10-13 00:24:48	f	2015-10-13 00:24:48	2015-10-13 00:24:48	\N	\N	\N
93	21	perl5	bob	0	\N	f13ada1f593a437e03e122ff	2015-10-07 08:08:37	2015-10-07 08:08:37	f	2015-10-07 08:08:37	2015-10-07 08:08:37	\N	\N	\N
94	21	javascript	etl	1	\N	44a6649da189a0053ea87d04	2015-10-07 07:21:49	2015-10-07 07:21:49	f	2015-12-12 20:20:27	2015-12-12 20:20:27	Submitted an iteration	2015-10-30 22:44:04.514134	\N
95	36	ruby	bob	1	hibernating	e2d094c648b6fcd75dfc28fa	2015-10-10 08:26:46	2015-10-10 08:26:46	f	2015-11-02 01:55:46	2015-11-02 01:55:46	Submitted an iteration	\N	\N
96	36	cpp	hamming	2	pending	770010b444ae84b5bbe163da	2015-09-26 03:13:37	2015-09-26 03:13:37	f	2015-11-29 12:54:12	2015-11-29 12:54:12	Submitted an iteration	\N	\N
97	36	python	leap	1	pending	6a90b0203ba0a5221eaa24ca	2015-09-06 23:59:02	2015-09-06 23:59:02	f	2015-09-14 16:04:26	2015-09-14 16:04:26	Submitted an iteration	\N	\N
98	30	lfe	leap	0	\N	27d83bde55add5562a741621	2015-11-01 00:33:29	2015-11-01 00:33:29	f	2015-11-01 00:33:29	2015-11-01 00:33:29	\N	\N	\N
99	30	ecmascript	hello-world	0	\N	d41f70b17b201a2c4b68f793	2015-11-06 03:46:14	2015-11-06 03:46:14	f	2015-11-06 03:46:14	2015-11-06 03:46:14	\N	\N	\N
100	30	ruby	hello-world	1	pending	09267d29a7b4bd230d911751	2015-10-03 10:43:50	2015-10-03 10:43:50	f	2015-11-01 17:37:45	2015-11-01 17:37:45	Submitted an iteration	\N	\N
101	30	coffeescript	accumulate	0	\N	34bfdf2b6d49e74449410bed	2015-10-17 12:08:29	2015-10-17 12:08:29	f	2015-10-17 12:08:29	2015-10-17 12:08:29	\N	\N	\N
102	30	javascript	hello-world	1	pending	bc56cccf031619270fcb8958	2015-10-05 00:26:32	2015-10-05 00:26:32	t	2015-10-24 21:26:05	2015-10-24 21:26:05	Submitted an iteration	\N	\N
103	35	ruby	word-count	9	done	34c93bf8bc207da017245a87	2015-10-23 00:22:25	2015-10-23 00:22:25	t	2016-01-05 16:30:28	2016-01-05 16:30:28	Submitted an iteration	\N	\N
104	35	java	bob	3	pending	28b8ab264e060b9eed8768c1	2015-11-21 03:23:39	2015-11-21 03:23:39	f	2016-01-08 04:31:36	2016-01-08 04:31:36	Submitted an iteration	\N	\N
105	35	ruby	rna-transcription	2	\N	77bfb373830ed35d0ad0905e	2015-11-08 10:22:12	2015-11-08 10:22:12	t	2016-01-10 12:26:03	2016-01-10 12:26:03	Submitted an iteration	2015-09-27 05:49:33.45748	\N
106	35	javascript	bob	7	done	841da393204dab38d03a94a8	2015-11-15 02:38:00	2015-11-15 02:38:00	t	2016-01-03 16:26:04	2016-01-03 16:26:04	Submitted an iteration	\N	\N
107	14	ruby	hamming	1	done	097fb8c5c0de204e70d8ab6d	2016-01-09 19:32:48	2016-01-09 19:32:48	t	2016-01-13 09:33:00	2016-01-13 09:33:00	Submitted an iteration	\N	\N
108	14	fsharp	triangle	0	\N	37e8aca8091ed27a8a3ee328	2016-01-11 22:47:15	2016-01-11 22:47:15	f	2016-01-11 22:47:15	2016-01-11 22:47:15	\N	\N	\N
109	14	python	word-count	2	done	2a98993c881850eb2afa482c	2016-01-08 16:08:40	2016-01-08 16:08:40	t	2016-01-11 17:01:44	2016-01-11 17:01:44	Submitted an iteration	\N	\N
110	14	php	hamming	0	\N	11ba87cc070c23b7ac1da556	2016-01-10 09:59:16	2016-01-10 09:59:16	f	2016-01-10 09:59:16	2016-01-10 09:59:16	\N	\N	\N
111	41	ruby	atbash-cipher	1	done	feae01c1e198001fcfd967b7	2015-08-30 04:42:16	2015-08-30 04:42:16	t	2015-12-28 21:40:30	2015-12-28 21:40:30	Submitted an iteration	\N	\N
112	41	erlang	leap	0	\N	f93490b1b142316d4b421620	2016-01-06 05:03:19	2016-01-06 05:03:19	f	2016-01-06 05:03:19	2016-01-06 05:03:19	\N	\N	\N
113	41	python	gigasecond	2	pending	693c2ecfa02d991a55dc1fb8	2015-09-04 03:20:04	2015-09-04 03:20:04	f	2015-10-19 09:25:43	2015-10-19 09:25:43	Submitted an iteration	\N	\N
114	41	haskell	robot-name	1	\N	d868976efc7eacc095432047	2015-08-05 05:04:56	2015-08-05 05:04:56	t	2015-09-03 20:51:29	2015-09-03 20:51:29	Submitted an iteration	2015-11-24 23:25:42.941805	\N
115	41	fsharp	triangle	0	\N	17e0b34512f90fb0618fc4cd	2015-12-18 08:39:58	2015-12-18 08:39:58	f	2015-12-18 08:39:58	2015-12-18 08:39:58	\N	\N	\N
116	41	javascript	triangle	2	done	9d141148079a869e1cf26003	2015-08-22 21:41:21	2015-08-22 21:41:21	t	2015-12-12 15:32:58	2015-12-12 15:32:58	Submitted an iteration	\N	\N
117	41	ruby	phone-number	1	done	39dbb19b12911da49b88ad3a	2015-11-29 07:50:51	2015-11-29 07:50:51	t	2016-01-07 08:44:29	2016-01-07 08:44:29	Submitted an iteration	\N	\N
118	41	scala	anagram	1	pending	bb2bce8dfe8358a278bc7fff	2015-10-14 23:07:42	2015-10-14 23:07:42	f	2015-12-21 18:18:00	2015-12-21 18:18:00	Submitted an iteration	\N	\N
119	41	python	largest-series-product	1	pending	f505b9c192767ef9e20ab6ac	2015-09-10 15:48:27	2015-09-10 15:48:27	f	2015-12-01 01:51:23	2015-12-01 01:51:23	Submitted an iteration	\N	\N
120	41	php	gigasecond	1	\N	056bbe5b25eacbf02174a0ed	2015-09-13 16:06:54	2015-09-13 16:06:54	f	2015-11-07 17:07:35	2015-11-07 17:07:35	@shssoichiro commented	2015-09-22 17:53:10.229443	\N
121	41	go	house	0	\N	17dd79a5e3f9470eab53084d	2015-11-30 23:24:33	2015-11-30 23:24:33	f	2015-11-30 23:24:33	2015-11-30 23:24:33	\N	\N	\N
122	41	scheme	hello-world	0	\N	d46af5d8e1e5385166ffee54	2016-01-01 15:08:20	2016-01-01 15:08:20	f	2016-01-01 15:08:20	2016-01-01 15:08:20	\N	\N	\N
123	41	python	word-count	2	done	099d77628dd145a52c2fe8bc	2015-10-01 08:23:14	2015-10-01 08:23:14	t	2015-12-22 11:41:45	2015-12-22 11:41:45	Submitted an iteration	\N	\N
124	41	clojure	bob	0	\N	c65bfe4c36e548d80537891f	2015-11-07 06:49:39	2015-11-07 06:49:39	f	2015-11-07 06:49:39	2015-11-07 06:49:39	\N	\N	\N
125	6	lisp	bob	0	\N	2ee81b858eea676516d4b2aa	2015-05-12 23:25:03	2015-05-12 23:25:03	f	2015-05-12 23:25:03	2015-05-12 23:25:03	\N	\N	\N
126	34	ruby	phone-number	1	done	6c2ccc2a1645171ed4720e6e	2015-11-16 06:03:33	2015-11-16 06:03:33	t	2016-01-05 14:50:34	2016-01-05 14:50:34	Submitted an iteration	\N	\N
127	34	ruby	grade-school	1	pending	af3cec5e2b9962ac96ce9dac	2015-11-21 18:27:35	2015-11-21 18:27:35	f	2015-12-31 12:26:04	2015-12-31 12:26:04	Submitted an iteration	\N	\N
128	34	javascript	phone-number	0	\N	5530351c225de3a0660459ff	2015-12-15 05:34:31	2015-12-15 05:34:31	f	2015-12-15 05:34:31	2015-12-15 05:34:31	\N	\N	\N
129	34	ruby	word-count	9	done	83733c89b3f6074cecf1d467	2015-11-09 13:36:07	2015-11-09 13:36:07	t	2016-01-02 16:06:17	2016-01-02 16:06:17	Submitted an iteration	\N	\N
130	34	clojure	bob	0	\N	77ba19da893589ac35d4ee05	2015-11-30 09:48:53	2015-11-30 09:48:53	f	2015-11-30 09:48:53	2015-11-30 09:48:53	\N	\N	\N
131	34	ruby	hello-world	0	\N	d74eec1267e42b959b2cb56e	2015-12-29 10:55:26	2015-12-29 10:55:26	f	2015-12-29 10:55:26	2015-12-29 10:55:26	\N	\N	\N
132	34	cpp	anagram	1	needs_input	e71e2d81ae8db3e3008a50a2	2015-11-16 19:31:33	2015-11-16 19:31:33	f	2015-11-18 18:14:15	2015-11-18 18:14:15	Submitted an iteration	\N	\N
133	34	ruby	nucleotide-count	2	done	36ef75ac561b6be3e0f92341	2015-12-06 08:23:24	2015-12-06 08:23:24	t	2015-12-21 15:24:29	2015-12-21 15:24:29	Submitted an iteration	\N	\N
134	34	clojure	point-mutations	2	pending	196eb9e55eadbd84e9e682b3	2015-11-23 21:46:02	2015-11-23 21:46:02	f	2016-01-11 13:16:04	2016-01-11 13:16:04	Submitted an iteration	\N	\N
135	34	haskell	leap	0	\N	a21464130f523ce9c81ef515	2015-12-13 00:11:56	2015-12-13 00:11:56	f	2015-12-13 00:11:56	2015-12-13 00:11:56	\N	\N	\N
136	34	clojure	hello-world	0	\N	dc609749712ad9efc1800f07	2015-11-13 06:42:47	2015-11-13 06:42:47	f	2015-11-13 06:42:47	2015-11-13 06:42:47	\N	\N	\N
137	34	elixir	bob	0	\N	65bfa6bf7ab92bb18d14e551	2015-11-08 19:42:37	2015-11-08 19:42:37	f	2015-11-08 19:42:37	2015-11-08 19:42:37	\N	\N	\N
138	34	java	bob	3	pending	5b9fb92a7f8c45e03cd31a27	2015-11-21 12:54:35	2015-11-21 12:54:35	f	2016-01-09 22:35:14	2016-01-09 22:35:14	Submitted an iteration	\N	\N
139	34	python	gigasecond	0	\N	43c874556405bab4588bea3a	2015-11-11 20:08:52	2015-11-11 20:08:52	f	2015-11-11 20:08:52	2015-11-11 20:08:52	\N	\N	\N
140	34	java	etl	0	\N	4189fea4286dc0fad54fd3d2	2015-12-10 01:31:35	2015-12-10 01:31:35	f	2015-12-10 01:31:35	2015-12-10 01:31:35	\N	\N	\N
141	34	ruby	anagram	4	done	c534eda357e8e675c4b2bdf4	2015-12-05 05:35:09	2015-12-05 05:35:09	t	2016-01-10 23:19:30	2016-01-10 23:19:30	Submitted an iteration	\N	\N
142	34	lua	hello-world	1	pending	9241a5ec51ba38f4e886e7b3	2015-11-20 17:58:27	2015-11-20 17:58:27	f	2015-12-09 22:36:35	2015-12-09 22:36:35	Submitted an iteration	\N	\N
143	34	objective-c	hello-world	0	\N	294aae623f2e4cd281e8eb24	2015-12-10 22:52:23	2015-12-10 22:52:23	f	2015-12-10 22:52:23	2015-12-10 22:52:23	\N	\N	\N
144	34	ruby	hamming	1	hibernating	62843a5ca426542b00c8fbab	2015-11-11 05:54:17	2015-11-11 05:54:17	t	2015-12-20 17:32:27	2015-12-20 17:32:27	@sduckett commented	\N	\N
145	34	fsharp	sum-of-multiples	0	\N	a183553d0f9f003ae28188c6	2015-12-08 03:29:18	2015-12-08 03:29:18	f	2015-12-08 03:29:18	2015-12-08 03:29:18	\N	\N	\N
146	34	csharp	bob	1	pending	2175d8857c86181c5a21444a	2015-11-09 11:33:45	2015-11-09 11:33:45	f	2015-12-04 03:29:44	2015-12-04 03:29:44	Submitted an iteration	\N	\N
147	34	java	anagram	0	\N	ab8761e90c1dd6da7dc293ae	2015-11-12 22:27:49	2015-11-12 22:27:49	f	2015-11-12 22:27:49	2015-11-12 22:27:49	\N	\N	\N
148	16	php	gigasecond	1	\N	4d682b782bb1e3b3c9fec058	2015-07-13 22:46:09	2015-07-13 22:46:09	f	2015-08-16 01:36:32	2015-08-16 01:36:32	@shssoichiro commented	2015-09-22 17:53:10.229443	\N
149	16	swift	leap	0	\N	736438000058c37fd6ab32a5	2015-11-08 09:08:50	2015-11-08 09:08:50	f	2015-11-08 09:08:50	2015-11-08 09:08:50	\N	\N	\N
150	16	elisp	bob	0	\N	0655aa1b39050e3af1f1c45d	2015-08-20 17:44:03	2015-08-20 17:44:03	f	2015-08-20 17:44:03	2015-08-20 17:44:03	\N	\N	\N
151	16	ecmascript	hello-world	0	\N	8add73cc43f7ef0a2fa57a79	2015-11-22 19:06:04	2015-11-22 19:06:04	f	2015-11-22 19:06:04	2015-11-22 19:06:04	\N	\N	\N
152	16	python	grains	1	\N	14e150bdda02eaaf84c9acf4	2015-10-24 01:12:15	2015-10-24 01:12:15	f	2015-12-06 14:03:43	2015-12-06 14:03:43	Submitted an iteration	2015-10-22 15:45:45.32469	\N
153	16	haskell	leap	0	\N	ef27bb9c7d08b44d2ffb9c74	2015-12-02 13:37:44	2015-12-02 13:37:44	f	2015-12-02 13:37:44	2015-12-02 13:37:44	\N	\N	\N
154	16	clojure	hello-world	0	\N	c69e778f6e7f2c8f66e61108	2015-07-21 08:46:36	2015-07-21 08:46:36	f	2015-07-21 08:46:36	2015-07-21 08:46:36	\N	\N	\N
155	18	csharp	leap	0	\N	464082c911f83c805493883a	2016-01-12 05:36:57	2016-01-12 05:36:57	f	2016-01-12 05:36:57	2016-01-12 05:36:57	\N	\N	\N
156	18	scheme	hello-world	0	\N	3a1b2a876ce5f25a1d0a708a	2015-11-26 17:50:22	2015-11-26 17:50:22	f	2015-11-26 17:50:22	2015-11-26 17:50:22	\N	\N	\N
157	18	ruby	robot-name	1	pending	7b5734bd1a6ec94b1da2beac	2015-09-23 06:47:05	2015-09-23 06:47:05	f	2015-12-07 01:31:46	2015-12-07 01:31:46	Submitted an iteration	\N	\N
158	18	ruby	difference-of-squares	2	done	bba7d55c99143476a6b5ff0b	2015-09-23 12:51:40	2015-09-23 12:51:40	t	2016-01-01 07:44:16	2016-01-01 07:44:16	Submitted an iteration	\N	\N
159	18	python	secret-handshake	1	pending	19b1fa62e97a61a25ab07c77	2015-10-06 02:52:33	2015-10-06 02:52:33	f	2015-10-18 13:04:11	2015-10-18 13:04:11	Submitted an iteration	\N	\N
160	18	ruby	nucleotide-count	2	done	0be62b808d27b6c0d947a5ec	2015-10-24 20:46:48	2015-10-24 20:46:48	t	2016-01-05 03:34:17	2016-01-05 03:34:17	Submitted an iteration	\N	\N
161	18	perl5	grains	0	\N	0067368e3fd5b139dff592cd	2016-01-02 16:57:43	2016-01-02 16:57:43	f	2016-01-02 16:57:43	2016-01-02 16:57:43	\N	\N	\N
162	18	go	secret-handshake	0	done	4e860cd106526379a6c03644	2015-11-16 12:25:14	2015-11-16 12:25:14	t	2015-11-16 12:25:14	2015-11-16 12:25:14	\N	\N	\N
163	18	csharp	gigasecond	0	\N	6ae41b9f2226b2e4d3766621	2015-10-09 11:38:49	2015-10-09 11:38:49	f	2015-10-09 11:38:49	2015-10-09 11:38:49	\N	2015-10-23 21:57:08.153243	\N
164	18	csharp	difference-of-squares	4	pending	8991375b9058b42106e4c25c	2015-10-01 04:31:02	2015-10-01 04:31:02	f	2015-12-16 04:36:07	2015-12-16 04:36:07	Submitted an iteration	\N	\N
165	18	javascript	hamming	0	\N	79fcd77576c1ade08b490ff1	2015-11-23 16:40:46	2015-11-23 16:40:46	f	2015-11-23 16:40:46	2015-11-23 16:40:46	\N	\N	\N
166	18	ruby	hamming	1	hibernating	28f573779c6b92f4c9f64ba0	2015-11-04 14:32:00	2015-11-04 14:32:00	t	2015-11-21 00:52:14	2015-11-21 00:52:14	@sduckett commented	\N	\N
167	18	clojure	word-count	0	\N	469afd3db25af0f039ab431e	2015-12-07 16:42:41	2015-12-07 16:42:41	f	2015-12-07 16:42:41	2015-12-07 16:42:41	\N	\N	\N
168	18	lua	hello-world	0	\N	aaec5c5b3e6bf0c65c7b9843	2015-12-15 00:53:32	2015-12-15 00:53:32	f	2015-12-15 00:53:32	2015-12-15 00:53:32	\N	\N	\N
169	18	python	hello-world	0	done	6b43bd1702c8c400747bed13	2016-01-11 23:58:41	2016-01-11 23:58:41	t	2016-01-11 23:58:41	2016-01-11 23:58:41	\N	\N	\N
170	18	php	difference-of-squares	0	\N	ff32f4d65efbc304691ddc6a	2015-12-30 00:28:08	2015-12-30 00:28:08	f	2015-12-30 00:28:08	2015-12-30 00:28:08	\N	\N	\N
171	18	plsql	hamming	0	\N	78fbabfc36f199de062631c9	2015-11-22 00:11:21	2015-11-22 00:11:21	f	2015-11-22 00:11:21	2015-11-22 00:11:21	\N	\N	\N
172	24	ruby	grains	1	hibernating	9683560516e75482cb260cbc	2015-11-05 23:52:43	2015-11-05 23:52:43	f	2015-11-16 15:54:19	2015-11-16 15:54:19	Submitted an iteration	\N	\N
173	24	clojure	bob	0	\N	765cf33accc448c9254682f8	2015-12-02 22:30:13	2015-12-02 22:30:13	f	2015-12-02 22:30:13	2015-12-02 22:30:13	\N	\N	\N
174	24	ruby	phone-number	1	pending	4e02409e61f6e85bb8f4f427	2015-10-22 21:09:22	2015-10-22 21:09:22	f	2015-10-31 02:21:20	2015-10-31 02:21:20	Submitted an iteration	\N	\N
175	24	lua	hello-world	0	\N	4d1f1bb637fcdbdeb5b0a593	2015-11-11 22:33:14	2015-11-11 22:33:14	f	2015-11-11 22:33:14	2015-11-11 22:33:14	\N	\N	\N
176	24	haskell	rna-transcription	1	hibernating	a268ee59249742925d77e333	2015-11-05 18:59:51	2015-11-05 18:59:51	f	2015-11-26 18:08:13	2015-11-26 18:08:13	Submitted an iteration	\N	\N
177	42	clojure	rna-transcription	2	\N	c662244b621d06793db99f81	2015-08-26 08:13:02	2015-08-26 08:13:02	f	2015-10-31 04:35:40	2015-10-31 04:35:40	@skrblr commented	2015-12-20 18:10:59.522208	\N
178	42	cpp	bob	3	\N	5560e116171a8551522606b0	2015-06-05 05:35:07	2015-06-05 05:35:07	t	2015-07-12 08:18:26	2015-07-12 08:18:26	Submitted an iteration	\N	\N
179	42	haskell	allergies	1	hibernating	b1a78fd58ced1692c532845d	2015-09-03 13:09:37	2015-09-03 13:09:37	t	2015-10-01 10:37:38	2015-10-01 10:37:38	Submitted an iteration	\N	\N
180	42	ruby	difference-of-squares	0	\N	d4c65733ffc1addee4e5d508	2015-11-07 23:35:48	2015-11-07 23:35:48	f	2015-11-07 23:35:48	2015-11-07 23:35:48	\N	2015-12-21 05:13:29.349006	\N
181	42	objective-c	bob	0	\N	69ee23e3165c704af7bc9904	2015-06-30 14:53:20	2015-06-30 14:53:20	f	2015-06-30 14:53:20	2015-06-30 14:53:20	\N	\N	\N
182	42	ocaml	word-count	0	\N	6cc5e29c94a73a6d39087998	2015-06-22 08:41:07	2015-06-22 08:41:07	f	2015-06-22 08:41:07	2015-06-22 08:41:07	\N	\N	\N
183	42	javascript	leap	0	\N	54b08aaace6959bee86b3597	2015-10-23 03:45:06	2015-10-23 03:45:06	f	2015-10-23 03:45:06	2015-10-23 03:45:06	\N	2015-11-24 20:05:08.480044	\N
184	27	ruby	word-count	9	done	ce6e9ef4e432b985378bea56	2015-08-30 01:04:13	2015-08-30 01:04:13	t	2015-12-19 04:00:29	2015-12-19 04:00:29	Submitted an iteration	\N	\N
185	27	scala	bob	1	\N	61b360b2b08d27fab5bad9a7	2015-08-18 03:06:59	2015-08-18 03:06:59	f	2015-10-07 20:15:54	2015-10-07 20:15:54	@szafirov commented	2015-11-10 03:16:09.370688	\N
186	27	javascript	word-count	1	pending	e7c4396af6015bd942bfd41f	2015-09-17 20:27:30	2015-09-17 20:27:30	f	2016-01-08 13:45:10	2016-01-08 13:45:10	Submitted an iteration	\N	\N
187	27	ruby	bob	0	pending	708c2d298c923fdbbb9ba4d6	2015-12-05 23:23:34	2015-12-05 23:23:34	f	2015-12-05 23:23:34	2015-12-05 23:23:34	\N	\N	\N
188	27	php	hamming	0	\N	8415be48d5091ec78eefa9c0	2015-08-18 00:52:02	2015-08-18 00:52:02	f	2015-08-18 00:52:02	2015-08-18 00:52:02	\N	\N	\N
189	27	ruby	grains	1	done	33fb106a5d632c491e3a381f	2015-11-19 06:06:25	2015-11-19 06:06:25	t	2015-12-10 16:52:48	2015-12-10 16:52:48	Submitted an iteration	\N	\N
190	27	clojure	rna-transcription	2	\N	08ff2c7b3a95f4d00fe2b552	2015-09-24 04:53:08	2015-09-24 04:53:08	f	2015-11-27 01:26:12	2015-11-27 01:26:12	@skrblr commented	2015-12-20 18:10:59.522208	\N
191	27	csharp	gigasecond	0	\N	6f37e4eefe6cae3458b7361e	2015-09-03 00:48:51	2015-09-03 00:48:51	f	2015-09-03 00:48:51	2015-09-03 00:48:51	\N	2015-10-23 21:57:08.153243	\N
192	27	ruby	rna-transcription	1	done	e4f4a82ddc966be311922883	2015-11-26 10:58:57	2015-11-26 10:58:57	t	2015-12-12 06:09:25	2015-12-12 06:09:25	Submitted an iteration	\N	\N
193	27	lua	hello-world	0	\N	1d7fc6b612beefbba68e37cf	2016-01-09 12:02:47	2016-01-09 12:02:47	f	2016-01-09 12:02:47	2016-01-09 12:02:47	\N	\N	\N
194	27	php	difference-of-squares	0	\N	2d0f5bec9ad8e938712b1414	2015-10-17 14:51:16	2015-10-17 14:51:16	f	2015-10-17 14:51:16	2015-10-17 14:51:16	\N	\N	\N
195	27	php	gigasecond	1	\N	f6e11b6c1140345ea8e31657	2015-09-20 07:03:49	2015-09-20 07:03:49	f	2015-10-15 05:07:17	2015-10-15 05:07:17	@shssoichiro commented	2015-09-22 17:53:10.229443	\N
196	27	haskell	triangle	1	pending	b0310dfd459c1ada24622d83	2015-08-14 10:37:58	2015-08-14 10:37:58	f	2015-12-26 07:47:31	2015-12-26 07:47:31	Submitted an iteration	\N	\N
197	45	fsharp	sum-of-multiples	0	\N	3cbbe71fce39bb1d9d4f5c93	2015-09-18 07:28:16	2015-09-18 07:28:16	f	2015-09-18 07:28:16	2015-09-18 07:28:16	\N	\N	\N
198	45	elisp	gigasecond	0	\N	1974a5f3a947be8a21336c9a	2015-10-29 13:25:36	2015-10-29 13:25:36	f	2015-10-29 13:25:36	2015-10-29 13:25:36	\N	\N	\N
199	45	csharp	bob	1	pending	a13d49734fcca5573595fe6b	2015-10-06 07:36:00	2015-10-06 07:36:00	f	2015-11-14 21:05:23	2015-11-14 21:05:23	Submitted an iteration	\N	\N
200	45	python	bob	2	done	f4d351298e4d9594e590436d	2015-10-06 03:05:33	2015-10-06 03:05:33	t	2015-12-10 03:14:13	2015-12-10 03:14:13	Submitted an iteration	\N	\N
201	45	python	hello-world	0	done	69060b2ae2111bd3b7a40170	2015-10-30 23:47:39	2015-10-30 23:47:39	t	2015-10-30 23:47:39	2015-10-30 23:47:39	\N	\N	\N
202	45	javascript	bob	2	\N	2ff57dacd056fdd4134135b8	2015-09-07 10:45:55	2015-09-07 10:45:55	f	2015-12-25 10:18:05	2015-12-25 10:18:05	@abhisekp commented	2015-10-26 18:21:33.158197	\N
203	45	erlang	accumulate	1	\N	fd93e026f6aa94fddedfe23b	2015-09-26 15:53:17	2015-09-26 15:53:17	f	2015-12-20 02:00:36	2015-12-20 02:00:36	Submitted an iteration	2015-12-08 03:20:42.583308	\N
204	45	clojure	bob	0	\N	0025f87ef134b5c44a16c55e	2015-11-03 05:36:03	2015-11-03 05:36:03	f	2015-11-03 05:36:03	2015-11-03 05:36:03	\N	\N	\N
205	45	plsql	hamming	0	\N	79d9924137678ae28b23ac61	2015-12-24 00:58:31	2015-12-24 00:58:31	f	2015-12-24 00:58:31	2015-12-24 00:58:31	\N	\N	\N
206	45	javascript	pythagorean-triplet	1	done	491ed170c606022dfb150110	2015-09-07 22:01:34	2015-09-07 22:01:34	t	2016-01-09 05:37:03	2016-01-09 05:37:03	Submitted an iteration	\N	\N
208	45	python	phone-number	1	\N	d03181c2d3090232a007adbc	2015-09-07 06:09:05	2015-09-07 06:09:05	f	2015-12-15 12:29:53	2015-12-15 12:29:53	Submitted an iteration	2015-10-17 09:35:38.630255	\N
209	45	lisp	point-mutations	0	\N	db5e626271e308d6e5888dbb	2015-09-20 05:10:04	2015-09-20 05:10:04	f	2015-09-20 05:10:04	2015-09-20 05:10:04	\N	\N	\N
210	45	ruby	word-count	1	\N	58d21d7669ce150ed572489e	2015-09-24 03:56:47	2015-09-24 03:56:47	f	2015-12-09 02:55:42	2015-12-09 02:55:42	Submitted an iteration	2015-12-18 17:21:27.782234	\N
211	45	python	meetup	1	done	102a11d1fbacd7b4322c0fa5	2015-09-13 00:13:13	2015-09-13 00:13:13	t	2015-09-26 07:42:59	2015-09-26 07:42:59	Submitted an iteration	\N	\N
212	45	plsql	difference-of-squares	0	\N	0a4cf932e62329b79c17bd1c	2015-09-14 04:36:11	2015-09-14 04:36:11	f	2015-09-14 04:36:11	2015-09-14 04:36:11	\N	\N	\N
213	45	cpp	bob	0	\N	37b4aadd403dff325a0b30b3	2015-11-10 01:03:45	2015-11-10 01:03:45	f	2015-11-10 01:03:45	2015-11-10 01:03:45	\N	\N	\N
214	45	ruby	anagram	4	done	4b633b5caf967bba7466695f	2015-11-19 14:14:12	2015-11-19 14:14:12	t	2015-12-25 04:51:43	2015-12-25 04:51:43	Submitted an iteration	\N	\N
215	45	ruby	difference-of-squares	2	hibernating	c6b3b75c58edf623313ba409	2015-10-27 08:27:19	2015-10-27 08:27:19	f	2015-12-15 03:04:30	2015-12-15 03:04:30	Submitted an iteration	\N	\N
216	45	ruby	hello-world	0	done	eff843dbd00358cc5a609bd4	2015-11-24 13:41:32	2015-11-24 13:41:32	t	2015-11-24 13:41:32	2015-11-24 13:41:32	\N	\N	\N
217	45	objective-c	bob	0	\N	9c49f40c3223bed8d24cbbdf	2016-01-02 11:35:03	2016-01-02 11:35:03	f	2016-01-02 11:35:03	2016-01-02 11:35:03	\N	\N	\N
218	45	clojure	anagram	1	pending	dacf4589625aefe4323a3bdc	2015-12-02 06:14:40	2015-12-02 06:14:40	f	2015-12-04 10:27:50	2015-12-04 10:27:50	Submitted an iteration	\N	\N
219	45	elixir	bob	0	\N	b45f4388e5e4d1d4c9c6413c	2015-10-29 09:05:55	2015-10-29 09:05:55	f	2015-10-29 09:05:55	2015-10-29 09:05:55	\N	\N	\N
220	45	go	house	0	\N	d8cb694c189d55b4e3191215	2015-12-15 23:46:56	2015-12-15 23:46:56	f	2015-12-15 23:46:56	2015-12-15 23:46:56	\N	\N	\N
\.


--
-- Name: user_exercises_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('user_exercises_id_seq', 220, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY users (id, username, email, avatar_url, github_id, key, created_at, updated_at, onboarded_at, track_mentor, joined_as) FROM stdin;
1	rikki-	rikki-@example.com	https://avatars.githubusercontent.com/u/8341419	8341419	rtg137	2015-11-11 03:57:41.948196	2015-11-11 03:57:41.948196	\N	--- []\n	\N
6	amelie	amelie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/krystalfister/128.jpg	-56653	uuy170	2015-04-29 16:16:17.998057	2015-04-29 16:16:17.998057	\N	--- []\n	\N
7	beth	beth@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/teeragit/128.jpg	-16618	xrt429	2015-06-24 19:36:35.011465	2015-06-24 19:36:35.011465	\N	--- []\n	\N
8	claire	claire@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/enda/128.jpg	-48419	xge391	2015-07-06 08:24:45.019675	2015-07-06 08:24:45.019675	\N	--- []\n	\N
10	eve	eve@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/vocino/128.jpg	-29436	yxt849	2015-07-27 08:43:48.027733	2015-07-27 08:43:48.027733	\N	--- []\n	\N
13	grace	grace@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/pifagor/128.jpg	-70708	tcb409	2015-05-23 22:48:22.042241	2015-05-23 22:48:22.042241	\N	--- []\n	\N
14	haley	haley@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/sdidonato/128.jpg	-50241	ddj677	2016-01-07 15:18:30.044211	2016-01-07 15:18:30.044211	\N	--- []\n	\N
16	jarrod	jarrod@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/chanpory/128.jpg	-18300	iaz440	2015-06-15 06:21:36.05859	2015-06-15 06:21:36.05859	\N	--- []\n	\N
17	kieran	kieran@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/robergd/128.jpg	-51151	hlk662	2015-07-31 12:04:28.063678	2015-07-31 12:04:28.063678	\N	--- []\n	\N
18	lisa	lisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg	-77680	jxz676	2015-09-19 18:52:46.067766	2015-09-19 18:52:46.067766	\N	--- []\n	\N
19	mack	mack@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/wr/128.jpg	-56434	pnd770	2015-07-10 02:47:04.071352	2015-07-10 02:47:04.071352	\N	--- []\n	\N
20	madison	madison@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg	-81208	hle390	2015-07-01 16:51:24.075257	2015-07-01 16:51:24.075257	\N	--- []\n	\N
21	marshall	marshall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg	-22048	khq580	2015-09-29 06:35:04.078059	2015-09-29 06:35:04.078059	\N	--- []\n	\N
23	mia	mia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jakemoore/128.jpg	-13259	qcr676	2015-11-08 12:58:01.084283	2015-11-08 12:58:01.084283	\N	--- []\n	\N
24	mike	mike@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/madysondesigns/128.jpg	-44128	xki361	2015-08-24 12:42:00.087428	2015-08-24 12:42:00.087428	\N	--- []\n	\N
25	mildred	mildred@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg	-99583	wms289	2015-07-31 13:52:35.090507	2015-07-31 13:52:35.090507	\N	--- []\n	\N
26	mitchell	mitchell@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/chatyrko/128.jpg	-60396	nzy790	2015-11-18 22:58:37.093753	2015-11-18 22:58:37.093753	\N	--- []\n	\N
27	morris	morris@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/terryxlife/128.jpg	-85478	kah835	2015-08-12 01:48:10.096846	2015-08-12 01:48:10.096846	\N	--- []\n	\N
30	paula	paula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/catarino/128.jpg	-93330	rzy538	2015-09-26 21:51:37.106896	2015-09-26 21:51:37.106896	\N	--- []\n	\N
32	rachel	rachel@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg	-73203	ibd434	2015-10-13 01:42:28.11313	2015-10-13 01:42:28.11313	\N	--- []\n	\N
34	rick	rick@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/amboy00/128.jpg	-48790	oxm894	2015-11-08 08:03:19.11921	2015-11-08 08:03:19.11921	\N	--- []\n	\N
35	rita	rita@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/flashmurphy/128.jpg	-32119	dpa276	2015-10-19 19:53:04.122154	2015-10-19 19:53:04.122154	\N	--- []\n	\N
36	river	river@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg	-42607	day540	2015-08-23 08:18:12.125241	2015-08-23 08:18:12.125241	\N	--- []\n	\N
37	rolf	rolf@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/prrstn/128.jpg	-90023	sao159	2015-06-22 19:00:13.128142	2015-06-22 19:00:13.128142	\N	--- []\n	\N
39	rudi	rudi@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/anoff/128.jpg	-41649	ggx778	2015-09-07 12:42:18.134603	2015-09-07 12:42:18.134603	\N	--- []\n	\N
41	ryan	ryan@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/tomas_janousek/128.jpg	-72796	wgm551	2015-08-04 05:28:22.14096	2015-08-04 05:28:22.14096	\N	--- []\n	\N
42	shaina	shaina@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/simobenso/128.jpg	-89620	kry379	2015-05-21 02:35:23.143848	2015-05-21 02:35:23.143848	\N	--- []\n	\N
43	talia	talia@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/souuf/128.jpg	-22250	cnb418	2015-06-03 15:33:49.146931	2015-06-03 15:33:49.146931	\N	--- []\n	\N
45	vince	vince@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mrmartineau/128.jpg	-40726	yxt602	2015-09-04 23:42:37.153073	2015-09-04 23:42:37.153073	\N	--- []\n	\N
47	xavier	xavier@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ivanfilipovbg/128.jpg	-25129	gvn765	2015-05-26 03:50:55.159019	2015-05-26 03:50:55.159019	\N	--- []\n	\N
38	ruben	ruben@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/guiiipontes/128.jpg	-84952	zec483	2015-04-23 16:23:53.131261	2015-04-23 16:23:53.131261	2015-09-24 12:59:58	--- []\n	\N
9	dawson	dawson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg	-82362	vpy913	2015-08-01 09:37:58.022777	2015-08-01 09:37:58.022777	2015-09-20 08:41:52	--- []\n	\N
3	bob	bob@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/shanehudson/128.jpg	-11336	xkj229	2015-08-27 10:25:37.980808	2015-08-27 10:25:37.980808	2015-08-31 14:47:19	---\n- ruby\n- haskell\n	\N
44	ursula	ursula@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/karalek/128.jpg	-6622	xnv780	2015-09-08 17:51:13.149848	2015-09-08 17:51:13.149848	2015-10-20 15:38:51	--- []\n	\N
15	isaac	isaac@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/mikemai2awesome/128.jpg	-81377	ohv226	2015-09-27 03:16:50.047416	2015-09-27 03:16:50.047416	2015-10-05 21:29:43	--- []\n	\N
33	randall	randall@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ateneupopular/128.jpg	-41224	efb587	2015-05-07 01:28:57.116167	2015-05-07 01:28:57.116167	2015-10-09 01:00:00	--- []\n	\N
5	diana	diana@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/AM_Kn2/128.jpg	-56562	puv253	2015-07-27 01:11:33.990861	2015-07-27 01:11:33.990861	2015-10-07 21:46:58	---\n- python\n	\N
4	charlie	charlie@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/buzzusborne/128.jpg	-21910	ids591	2015-05-13 04:14:28.984524	2015-05-13 04:14:28.984524	2015-10-20 13:11:02	---\n- javascript\n- erlang\n- elixir\n	\N
28	norma	norma@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bermonpainter/128.jpg	-33877	nqn206	2015-08-17 19:30:13.100703	2015-08-17 19:30:13.100703	2015-09-02 05:34:55	--- []\n	\N
40	russ	russ@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bermonpainter/128.jpg	-72587	eql361	2015-05-28 21:53:06.137288	2015-05-28 21:53:06.137288	2015-10-05 19:32:53	--- []\n	\N
22	mary	mary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/timothycd/128.jpg	-83056	dsh436	2016-01-03 01:48:00.0812	2016-01-03 01:48:00.0812	2015-09-22 21:12:12	--- []\n	\N
29	opal	opal@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg	-66717	orj109	2015-08-15 14:05:48.103897	2015-08-15 14:05:48.103897	2015-10-21 05:14:40	--- []\n	\N
12	frederique	frederique@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/iamgarth/128.jpg	-4854	bxm795	2015-12-20 10:41:19.038786	2015-12-20 10:41:19.038786	2015-09-27 04:47:54	--- []\n	\N
11	elisa	elisa@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/ooomz/128.jpg	-97457	uvj932	2015-11-27 22:45:58.033654	2015-11-27 22:45:58.033654	2015-09-07 09:48:08	--- []\n	\N
31	quentin	quentin@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/bradenhamm/128.jpg	-14650	udj889	2016-01-01 18:28:56.110211	2016-01-01 18:28:56.110211	2015-10-28 01:18:03	--- []\n	\N
49	zachary	zachary@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg	-94255	ngj326	2015-09-29 04:47:13.164631	2015-09-29 04:47:13.164631	\N	--- []\n	\N
46	wilson	wilson@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/benefritz/128.jpg	-71942	jwo391	2015-08-05 01:13:36.156047	2015-08-05 01:13:36.156047	2015-09-03 07:37:59	--- []\n	\N
48	yvette	yvette@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/vimarethomas/128.jpg	-42962	van946	2015-09-11 14:06:39.160892	2015-09-11 14:06:39.160892	2015-10-10 07:33:02	--- []\n	\N
2	alice	alice@example.com	https://s3.amazonaws.com/uifaces/faces/twitter/robergd/128.jpg	-95142	fjl789	2015-06-30 10:32:45.975137	2015-06-30 10:32:45.975137	2015-09-13 11:29:16	---\n- clojure\n- coffeescript\n- elixir\n- go\n- haskell\n- javascript\n- objective-c\n- ocaml\n- perl5\n- python\n- ruby\n- scala\n	\N
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('users_id_seq', 49, true);


--
-- Data for Name: views; Type: TABLE DATA; Schema: public; Owner: exercism
--

COPY views (id, user_id, exercise_id, last_viewed_at, created_at, updated_at) FROM stdin;
\.


--
-- Name: views_id_seq; Type: SEQUENCE SET; Schema: public; Owner: exercism
--

SELECT pg_catalog.setval('views_id_seq', 1, false);


--
-- PostgreSQL database dump complete
--

